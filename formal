*&---------------------------------------------------------------------*
*& Report: < ZEY_GDS_RESQ_CORRECTION >
*& Author: < SRRAO > *
*& Description: < ReSQ Correction > *
*& Date: <26-03-2021> *
*& Transport Number: < SS4K900062 > *
*&---------------------------------------------------------------------*
************************************************************************
*& Date                : 05/17/2018                                    *
*& Ticket/Change Req.# : 13035                                         *
*& Requested by        : Bobino Navin                                  *
*& Developer(Company)  : Chirdip Suryawanshi (Fiserv)                  *
*& Description         : Concur Prorgam update for Costa Rica expense  *
*&                       postings using corproate card from PNC US and *
*&                       simialr intercompany scenarios                *
*& Comments:  *{Begin of CSURYAWANSHI-05172018 : Defect 13035          *
*&            *}End of CSURYAWANSHI-05172018 : Defect 13035            *
************************************************************************
*& Date                : 09/14/2020                                    *
*& Ticket/Change Req.# : 15373( Transports : DE1K922973 DE1K923042     *
*&                                           DE1K923044 )              *
*& Requested by        : Biprajit Mohapatra                            *
*& Developer(Company)  : Chirdip Suryawanshi (Fiserv)                  *
*& Description         : GS Realignment: Concur interface enhancement  *
*&                       to derive the Region IO by employee location  *
*& Comments:  *{Begin of CSURYAWANSHI-09142020 : Defect 15373          *
*&            *}End of CSURYAWANSHI-09142020 : Defect 15373            *
************************************************************************
*& Date                : 10/15/2020                                    *
*& Ticket/Change Req.# : 15371( Transports : DE2K910992                *
*& Requested by        : Naveen Samineni                               *
*& Developer(Company)  : Chirdip Suryawanshi (Fiserv)                  *
*& Description         : Concur Interface for Original Fisrt Data      *
*&                       Employees.Weekly interface from ERCCA to SAP  *
*& Comments:                                                           *
*& * Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271    *
*& * End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271      *
************************************************************************
*& Date                : 14/11/2022                                    *
*& Ticket/Change Req.# : 20134                                         *
*& Requested by        : Jagadish Penakalapati                         *
*& Developer(Company)  : Ranjitha S Rao                                *
*& Description         : posting date value should be batch date which *
*&                       is available in file passed changing it from  *
*&                       appr_date to batch_date                       *
************************************************************************
* PROGRAMMER|  DATE    |  TASK#   |  DESCRIPTION                       *
* F463AFJ   |06/12/2023|DS4K913502|Trading partner update for OFD      *
*                                 |employee while posting concur       *
*                                 |expenses                            *
* Comments: F463AFJ/1483                                               *
************************************************************************
* PROGRAMMER|  DATE    |  TASK#   |  DESCRIPTION                       *
* F463AFJ   |09/14/2023|DS4K914772|All employee Travel Expense should  *
*                                 |post in the home currency of        *
*                                 |associate. Irrespective if Billable *
*                                 |or not. This is true for all        *
*                                 |countries and currencies            *
************************************************************************
* PROGRAMMER|  DATE    |  TASK#   |  DESCRIPTION                       *
* F463AFJ   |11/16/2023|DS4K915466|Trading partner update for OFD      *
*                                 |postings only for the GL 151925     *
*Comments: F463AFJ/2009
************************************************************************
* FCJSJ22   |01/10/2024| DS4K916076|Billable is changed to Billable to
*                                  Fiserv Client for Charge Type field *
************************************************************************

*&---------------------------------------------------------------------*
*&  Include           Z_FGLI_WEEKLY_TRAVEL_CART_FORM
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_F4_APPLICATION
*&---------------------------------------------------------------------*
*       F4 File Selection from Application
*----------------------------------------------------------------------*
FORM get_f4_application .


  SELECT fileintern fileextern
    INTO CORRESPONDING FIELDS OF i_logfi
    FROM filenameci.

    SELECT SINGLE filename
      INTO CORRESPONDING FIELDS OF i_logfi
      FROM filetextci
     WHERE langu = 'E'
       AND fileintern = i_logfi-fileintern.

    APPEND i_logfi.
    CLEAR i_logfi.
  ENDSELECT.

* To get the hit list in correct order ****
  MOVE: 'FILENAMECI' TO fld_tab-tabname,
        'FILEINTERN' TO fld_tab-fieldname,
        '1' TO fld_tab-position,
        '0' TO fld_tab-offset.
  APPEND fld_tab.
  MOVE: 'FILENAMECI' TO fld_tab-tabname,
        'FILEEXTERN' TO fld_tab-fieldname,
        '2' TO fld_tab-position,
        '60' TO fld_tab-offset.
  APPEND fld_tab.
  MOVE: 'FILETEXTCI' TO fld_tab-tabname,
        'FILENAME' TO fld_tab-fieldname,
        '3' TO fld_tab-position,
        '121' TO fld_tab-offset.
  APPEND fld_tab.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield     = 'FILEINTERN'
      dynpprog     = 'ZUPLOADASSETDATA'
      dynpnr       = '1000'
      dynprofield  = 'Logical filename '
      window_title = 'List of Logical filenames'
      value_org    = 'S'
    TABLES
      value_tab    = i_logfi
      field_tab    = fld_tab
    EXCEPTIONS
      OTHERS       = 3.

  l_logical = p_file.

ENDFORM.                    " GET_F4_APPLICATION

*&---------------------------------------------------------------------*
*&      Form  GET_F4_PRESENTATION
*&---------------------------------------------------------------------*
*       F4 file selection from presentation
*----------------------------------------------------------------------*
FORM get_f4_presentation .

*-- F4 functionality for file name on Presentation Server
  DATA: l_file TYPE string.
  CALL METHOD cl_salv_test_data=>select_file
    IMPORTING
      filename = l_file.

  p_file = l_file.

ENDFORM.                    " GET_F4_PRESENTATION
*&---------------------------------------------------------------------*
*&      Form  READ_FILE_FROM_APPL
*&---------------------------------------------------------------------*
*       Read file from Application server.
*----------------------------------------------------------------------*
FORM read_file_from_appl .

* Begin of Change by CSURYAWANSHI on 07/08/2020 : Defect 15271
*  v_file2 = p_file.
* File name is concatenation of Physical file path and file name at selection screen
  CONCATENATE file_name p_fname INTO v_file2.
* End of Change by CSURYAWANSHI on 07/08/2020 : Defect 15271

  OPEN DATASET v_file2 FOR INPUT IN TEXT MODE ENCODING DEFAULT.
  IF sy-subrc NE 0.
    WRITE:/ 'Error Opening dataset'.
    EXIT.
  ENDIF.

  DO.
    READ DATASET v_file2 INTO wa_appl.
    IF sy-subrc <> 0.
      EXIT.
    ENDIF.

    PERFORM split_record USING wa_appl.
  ENDDO.
  DELETE i_file INDEX 1.
ENDFORM.                    " READ_FILE_FROM_APPL

*&---------------------------------------------------------------------*
*&      Form  READ_FILE_FROM_PRES
*&---------------------------------------------------------------------*
*       Read file from Presentation server.
*----------------------------------------------------------------------*
FORM read_file_from_pres .
  DATA : da_index TYPE i.
  REFRESH: i_file.
  TYPE-POOLS zkcd1. " Defect 3335
  DATA: l_intern   TYPE zkcd1_intern WITH HEADER LINE." Defect 3335

  v_filename = p_file.

  IF p_appl = 'X'.
    CONCATENATE file_name p_fname INTO v_filename.
    CONDENSE v_filename.
  ENDIF.

  IF p_pres = 'X'.
    PERFORM fetch_gui_upload.
  ENDIF.

*Begin of change - Defect 3335
*  CALL FUNCTION 'ZKCD_EXCEL_OLE_TO_INT_CONVERT'
*    EXPORTING
*      filename                = v_filename
*      i_begin_col             = 1
*      i_begin_row             = 2
*      i_end_col               = 256
*      i_end_row               = 9999
*    TABLES
*      intern                  = ta_kcde_cells
*    EXCEPTIONS
*      inconsistent_parameters = 1
*      upload_ole              = 2
*      OTHERS                  = 3.

  CALL FUNCTION 'ZKCD_CSV_FILE_TO_INTERN_CONVRT'
    EXPORTING
      i_filename      = v_filename
      i_separator     = ','
    TABLES
      e_intern        = l_intern
    EXCEPTIONS
      upload_csv      = 1
      upload_filetype = 2
      OTHERS          = 3.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*End of change - Defect 3335

  IF sy-subrc <> 0.
    MESSAGE 'Error opening file'(007) TYPE 'E'.
  ELSE. " Defect 3335
    ta_kcde_cells[] = l_intern[]. " Defect 3335
  ENDIF.


  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 100
      text       = 'Loading Data'.

  CHECK NOT ta_kcde_cells[] IS INITIAL.
  SORT ta_kcde_cells BY row col.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
* Check file for Row 2 and Column 21 for the value 'ORACLE' to validate if the file belongs to
* Original First Data employee
  READ TABLE ta_kcde_cells ASSIGNING FIELD-SYMBOL(<fs_cell_r2c21>) WITH KEY row = c_row
                                                                            col = c_col
                                                                            BINARY SEARCH.
  IF sy-subrc = 0 AND <fs_cell_r2c21>-value CS c_ofd.
* Set flag for Original First Data
    v_ofd_flag = c_x.
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

*** Collect data from the excel file
  LOOP AT ta_kcde_cells.
    MOVE : ta_kcde_cells-col TO da_index.

    IF da_index < 205.
      ASSIGN COMPONENT da_index OF STRUCTURE wa_file TO <fs>.
      MOVE : ta_kcde_cells-value TO <fs>.
      IF da_index = 1 OR da_index = 8.
        TRANSLATE <fs> TO UPPER CASE.
      ENDIF.
    ENDIF.
* Begin of Changes SAKOTA I118 DS4K901193

    IF ta_kcde_cells-row = '0001'.
      ASSIGN COMPONENT da_index OF STRUCTURE wa_header TO <fs_header>.
      MOVE : ta_kcde_cells-value TO <fs_header>.
    ENDIF.
* End of Changes SAKOTA I118 DS4K901193

    AT END OF row.
      IF wa_file IS INITIAL.
        EXIT.
      ENDIF.
      APPEND wa_file TO i_file.
      CLEAR wa_file.
* Begin of Changes SAKOTA I118 DS4K901193
      IF NOT wa_header IS INITIAL.
        APPEND wa_header TO i_header.
        CLEAR wa_header.
      ENDIF.
* End of Changes SAKOTA I118 DS4K901193
    ENDAT.
  ENDLOOP.
* Begin of Changes SAKOTA I118 DS4K901193

*  READ TABLE i_file INTO wa_file INDEX 1.
*  IF sy-subrc = 0.
*    APPEND wa_file to i_header.
*    CLEAR wa_file.
*  ENDIF.
* End of Changes SAKOTA I118 DS4K901193
  DELETE i_file INDEX 1." Defect 3335
ENDFORM.                    " READ_FILE_FROM_PRES
*&---------------------------------------------------------------------*
*&      Form  CALL_POSTING_BAPI
*&---------------------------------------------------------------------*
*       BAPI for Account Posting
*----------------------------------------------------------------------*
FORM call_posting_bapi USING v_mode.
  REFRESH: i_account_gl, i_account_gl_emp, i_currency,  i_currency_emp,i_extension2,i_extension2_emp.

  CLEAR: v_header,wa_currency.
  DATA : l_d(2)   TYPE n,
         l_m(2)   TYPE n,
         l_y(4)   TYPE c,
         lv_bukrs TYPE bukrs, "Defect 2612
         l_amt    TYPE p LENGTH 15 DECIMALS 2, "Defect 2612
         gv_amt   TYPE p LENGTH 15 DECIMALS 2. " Defect 3301

**{ BEGING OF LMORALES Defect 10276
*  DATA: L_GL_PNC    TYPE AKONT,
*        L_VEND_PNC  TYPE LIFNR,
*        L_EMPFB_PNC TYPE EMPFB,
*        L_PERNR_PNC LIKE PA0032-PERNR,
*        L_PRCTR_PNC TYPE PRCTR.
*
*  FIELD-SYMBOLS:  <FS_PA0032_PNC> TYPE T_PA0032.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*  CONSTANTS: C_HDFC TYPE CHAR30 VALUE 'Z_PTP_LIFNR_CC_HDFC'.
*
*  DATA:  R_VENDOR_HDFC TYPE STANDARD TABLE OF SELOPT.
*
*  DATA: L_GL_HDFC    TYPE AKONT,
*        L_VEND_HDFC  TYPE LIFNR,
*        L_PERNR_HDFC LIKE PA0032-PERNR,
*        L_PRCTR_HDFC TYPE PRCTR.
*
*  FIELD-SYMBOLS:  <FS_PA0032_HDFC> TYPE T_PA0032,
*                  <FS_HDFC>        TYPE SELOPT.
**{ END OF LMORALES Defect 11420
*
*{Begin of RALVARADO-01302018-Defect 12607
  DATA: l_gl_new    TYPE akont,
        l_vend_new  TYPE lifnr,
        l_pernr_new LIKE pa0032-pernr,
        l_prctr_new TYPE prctr.
*}End of RALVARADO-01302018-Defect 12607
*
**{ BEGING OF LMORALES Defect 9763
*  DATA: L_REFKEY1        LIKE ZGGD_GEN_XREF-REFKEY1,
*        L_GL_BARCLAYS    TYPE AKONT,
*        L_VEND_BARCLAYS  TYPE LIFNR,
*        L_PERNR_BARCLAYS LIKE PA0032-PERNR,
*        L_PRCTR_BARCLAYS TYPE PRCTR.

*{Begin of RALVARADO-01302018-Defect 12607
  DATA: it_corpcards TYPE STANDARD TABLE OF zggd_gen_xref.

  CONSTANTS: c_i         TYPE c LENGTH 1  VALUE 'I',
             c_eq        TYPE c LENGTH 2  VALUE 'EQ',
             c_corpcards TYPE c LENGTH 10 VALUE 'CORP_CARDS'.

*{Begin of CSURYAWANSHI-05172018 : Defect 13035
  TYPES : BEGIN OF t_gen_xref,
            identifier TYPE  zzidentifier                   , " Xreference Identifier
            refkey1    TYPE  zzrefkeyfield                  , " Cross reference Key
            refkey2    TYPE  zzrefkeyfield                  , " Cross reference Key
            ref1       TYPE  zzreffield                     , " Cross Reference Field
          END OF t_gen_xref.

  CONSTANTS : c_identifier  TYPE  zzidentifier   VALUE 'CORP_COMP',
              c_bill(30)    TYPE  c              VALUE 'BILLABLE TO FISERV CLIENT'.  "Defect 2063 FCJSJ22

  DATA : lv_comp_code TYPE bukrs,
         lv_refkey1   TYPE zzrefkeyfield,
         lv_refkey2   TYPE zzrefkeyfield,
         it_corpcomp  TYPE STANDARD TABLE OF t_gen_xref.

  FIELD-SYMBOLS : <fs_corpcomp> TYPE t_gen_xref.
*}End of CSURYAWANSHI-05172018 : Defect 13035

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
*  DATA : lv_ccnum   TYPE  ccnum,
*         lv_cardlen TYPE i.
*  CONSTANTS : c_0123456789 TYPE c LENGTH 10 VALUE '0123456789'.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  FIELD-SYMBOLS: <fs_corpcards>  LIKE LINE OF it_corpcards,
                 <fs_pa0032_new> TYPE t_pa0032,
                 <fs_new>        TYPE selopt.

  DATA:  r_vendor_new TYPE STANDARD TABLE OF selopt.

  DATA: r_corpcards TYPE STANDARD TABLE OF selopt,
        wa_corp     LIKE LINE OF r_corpcards,
        l_empfb_new TYPE empfb.
*}End of RALVARADO-01302018-Defect 12607

*  FIELD-SYMBOLS: <FS_VENDOR_RECORD>   TYPE Y_VENDOR_RECORD,
*                 <FS_PA0032_BARCLAYS> TYPE T_PA0032,
*                 <FS_LFB1>            TYPE Y_LFB1.
*
*  UNASSIGN: <FS_VENDOR_RECORD>,
*            <FS_PA0032_BARCLAYS>,
*            <FS_LFB1>.
*
*  CLEAR: V_FLAG_BARCLAYS,
*         L_REFKEY1,
*         L_GL_BARCLAYS,
*         L_VEND_BARCLAYS,
*         L_PERNR_BARCLAYS,
*         L_PRCTR_BARCLAYS,
*         V_HEADER_BARCLAYS .
*
*  MOVE 1 TO L_COUNT_BARCLAYS.
*
*  FREE: I_ACCOUNT_GL_BARCLAYS,
*        I_CURRENCY_BARCLAYS,
*        I_EXTENSION2_BARCLAYS.
*
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*  CLEAR: V_FLAG_PNC,
*         L_GL_PNC,
*         L_VEND_PNC,
*         L_PERNR_PNC,
*         L_PRCTR_PNC,
*         V_HEADER_PNC,
*         L_EMPFB_PNC.
*
*  FREE: I_ACCOUNT_GL_PNC,
*        I_CURRENCY_PNC,
*        I_EXTENSION2_PNC.
*
*  MOVE 1 TO L_COUNT_PNC.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*  CLEAR: V_FLAG_HDFC,
*         L_GL_HDFC,
*         L_VEND_HDFC,
*         L_PERNR_HDFC,
*         L_PRCTR_HDFC,
*         V_HEADER_HDFC.
*
*  FREE: I_ACCOUNT_GL_HDFC,
*        I_CURRENCY_HDFC,
*        I_EXTENSION2_HDFC.
*
*  MOVE 1 TO L_COUNT_HDFC.
**{ END OF LMORALES Defect 11420

*{Begin of RALVARADO-01302018-Defect 12607
  CLEAR: v_flag_new,
         l_gl_new,
         l_vend_new,
         l_pernr_new,
         l_prctr_new,
         v_header_new.

  FREE: i_account_gl_new,
        i_currency_new,
        i_extension2_new.

  MOVE 1 TO l_count_new.
*{End of RALVARADO-01302018-Defect 12607


*{ BEGING OF LMORALES Defect 10781
  DATA: l_landcc TYPE land1,
        l_landbh TYPE land1.
*{ END OF LMORALES Defect 10781


  l_count = 1.
  l_count1 = 1.

  CLEAR : wa_file,wa_currency.

  SORT i_file BY repid exp_curr.
  CLEAR : flag_emp,flag_emp1,flag_emp2. "Defect 4373
  flag_emp = flag_emp1 = flag_emp2 = 1. "Defect 4373

*{Begin of RALVARADO-01302018-Defect 12607
*  MOVE 1 TO V_FLAG_BARCLAYS. " LMORALES Defect 9763
*
*  MOVE 1 TO V_FLAG_PNC. " LMORALES Defect |0276
*
*  MOVE 1 TO V_FLAG_HDFC. " LMORALES Defect 11420

  SELECT *
    INTO TABLE it_corpcards
    FROM zggd_gen_xref
   WHERE identifier EQ c_corpcards.
** Move the select and range logic to a previous form
  IF it_corpcards[] IS NOT INITIAL.
    LOOP AT it_corpcards
      ASSIGNING <fs_corpcards>.

      CLEAR: wa_corp.

      wa_corp-sign   = c_i.
      wa_corp-option = c_eq.
      wa_corp-low    = <fs_corpcards>-refkey1.

      APPEND wa_corp TO r_corpcards.

    ENDLOOP.
*{Begin of CSURYAWANSHI-05172018 : Defect 13035
* Get corporate card company code with intercompany posting details

    SELECT
       identifier                                    " Xreference Identifier
       refkey1                                       " Cross reference Key   ( Corproate card used for payment of expenses )
       refkey2                                       " Cross reference Key   ( Company code of Employee in expense reprot )
       ref1                                          " Cross Reference Field ( Comp code of Corporate Card )
    FROM zggd_gen_xref                               " Generic Cross reference
    INTO TABLE it_corpcomp
    WHERE identifier = c_identifier .                " Xreference Identifier
    IF sy-subrc = 0.
      SORT it_corpcomp BY identifier
                          refkey1
                          refkey2     .

    ENDIF.
*}End of CSURYAWANSHI-05172018 : Defect 13035
  ENDIF.

  MOVE 1 TO v_flag_new.
*}End of RALVARADO-01302018-Defect 12607

  LOOP AT i_file INTO wa_file.

    CLEAR : l_amt,gv_amt. "Defect 2612, 3301

    IF sy-tabix = 1 .
      l_flg = ' '.

*Start Of change - Defect 2612
* For International - Header Company code comes from PSID Mapping Table
*      IF p_int = 'X'.
*        CLEAR wa_bukrs.
*        READ TABLE i_bukrs INTO wa_bukrs WITH KEY psid = wa_file-psid.
*        IF sy-subrc = 0.
*          v_header-comp_code  = wa_bukrs-bukrs.   " PSID - Company Code Mapping.
*        ENDIF.
*      ELSE.
*        v_header-comp_code = p_cc_off.  " Domestic - Header CC = Offset CC
*      ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      IF v_ofd_flag = c_x .
* Get personell no. of employee
        CLEAR : wa_pa0032,
                wa_pa0001.
        READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
        IF sy-subrc = 0.
* Read IT0001 to get company code
          READ TABLE i_pa0001 INTO wa_pa0001 WITH KEY pernr = wa_pa0032-pernr.
          IF sy-subrc = 0.
* Document header company code
            v_header-comp_code = wa_pa0001-bukrs.
          ENDIF.
        ENDIF.

* Reset sy-tabix to 1 which is changed due to PA0032 and PA0001 table reads
        sy-tabix = 1 .
* If header company code is empty , fetch it based on employee home country
        IF v_header-comp_code IS INITIAL.
          TRANSLATE wa_file-emp_home_cntry TO UPPER CASE.
          CASE wa_file-emp_home_cntry.
            WHEN 'UNITED STATES'.
* US
              v_header-comp_code = '1220'.
            WHEN 'CANADA'.
* Canada
              v_header-comp_code = '2320'.
            WHEN 'UNITED KINGDOM'.
* Canada
              v_header-comp_code = '2070'.
            WHEN 'IRELAND'.
* Ireland
              v_header-comp_code = '2450'.
            WHEN OTHERS.
          ENDCASE.
        ENDIF.
* Get offset GL Account and company code
        SELECT SINGLE ref1 ref2 FROM zggd_gen_xref
                  INTO (p_gl_off , p_cc_off) WHERE identifier = 'ERCCA_W_FD' AND refkey1 = 'GL_ACC' AND active = 'X'.

      ELSE.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

        IF wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO'.
          IF NOT wa_file-emp_dept IS INITIAL.
            CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
              EXPORTING
                input  = wa_file-emp_dept
              IMPORTING
                output = wa_file-emp_dept.

            SELECT SINGLE bukrs FROM csks INTO lv_bukrs
                 WHERE kostl = wa_file-emp_dept AND datbi EQ '99991231'.
            IF sy-subrc NE' 0'.
              wa_log-msgtype        = 'E'.
              wa_log-reference      = wa_file-repid.
              CONCATENATE 'Employee :' wa_file-pernr 'Please Check the Employee Department' INTO  wa_log-message RESPECTING BLANKS.
              APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
              wa_logref-repid = wa_file-repid.
              APPEND wa_logref TO i_logref.
              CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
              CLEAR wa_log.
              v_posting_flag = 'X'.
            ELSE.
              v_header-comp_code  = lv_bukrs.
            ENDIF.
          ELSE.
            wa_log-msgtype        = 'E'.
            wa_log-reference      = wa_file-repid.
            CONCATENATE 'Employee :' wa_file-pernr 'Department information is missing' INTO  wa_log-message RESPECTING BLANKS.
            APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
            wa_logref-repid = wa_file-repid.
            APPEND wa_logref TO i_logref.
            CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
            CLEAR wa_log.
            v_posting_flag = 'X'.
          ENDIF.
        ELSE.
          SELECT SINGLE ref1 ref2 FROM zggd_gen_xref
                    INTO (p_gl_off , p_cc_off) WHERE identifier = 'ERCCA_W' AND refkey1 = 'GL_ACC' AND active = 'X'.
          v_header-comp_code = p_cc_off.
        ENDIF.
*End Of change - Defect 2612

*{ BEGING OF LMORALES Defect 10781

        IF wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO'
       AND  wa_file-rpt_custom20 IS NOT INITIAL AND  wa_file-rpt_custom20 NE 'TEMP'.
*Previous code find the CC from the column O next select find the land1
          CLEAR l_landcc.   " Defect 19747 SAKOTA
          SELECT SINGLE land1
                   FROM t001
                   INTO l_landcc
                  WHERE bukrs EQ v_header-comp_code.

          IF sy-subrc EQ 0.

          ENDIF.

          IF wa_file-rpt_custom20 IS NOT INITIAL.
            CLEAR l_landbh.   " Defect 19747 SAKOTA
            SELECT SINGLE land1
               FROM t001
               INTO l_landbh
              WHERE bukrs EQ wa_file-rpt_custom20.

            IF sy-subrc EQ 0.

            ENDIF.

            IF l_landbh EQ 'US'.

              wa_log-msgtype        = 'E'.

              wa_log-reference      = wa_file-repid.

              CONCATENATE 'Employees home country: '
                           wa_file-emp_home_cntry
                           ' is different from payroll company code '
                           wa_file-rpt_custom20
                           ' country.'
                           INTO  wa_log-message
                           SEPARATED BY space.


              APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
              wa_logref-repid = wa_file-repid.
              APPEND wa_logref TO i_logref.
              CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
              CLEAR wa_log.

              v_posting_flag = 'X'.


            ENDIF.

            IF l_landcc NE l_landbh.

              MOVE wa_file-rpt_custom20 TO v_header-comp_code.

            ENDIF.

          ENDIF.

        ENDIF.

*{ END OF LMORALES Defect 10781

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

** HEADER DATA
      v_header-username    = sy-uname.              " User Name

      " begin of changes for defect 17587 rirawat
      IF p_appl = 'X'.

        SPLIT wa_file-approal_date AT '-' INTO l_y l_m l_d.

      ELSE.
        " end of changes for defect 17587 rirawat

        SPLIT wa_file-approal_date AT '/' INTO l_m l_d l_y.
        IF l_d < 10.
          SHIFT l_d RIGHT.
          OVERLAY l_d WITH '0'.
        ENDIF.

        IF l_m < 10.
          SHIFT l_m RIGHT.
          OVERLAY l_m WITH '0'.
        ENDIF.


        " begin of changes for defect 17587 rirawat
      ENDIF.
      " end of changes for defect 17587 rirawat

      CONCATENATE l_y l_m l_d INTO wa_file-approal_date.
      CONDENSE wa_file-approal_date.

      v_header-doc_date    = wa_file-approal_date.  " Document Date
*      v_header-comp_code   = p_bukrs.
* start of changes defect 19747 SAKOTA
      IF p_appl = 'X'.
        "Begin of changes defect 20134 FCJSJ22 14/11/2022
*        SPLIT wa_file-appr_date AT '-' INTO l_y l_m l_d.
        SPLIT wa_file-batch_date AT '-' INTO l_y l_m l_d.
      ELSE.
*        SPLIT wa_file-appr_date AT '/' INTO l_m l_d l_y.
        SPLIT wa_file-batch_date AT '/' INTO l_m l_d l_y.
        "End of changes defect 20134 FCJSJ22 14/11/2022

        IF l_d < 10.
          SHIFT l_d RIGHT.
          OVERLAY l_d WITH '0'.
        ENDIF.

        IF l_m < 10.
          SHIFT l_m RIGHT.
          OVERLAY l_m WITH '0'.
        ENDIF.
      ENDIF.
   "Begin of changes defect 20134 FCJSJ22 14/11/2022
*      CONCATENATE l_y l_m l_d INTO wa_file-appr_date.
*      CONDENSE wa_file-appr_date.
      CLEAR wa_file-batch_date.
      CONCATENATE l_y l_m l_d INTO wa_file-batch_date.
      CONDENSE wa_file-batch_date.

      v_header-pstng_date = wa_file-batch_date.
   "End of changes defect 20134 FCJSJ22 14/11/2022

*      CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*        EXPORTING
*          date_external = wa_file-appr_date
*        IMPORTING
*          date_internal = v_header-pstng_date.    " Posting Date " 19183 sakota
* End of changes defect 19747 SAKOTA

*      v_header-pstng_date  = p_posdat.              " Posting Date " 19183 sakota


      v_header-doc_type    = p_doctyp.              " Document Type
      v_header-ref_doc_no  = wa_file-repid.
*      CONCATENATE wa_file-repid wa_file-exp_curr INTO v_header-ref_doc_no SEPARATED BY space.  " Reference
      MOVE-CORRESPONDING v_header TO v_header_emp.
      v_header_emp-doc_type = pdoctyp1.
      CONCATENATE 'E' wa_file-repid INTO v_header_emp-ref_doc_no.

*{Begin of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*      MOVE-CORRESPONDING V_HEADER TO V_HEADER_BARCLAYS.
*
*      MOVE PDOCTYP1 TO  V_HEADER_BARCLAYS-DOC_TYPE.
*
*      CONCATENATE C_C WA_FILE-REPID INTO V_HEADER_BARCLAYS-REF_DOC_NO.
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*      MOVE-CORRESPONDING V_HEADER TO V_HEADER_PNC.
*
*      MOVE PDOCTYP1 TO  V_HEADER_PNC-DOC_TYPE.
*
*      CONCATENATE C_C WA_FILE-REPID INTO V_HEADER_PNC-REF_DOC_NO.
*
*      CLEAR WA_REPID.
*
*      MOVE-CORRESPONDING WA_FILE TO WA_REPID.
*
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*      MOVE-CORRESPONDING V_HEADER TO V_HEADER_HDFC.
*
*      MOVE PDOCTYP1 TO  V_HEADER_HDFC-DOC_TYPE.
*
*      CONCATENATE C_C WA_FILE-REPID INTO V_HEADER_HDFC-REF_DOC_NO.
**{ END OF LMORALES Defect 11420

      MOVE-CORRESPONDING v_header TO v_header_new.

      MOVE pdoctyp1 TO  v_header_new-doc_type.

      CONCATENATE c_c wa_file-repid INTO v_header_new-ref_doc_no.
*} End of RALVARADO-01302018-Defect 12607

    ENDIF.

*    IF  ( ( wa_file-repid NE l_repid OR  wa_file-exp_curr NE l_exp_curr ) AND sy-tabix NE 1 )  OR l_count = 997. " Defect 4946
    IF  ( wa_file-repid NE l_repid  AND sy-tabix NE 1 )  OR l_count = 997. "Defect 4946
      flag_emp = 1. " Defect 4373

*{Begin of RALVARADO-01302018-Defect 12607
*      MOVE 1 TO V_FLAG_BARCLAYS. " LMORALES Defect 9763
*
*      MOVE 1 TO V_FLAG_PNC. " LMORALES Defect 10276
*
*      MOVE 1 TO V_FLAG_HDFC. " LMORALES Defect 11420

      MOVE 1 TO v_flag_new.
*}End of RALVARADO-01302018-Defect 12607

      " start of defect 17587 rirawat
      READ TABLE i_log INTO DATA(w_log) WITH KEY msgtype = 'E'
                                 reference = l_repid.



      " if no validation error for row
      IF sy-subrc <> 0.
        "end of defect 17587 rirawat

        IF v_mode = 'X'.

          v_flag = ' '. " Dkannan - Defect 7212 -  Concur clearingaccount
          PERFORM execute_test_run USING v_flag. "Dkannan - Defect 7212 -  Concur clearingaccount
          l_flg = 'X'.
        ENDIF.



        IF v_mode = ' '.
          v_flag = ' '. " Dkannan - Defect 7212 -  Concur clearingaccount
          PERFORM call_bapi USING v_flag. " Dkannan - Defect 7212 -  Concur clearingaccount
          l_flg = 'X'.
        ENDIF.

        " start of defect 17587 rirawat
      ENDIF.
      "end of defect 17587 rirawat
** REFILLING HEADER DATA
      CLEAR : v_header,v_header_emp.
      REFRESH : i_account_gl , i_currency, i_extension2.
      REFRESH : i_account_gl_emp , i_currency_emp, i_extension2_emp.
      CLEAR : wa_currency.
      CLEAR: v_header_new,v_offset_amt_new. "defect 19773 SAKOTA
      REFRESH: i_account_gl_new , i_currency_new, i_extension2_new."defect 19773 SAKOTA
      CLEAR :v_offset_amt, v_offset_amt1, v_offset_amt2, v_offset_amt_emp,
             wa_account_gl,wa_account_gl_emp,wa_account_gl_tmp,
             wa_currency,wa_currency_tmp,gv_amt,
             wa_extension2,wa_extension2_emp,wa_extension2_tmp,wa_file_emp. "defect 19773 SAKOTA
      REFRESH: i_return,i_return_emp,i_return_check_new."defect 19773 SAKOTA
      l_count = 1.
      l_count1 = 1.

*{Begin of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*
*      CLEAR: V_HEADER_BARCLAYS.
*
*      MOVE 1 TO L_COUNT_BARCLAYS.
*
*      FREE: I_ACCOUNT_GL_BARCLAYS,
*            I_CURRENCY_BARCLAYS,
*            I_EXTENSION2_BARCLAYS.
*
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*      CLEAR: V_HEADER_PNC.
*
*      MOVE 1 TO L_COUNT_PNC.
*
*      FREE: I_ACCOUNT_GL_PNC,
*            I_CURRENCY_PNC,
*            I_EXTENSION2_PNC.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*      CLEAR: V_HEADER_HDFC.
*
*      MOVE 1 TO L_COUNT_HDFC.
*
*      FREE: I_ACCOUNT_GL_HDFC,
*            I_CURRENCY_HDFC,
*            I_EXTENSION2_HDFC.

      CLEAR: v_header_new.

      MOVE 1 TO l_count_new.

      FREE: i_account_gl_new,
            i_currency_new,
            i_extension2_new.
*}End of RALVARADO-01302018-Defect 12607


*{ END OF LMORALES Defect 11420
*      READ TABLE i_bukrs INTO wa_bukrs WITH KEY psid = wa_file-psid.
*      IF sy-subrc = 0.
*        v_header-comp_code  = wa_bukrs-bukrs.   " PSID - Company Code Mapping.
*      ENDIF.

*Start of change - Defect 2612
* For International - Header Company code comes from PSID Mapping Table
*      IF p_int = 'X'.
*        CLEAR wa_bukrs.
*        READ TABLE i_bukrs INTO wa_bukrs WITH KEY psid = wa_file-psid.
*        IF sy-subrc = 0.
*          v_header-comp_code  = wa_bukrs-bukrs.   " PSID - Company Code Mapping.
*        ENDIF.
*      ELSE.
*        v_header-comp_code = p_cc_off.  " Domestic - Header CC = Offset CC
*      ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      IF v_ofd_flag = c_x .
* Get personell no. of employee
        CLEAR : wa_pa0032,
                wa_pa0001.
* Get personnel number of employee
        READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
        IF sy-subrc = 0.
* Get company code as per HR Infotype 0001
          READ TABLE i_pa0001 INTO wa_pa0001 WITH KEY pernr = wa_pa0032-pernr.
          IF sy-subrc = 0.
* Set Header company code
            v_header-comp_code = wa_pa0001-bukrs.
          ENDIF.
        ENDIF.
* If header company code is blank , set company code based on employee home country
        IF v_header-comp_code IS INITIAL.
          TRANSLATE wa_file-emp_home_cntry TO UPPER CASE.
          CASE wa_file-emp_home_cntry.
* US
            WHEN 'UNITED STATES'.
              v_header-comp_code = '1220'.
            WHEN 'CANADA'.
* Canada
              v_header-comp_code = '2320'.
            WHEN 'UNITED KINGDOM'.
* UK
              v_header-comp_code = '2070'.
            WHEN 'IRELAND'.
* Ireland
              v_header-comp_code = '2450'.
            WHEN OTHERS.
          ENDCASE.
        ENDIF.

* Get offset GL Account and company code
        SELECT SINGLE ref1 ref2 FROM zggd_gen_xref
                  INTO (p_gl_off , p_cc_off) WHERE identifier = 'ERCCA_W_FD' AND refkey1 = 'GL_ACC' AND active = 'X'.

      ELSE.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
        IF wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO'.
          IF NOT wa_file-emp_dept IS INITIAL.
            CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
              EXPORTING
                input  = wa_file-emp_dept
              IMPORTING
                output = wa_file-emp_dept.

            SELECT SINGLE bukrs FROM csks INTO lv_bukrs
                 WHERE kostl = wa_file-emp_dept AND datbi EQ '99991231'.
            IF sy-subrc NE' 0'.
              wa_log-msgtype        = 'E'.
              wa_log-reference      = wa_file-repid.
              CONCATENATE 'Employee :' wa_file-pernr 'Please Check the Employee Department' INTO  wa_log-message RESPECTING BLANKS.
              APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
              wa_logref-repid = wa_file-repid.
              APPEND wa_logref TO i_logref.
              CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
              CLEAR wa_log.
              v_posting_flag = 'X'.
            ELSE.
              v_header-comp_code  = lv_bukrs.
            ENDIF.
          ELSE.
            wa_log-msgtype        = 'E'.
            wa_log-reference      = wa_file-repid.
            CONCATENATE 'Employee :' wa_file-pernr 'Department information is missing' INTO  wa_log-message RESPECTING BLANKS.
            APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
            wa_logref-repid = wa_file-repid.
            APPEND wa_logref TO i_logref.
            CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
            CLEAR wa_log.
            v_posting_flag = 'X'.
          ENDIF.
        ELSE.
          SELECT SINGLE ref1 ref2 FROM zggd_gen_xref
                    INTO (p_gl_off , p_cc_off) WHERE identifier = 'ERCCA_W' AND refkey1 = 'GL_ACC' AND active = 'X'.
          v_header-comp_code = p_cc_off.
        ENDIF.

*End of change - Defect 2612

*{ BEGING OF LMORALES Defect 10781

        IF wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO'
       AND  wa_file-rpt_custom20 IS NOT INITIAL AND  wa_file-rpt_custom20 NE 'TEMP'.
*Previous code find the CC from the column O next select find the land1
          CLEAR l_landcc.   " Defect 19747 SAKOTA
          SELECT SINGLE land1
                   FROM t001
                   INTO l_landcc
                  WHERE bukrs EQ v_header-comp_code.

          IF sy-subrc EQ 0.

          ENDIF.

          IF wa_file-rpt_custom20 IS NOT INITIAL.
            CLEAR l_landbh.   " Defect 19747 SAKOTA
            SELECT SINGLE land1
               FROM t001
               INTO l_landbh
              WHERE bukrs EQ wa_file-rpt_custom20.

            IF sy-subrc EQ 0.

            ENDIF.

            IF l_landbh EQ 'US'.

              wa_log-msgtype        = 'E'.

              wa_log-reference      = wa_file-repid.

              CONCATENATE 'Employees home country: '
                           wa_file-emp_home_cntry
                           ' is different from payroll company code '
                           wa_file-rpt_custom20
                           ' country.'
                           INTO  wa_log-message
                           SEPARATED BY space.


              APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
              wa_logref-repid = wa_file-repid.
              APPEND wa_logref TO i_logref.
              CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
              CLEAR wa_log.

              v_posting_flag = 'X'.


            ENDIF.

            IF l_landcc NE l_landbh.

              MOVE wa_file-rpt_custom20 TO v_header-comp_code.

            ENDIF.

          ENDIF.

        ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

*{ END OF LMORALES Defect 10781
      v_header-username    = sy-uname.              " User Name

      " begin of changes for defect 17587 rirawat
      IF p_appl = 'X'.

        SPLIT wa_file-approal_date AT '-' INTO l_y l_m l_d.


      ELSE.
        " end of changes for defect 17587 rirawat

        SPLIT wa_file-approal_date AT '/' INTO l_m l_d l_y.
        IF l_d < 10.
          SHIFT l_d RIGHT.
          OVERLAY l_d WITH '0'.
        ENDIF.

        IF l_m < 10.
          SHIFT l_m RIGHT.
          OVERLAY l_m WITH '0'.
        ENDIF.


        " begin of changes for defect 17587 rirawat
      ENDIF.
      " end of changes for defect 17587 rirawat



      CONCATENATE l_y l_m l_d INTO wa_file-approal_date.
      CONDENSE wa_file-approal_date.


      v_header-doc_date    = wa_file-approal_date.  " Document Date
* start of changes defect 19747 SAKOTA
      IF p_appl = 'X'.
    "Begin of changes defect 20134 FCJSJ22 14/11/2022
*        SPLIT wa_file-appr_date AT '-' INTO l_y l_m l_d.
        SPLIT wa_file-batch_date AT '-' INTO l_y l_m l_d.
      ELSE.
*        SPLIT wa_file-appr_date AT '/' INTO l_m l_d l_y.
        SPLIT wa_file-batch_date AT '/' INTO l_m l_d l_y.
   "End of changes defect 20134 FCJSJ22 14/11/2022

        IF l_d < 10.
          SHIFT l_d RIGHT.
          OVERLAY l_d WITH '0'.
        ENDIF.

        IF l_m < 10.
          SHIFT l_m RIGHT.
          OVERLAY l_m WITH '0'.
        ENDIF.
      ENDIF.
  "Begin of changes defect 20134 FCJSJ22 14/11/2022
*      CONCATENATE l_y l_m l_d INTO wa_file-appr_date.
*      CONDENSE wa_file-appr_date.
      CONCATENATE l_y l_m l_d INTO wa_file-batch_date.
      CONDENSE wa_file-batch_date.
      v_header-pstng_date = wa_file-batch_date.
  "End of changes defect 20134 FCJSJ22 14/11/2022

*      CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*        EXPORTING
*          date_external = wa_file-appr_date
*        IMPORTING
*          date_internal = v_header-pstng_date.    " Posting Date " 19183 sakota
* End of changes defect 19747 SAKOTA

*      v_header-pstng_date  = p_posdat.              " Posting Date<

      v_header-doc_type    = p_doctyp.              " Document Type
      v_header-ref_doc_no  = wa_file-repid.
      MOVE-CORRESPONDING v_header TO v_header_emp.
      v_header_emp-doc_type = pdoctyp1.
      CONCATENATE 'E' wa_file-repid INTO v_header_emp-ref_doc_no.

*{Begin of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*      MOVE-CORRESPONDING V_HEADER TO V_HEADER_BARCLAYS.
*
*      MOVE PDOCTYP1 TO  V_HEADER_BARCLAYS-DOC_TYPE.
*
*      CONCATENATE C_C WA_FILE-REPID INTO V_HEADER_BARCLAYS-REF_DOC_NO.
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*      MOVE-CORRESPONDING V_HEADER TO V_HEADER_PNC.
*
*      MOVE PDOCTYP1 TO  V_HEADER_PNC-DOC_TYPE.
*
*      CONCATENATE C_C WA_FILE-REPID INTO V_HEADER_PNC-REF_DOC_NO.
*
*      CLEAR WA_REPID.
*
*      MOVE-CORRESPONDING WA_FILE TO WA_REPID.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*      MOVE-CORRESPONDING V_HEADER TO V_HEADER_HDFC.
*
*      MOVE PDOCTYP1 TO  V_HEADER_HDFC-DOC_TYPE.
*
*      CONCATENATE C_C WA_FILE-REPID INTO V_HEADER_HDFC-REF_DOC_NO.
**{ END OF LMORALES Defect 11420

      MOVE-CORRESPONDING v_header TO v_header_new.

      MOVE pdoctyp1 TO  v_header_new-doc_type.

      CONCATENATE c_c wa_file-repid INTO v_header_new-ref_doc_no.
*}End of RALVARADO-01302018-Defect 12607

    ENDIF.


** ACCOUNT GL Table Data

    TRANSLATE wa_file-charge_type2 TO UPPER CASE.
    TRANSLATE wa_file-personal_exp TO UPPER CASE.


    wa_account_gl-itemno_acc = l_count.


* Added again with defect 613. SDABHADE 04/22/2011.

    wa_account_gl-gl_account = wa_file-gl_acct.

    IF wa_file-personal_exp = 'Y'.                " Personal Expense.
      wa_account_gl-gl_account = p_gl_per.
    ENDIF.

    IF wa_file-personal_exp = 'N'.                " Business Expense.
      IF wa_file-charge_type2 = 'WBS BILLABLE'(010) OR wa_file-charge_type2 = 'BILLABLE NON-WBS'(012)
        "Begin of defect 2063 FCJSJ22
*         OR wa_file-charge_type2 = 'BILLABLE'.
         OR wa_file-charge_type2 = c_bill.
       "End of defect 2063 FCJSJ22
        wa_account_gl-gl_account = p_gl_bil.
      ENDIF.
    ENDIF.
* End of Addition Defect 613


    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = wa_account_gl-gl_account
      IMPORTING
        output = wa_account_gl-gl_account.


* Commented on Jeri's Request - 01/24/2011
*    CONCATENATE wa_file-incur_date wa_file-exp_type wa_file-vendor INTO wa_account_gl-item_text SEPARATED BY space.

*Defect 920 - SDABHADE
*  CONCATENATE wa_file-incur_date wa_file-purpose INTO wa_account_gl-item_text SEPARATED BY space.
    CONCATENATE wa_file-lname wa_file-incur_date wa_file-purpose INTO wa_account_gl-item_text SEPARATED BY space.
* End of Defect 920

* Assignment Number
* Assignment Number

* Commented - Defect 613.
*    IF wa_file-charge_type2 = 'BILLABLE'.
*      wa_account_gl-alloc_nmbr = wa_file-alloc_custom.
*    ENDIF.
*    IF wa_file-charge_type2 = 'PROJECT' OR wa_file-charge_type2+0(7) = 'CAPITAL'.
*      wa_account_gl-alloc_nmbr = 'NON BILLABLE'.
*    ENDIF.
* End of Comments

* Added again with defect 613. SDABHADE 04/22/2011.
* Assignment Number

* Added - Defect 613.
    IF wa_file-charge_type2 = 'BILLABLE NON-WBS'(012) OR wa_file-charge_type2 = 'INTERCOMPANY'(013).
      wa_account_gl-alloc_nmbr = wa_file-alloc_custom.
    ELSE.
      wa_account_gl-alloc_nmbr = ' '.
    ENDIF.
* End of Additions


* Cost Centre
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = wa_file-dept
      IMPORTING
        output = wa_file-dept.

*    IF ( wa_file-charge_type IS INITIAL OR wa_file-charge_type = 0 ) AND ( wa_file-alloc_custom IS INITIAL OR wa_file-alloc_custom = 0 ).
    wa_account_gl-costcenter = wa_file-dept.
    CLEAR wa_csks.
    READ TABLE i_csks INTO wa_csks WITH KEY kostl = wa_file-dept.
    IF sy-subrc = 0.
      wa_account_gl-comp_code  = wa_csks-bukrs.
    ELSE.
*      wa_account_gl-comp_code  = v_header-comp_code  .
      wa_account_gl-comp_code  = ' '.
    ENDIF.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = wa_account_gl-costcenter
      IMPORTING
        output = wa_account_gl-costcenter.
*    ENDIF.

* WBS Element -
    IF wa_file-charge_type2 = 'WBS BILLABLE'(010) OR wa_file-charge_type2 = 'WBS NON-BILLABLE'(011).

* Item Company Code
      CLEAR wa_prps.
      wa_account_gl-wbs_element = wa_file-charge_type.
      READ TABLE i_prps INTO wa_prps WITH KEY posid = wa_file-charge_type.
      IF sy-subrc = 0.
        wa_account_gl-comp_code  = wa_prps-pbukr.
      ELSE.
*        wa_account_gl-comp_code  = v_header-comp_code  .
        wa_account_gl-comp_code  = ' '.
      ENDIF.


      CLEAR wa_account_gl-costcenter.
      CLEAR : wa_account_gl-costcenter , wa_file-alloc_custom.

    ELSE.
      wa_account_gl-wbs_element = ' '.
    ENDIF.


* Internal Order Number

    IF wa_file-charge_type2 = 'INTERNAL ORDER'(009).
      wa_account_gl-orderid = wa_file-charge_type.
*      CLEAR wa_account_gl-costcenter.
* Item Company Code
      CLEAR wa_coas.
      READ TABLE i_coas INTO wa_coas WITH KEY aufnr = wa_file-charge_type.
      IF sy-subrc = 0.
        IF NOT wa_coas-astkz EQ 'X'.
          CLEAR wa_account_gl-costcenter.
        ENDIF.
        IF NOT wa_coas-bukrs IS INITIAL.
          wa_account_gl-comp_code  = wa_coas-bukrs.
        ENDIF.
      ELSE.
*        wa_account_gl-comp_code  = v_header-comp_code  .
        wa_account_gl-comp_code  = ' '.
        CLEAR : wa_account_gl-costcenter.
      ENDIF.

*      CLEAR : wa_account_gl-costcenter , wa_file-charge_type.
      CLEAR :  wa_file-charge_type.
    ELSE.
      wa_account_gl-orderid = ' '.
    ENDIF.

*    APPEND wa_account_gl TO i_account_gl.
*    CLEAR wa_account_gl.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

** Currency Data

      wa_currency-itemno_acc     = l_count.
*Start of change - Defect 2612
*Start of defect - 1754 - F463AFJ - 09/14/2023
*      IF wa_file-charge_type2 = 'BILLABLE NON-WBS'(012) OR wa_file-charge_type2 = 'WBS BILLABLE'(010)
*         OR wa_file-charge_type2 = 'BILLABLE'.
      IF wa_file-charge_type2 = 'BILLABLE NON-WBS'(012) OR wa_file-charge_type2 = 'WBS BILLABLE'(010).
*End of defect - 1754 - F463AFJ - 09/14/2023
*      wa_currency-amt_doccur     = wa_file-spent_curr.
        wa_currency-currency       = wa_file-exp_curr.
        wa_currency-currency_iso   = wa_file-exp_curr.
*      wa_currency-amt_doccur     = wa_file-spent_curr * wa_file-perc_of_rpt_entry / 100." Defect 3301
        gv_amt = wa_file-spent_curr * wa_file-perc_of_rpt_entry." / 100." Defect 3301
        gv_amt = gv_amt / 100.
        wa_currency-amt_doccur = gv_amt." Defect 3301
*Begin of change: ReSQ Correction 26/03/2021 SRRAO SS4K900062 *
        wa_currency-amt_doccur_long =  gv_amt.
*End of change: ReSQ Correction 26/03/2021 SRRAO SS4K900062 *
      ELSE.
        wa_currency-currency       = wa_file-reimb_curr1.
        wa_currency-currency_iso   = wa_file-reimb_curr1.
        wa_currency-amt_doccur     = wa_file-amt_to_be_paid.
*Begin of change: ReSQ Correction 26/03/2021 SRRAO SS4K900062 *
        wa_currency-amt_doccur_long = wa_file-amt_to_be_paid .
*End of change: ReSQ Correction 26/03/2021 SRRAO SS4K900062 *
      ENDIF.
*    v_offset_amt = v_offset_amt + wa_file-spent_curr.    " Used for Offset.
      v_offset_amt = v_offset_amt + wa_currency-amt_doccur.
*End of change - Defect 2612

      DATA : lv_exchange_rate_hdr  TYPE ukurs_curr,
             lv_foreign_amount_hdr TYPE wrbtr,
             lv_waers              TYPE waers,
             lv_waers1             TYPE waers,
             lv_foreign_amount2    TYPE wrbtr.

      CLEAR : lv_exchange_rate_hdr,lv_foreign_amount_hdr,lv_waers.
      CLEAR : lv_foreign_amount2,lv_waers1.
      SELECT SINGLE waers INTO lv_waers1 FROM t001
                    WHERE bukrs EQ v_header-comp_code.

      MOVE : wa_file-amt_to_be_paid TO lv_foreign_amount2.

      IF NOT lv_waers1 IS INITIAL.
        "Begin of defect 20134 FCJSJ22 14/11/2022
        IF wa_file-batch_date CS '-' OR wa_file-batch_date CS '/'.
*        IF wa_file-appr_date CS '-' OR wa_file-appr_date CS '/'. "defect 19937 SAKOTA
* start of changes defect 19747 SAKOTA
          IF p_appl = 'X'.
            SPLIT wa_file-batch_date AT '-' INTO l_y l_m l_d.
*            SPLIT wa_file-appr_date AT '-' INTO l_y l_m l_d.
          ELSE.
            SPLIT wa_file-batch_date AT '/' INTO l_m l_d l_y.
*            SPLIT wa_file-appr_date AT '/' INTO l_m l_d l_y.
            "End of defect 20134 FCJSJ22 14/11/2022

            IF l_d < 10.
              SHIFT l_d RIGHT.
              OVERLAY l_d WITH '0'.
            ENDIF.

            IF l_m < 10.
              SHIFT l_m RIGHT.
              OVERLAY l_m WITH '0'.
            ENDIF.
          ENDIF.
          "Begin of defect 20134 FCJSJ22 14/11/2022
*          CONCATENATE l_y l_m l_d INTO wa_file-appr_date.
          CONCATENATE l_y l_m l_d INTO wa_file-batch_date.
*          CONDENSE wa_file-appr_date.
          CONDENSE wa_file-batch_date.
        ENDIF.                                               "defect 19937 SAKOTA
*        p_posdat = wa_file-appr_date.
        p_posdat = wa_file-batch_date.
        "End of defect 20134 FCJSJ22 14/11/2022


*        CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*          EXPORTING
*            date_external = wa_file-appr_date
*          IMPORTING
*            date_internal = p_posdat.    " Posting Date " 19183 sakota
* End of changes defect 19747 SAKOTA

        CALL FUNCTION 'CONVERT_TO_FOREIGN_CURRENCY'
          EXPORTING
            client           = sy-mandt
            date             = p_posdat
            foreign_currency = lv_waers1
*           LOCAL_AMOUNT     = wa_currency-amt_doccur
            local_amount     = lv_foreign_amount2
            local_currency   = wa_file-reimb_curr1
            rate             = 0
            type_of_rate     = 'M'
*           READ_TCURR       = 'X'
          IMPORTING
            exchange_rate    = lv_exchange_rate_hdr
            foreign_amount   = lv_foreign_amount_hdr.
*               FOREIGN_FACTOR          =
*               LOCAL_FACTOR            =
*               EXCHANGE_RATEX          =
*               DERIVED_RATE_TYPE       =
*               FIXED_RATE              =
*             EXCEPTIONS
*               NO_RATE_FOUND           = 1
*               OVERFLOW                = 2
*               NO_FACTORS_FOUND        = 3
*               NO_SPREAD_FOUND         = 4
*               DERIVED_2_TIMES         = 5
*               OTHERS                  = 6

        IF sy-subrc EQ 0.
          v_offset_amt2 = v_offset_amt2 + lv_foreign_amount_hdr.
*          v_offset_amt2 = v_offset_amt2 + WA_FILE-AMT_TO_BE_PAID.
        ENDIF.
      ELSE.
      ENDIF.

      IF wa_file-personal_exp EQ 'N'. "DEFECT 4946
        APPEND wa_currency TO i_currency.
      ENDIF. ""DEFECT 4946

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

*{ BEGING OF LMORALES Defect 10276

*    IF wa_file-temp15 EQ 'EMPLOYEE' AND wa_file-emp_home_cntry NE 'UNITED STATES'. Defect 4946
*    IF ( wa_file-temp15 EQ 'EMPLOYEE' AND wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO')  OR
*       ( wa_file-temp13 EQ 'EMPLOYEE' AND wa_file-temp15 EQ 'COMPANY' AND wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO').

    IF ( wa_file-temp15 EQ 'EMPLOYEE')  OR
       ( wa_file-temp13 EQ 'EMPLOYEE' AND wa_file-temp15 EQ 'COMPANY').
*       AND WA_FILE-PERSONAL_EXP NE 'N'. Defect 6059

*{ END OF LMORALES Defect 10276

      DATA: lv_lifnr TYPE lifnr,
            lv_akont TYPE akont.
      CLEAR : lv_lifnr,lv_akont.

      READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.

      SELECT SINGLE lifnr akont INTO (lv_lifnr, lv_akont) FROM lfb1
                          WHERE pernr = wa_pa0032-pernr
                            AND bukrs =  v_header-comp_code.
      IF sy-subrc NE 0.
        wa_log-msgtype        = 'E'.
        CONCATENATE 'E' wa_file-repid INTO wa_log-reference.
        CONCATENATE 'Vendor not found for : ' wa_pa0032-pernr INTO wa_log-message RESPECTING BLANKS.
        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = wa_file-repid.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
        v_posting_flag = 'X'.
      ENDIF.
      wa_currency-itemno_acc      = l_count1.
      wa_currency-currency       = wa_file-reimb_curr1.
      wa_currency-currency_iso   = wa_file-reimb_curr1.
      wa_currency-amt_doccur     = wa_file-amt_to_be_paid * -1.
*Begin of change: ReSQ Correction 26/03/2021 SRRAO SS4K900062 *
      wa_currency-amt_doccur_long = wa_file-amt_to_be_paid * -1.
*End of change: ReSQ Correction 26/03/2021 RNARASIMMAN SS4K900062 *
      v_offset_amt_emp = v_offset_amt_emp + wa_currency-amt_doccur.
      IF flag_emp EQ 1. "Defect 4373
        APPEND wa_currency TO i_currency_emp.
        CLEAR wa_currency.
*        flag_emp = flag_emp + 1. "Defect 4373
      ELSE. "Defect 4373
        wa_currency-amt_doccur = v_offset_amt_emp. "Defect 4373
**        MODIFY i_currency_emp FROM wa_currency INDEX 1 TRANSPORTING amt_doccur. "Defect 4373  " --Defect 17137 CSURYAWANSHI 10/21/21
        wa_currency-amt_doccur = v_offset_amt_emp.
        wa_currency-amt_doccur_long = v_offset_amt_emp.                           " ++Defect 17137 CSURYAWANSHI 12/02/21
        MODIFY i_currency_emp FROM wa_currency INDEX 1 TRANSPORTING amt_doccur amt_doccur_long.  " ++Defect 17137 CSURYAWANSHI 12/02/21

      ENDIF.

    ENDIF.

*{Begin of RALVARADO-01302018-Defect 12607reseq
**{ BEGING OF LMORALES Defect 9763
**Validate if colum is BARCLAYS EMEA
*    IF  WA_FILE-TEMP15 EQ TEXT-BCE
*    OR  WA_FILE-TEMP13 EQ TEXT-BCE.
*
*      UNASSIGN: <FS_PA0032_BARCLAYS>,
*                <FS_VENDOR_RECORD>.
*
*      CLEAR: L_REFKEY1,
*             L_GL_BARCLAYS,
*             L_VEND_BARCLAYS,
*             L_PERNR_BARCLAYS..
*
**Search vendor
**{ BEGING OF LMORALES Defect 10068
**For Identifying the Vendor using Currency Key use company code
**currency key instead of taking currency key from the input file column V
**new change use the determinated CC from the header v_header-comp_code
**      PERFORM f_fetch_vendor USING    wa_file-rpt_custom11
*      PERFORM F_FETCH_VENDOR USING V_HEADER-COMP_CODE
*                             CHANGING L_VEND_BARCLAYS
*                                      L_GL_BARCLAYS.
*
*      IF L_VEND_BARCLAYS IS INITIAL
*      OR L_GL_BARCLAYS   IS INITIAL.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        CONCATENATE C_E
*                    WA_FILE-REPID
*               INTO WA_LOG-REFERENCE.
*
*        CONCATENATE TEXT-E01
*                    WA_FILE-REIMB_CURR1
*               INTO WA_LOG-MESSAGE RESPECTING BLANKS.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*        V_POSTING_FLAG = 'X'.
*
*
*      ENDIF.
*
**      READ TABLE i_vendor_record
**        ASSIGNING <fs_vendor_record>
**        WITH KEY reimb_curr1 = wa_file-reimb_curr1.
**
**      IF sy-subrc EQ 0
**     AND <fs_vendor_record> IS ASSIGNED.
**
**        MOVE <fs_vendor_record>-lifnr TO l_vend_barclays.
**
**        MOVE <fs_vendor_record>-akont TO l_gl_barclays.
**
**      ELSE.
**
**        MOVE c_e TO wa_log-msgtype.
**
**        CONCATENATE c_e
**                    wa_file-repid
**               INTO wa_log-reference.
**
**        CONCATENATE text-e01
**                    wa_file-reimb_curr1
**               INTO wa_log-message RESPECTING BLANKS.
**
**        APPEND wa_log TO i_log.
**
**        CLEAR wa_log.
**
**        v_posting_flag = 'X'.
**D OF LMORALES Defect 10068
**Accumulating expense lines for posting
**Acc
**      ENDIF.
**{ ENumulate by qualifying lines (Column FI or FG = BARCLAYS EMEA)
**By trip by currency same as employee ZN document
*      CLEAR WA_CURRENCY_BARCLAYS.
*
*      MOVE L_COUNT_BARCLAYS    TO WA_CURRENCY_BARCLAYS-ITEMNO_ACC.
*
*      MOVE WA_FILE-REIMB_CURR1 TO WA_CURRENCY_BARCLAYS-CURRENCY.
*
*      MOVE WA_FILE-REIMB_CURR1 TO WA_CURRENCY_BARCLAYS-CURRENCY_ISO.
*
*      WA_CURRENCY_BARCLAYS-AMT_DOCCUR = WA_FILE-AMT_TO_BE_PAID * -1.
*
*      V_OFFSET_AMT_BARCLAYS = V_OFFSET_AMT_BARCLAYS + WA_CURRENCY_BARCLAYS-AMT_DOCCUR.
*
*      IF V_FLAG_BARCLAYS EQ 1. "Defect 4373
*
*        APPEND WA_CURRENCY_BARCLAYS TO I_CURRENCY_BARCLAYS.
*
*        CLEAR WA_CURRENCY_BARCLAYS.
*
*      ELSE.
*
*        MOVE  V_OFFSET_AMT_BARCLAYS TO WA_CURRENCY_BARCLAYS-AMT_DOCCUR. "Defect 4373
*
*        MODIFY I_CURRENCY_BARCLAYS FROM WA_CURRENCY_BARCLAYS INDEX 1 TRANSPORTING AMT_DOCCUR. "Defect 4373
*      ENDIF.
*
*    ENDIF.
*
**{ END OF LMORALES Defect 9763
*
*
*
**{ BEGING OF LMORALES Defect 10276
**Validate if colum is PNC US or PNC Canada
*    IF  ( WA_FILE-TEMP15 EQ TEXT-PNC OR WA_FILE-TEMP15 EQ TEXT-PNU )
*    OR  ( WA_FILE-TEMP13 EQ TEXT-PNC OR WA_FILE-TEMP13 EQ TEXT-PNU ).
*
*      CLEAR: L_GL_PNC,
*             L_VEND_PNC,
*             L_PERNR_PNC.
*
**Search vendor
*      PERFORM F_FETCH_VENDOR_PNC USING    V_HEADER-COMP_CODE
*                                 CHANGING L_VEND_PNC
*                                          L_GL_PNC
*                                          L_EMPFB_PNC.
*
**      IF l_vend_pnc IS INITIAL
**      OR l_gl_pnc   IS INITIAL.
**
**        MOVE c_e TO wa_log-msgtype.
**
**        CONCATENATE c_e
**                    wa_file-repid
**               INTO wa_log-reference.
**
**        CONCATENATE text-e03
**                    wa_file-reimb_curr1
**               INTO wa_log-message RESPECTING BLANKS.
**
**        APPEND wa_log TO i_log.
**
**        CLEAR wa_log.
**
**        v_posting_flag = 'X'.
**
**
**      ENDIF.
**add the empfb field to the extension table
*      IF V_FLAG_PNC EQ 1.
*
*        CLEAR WA_EXTENSION2.
*
*        WA_EXTENSION2-STRUCTURE  =  'EMPFB'.
*
*        WA_EXTENSION2-VALUEPART1  =  L_EMPFB_PNC.
*
*        WA_EXTENSION2-VALUEPART4  = L_COUNT_PNC.
*
*        APPEND WA_EXTENSION2 TO I_EXTENSION2_PNC.
*
*        CLEAR WA_EXTENSION2.
*
*      ENDIF.
**{ ENumulate by qualifying lines (Column FI or FG = PNC US or CANADA)
**By trip by currency same as employee ZN document
*      CLEAR WA_CURRENCY_PNC.
*
*      MOVE L_COUNT_PNC    TO WA_CURRENCY_PNC-ITEMNO_ACC.
*
*      MOVE WA_FILE-REIMB_CURR1 TO WA_CURRENCY_PNC-CURRENCY.
*
*      MOVE WA_FILE-REIMB_CURR1 TO WA_CURRENCY_PNC-CURRENCY_ISO.
*
*      WA_CURRENCY_PNC-AMT_DOCCUR = WA_FILE-AMT_TO_BE_PAID * -1.
*
*      V_OFFSET_AMT_PNC = V_OFFSET_AMT_PNC + WA_CURRENCY_PNC-AMT_DOCCUR.
*
*      IF V_FLAG_PNC EQ 1.
*
*        APPEND WA_CURRENCY_PNC TO I_CURRENCY_PNC.
*
*        CLEAR WA_CURRENCY_PNC.
*
*      ELSE.
*
*        MOVE  V_OFFSET_AMT_PNC TO WA_CURRENCY_PNC-AMT_DOCCUR.
*
*        MODIFY I_CURRENCY_PNC FROM WA_CURRENCY_PNC INDEX 1 TRANSPORTING AMT_DOCCUR.
*
*      ENDIF.
*
*    ENDIF.
*
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
**Validate if colum is HDFC VISA
*    IF  WA_FILE-TEMP15 EQ TEXT-HDF
*    OR  WA_FILE-TEMP13 EQ TEXT-HDF.
*
*
*      UNASSIGN: <FS_HDFC>.
**                <fs_vendor_record>.
*
*      CLEAR: L_REFKEY1,
*             L_GL_HDFC,
*             L_VEND_HDFC,
*             L_PERNR_HDFC.
*
*      FREE:  R_VENDOR_HDFC.
**Search vendor
*
*      CALL FUNCTION 'ZEXTRACT_TVARVC'
*        EXPORTING
*          I_NAME   = C_HDFC
*        TABLES
*          T_SELOPT = R_VENDOR_HDFC.
*
*      IF SY-SUBRC EQ 0.
*
*        LOOP AT R_VENDOR_HDFC
*          ASSIGNING <FS_HDFC>.
*
*          MOVE <FS_HDFC>-LOW TO L_VEND_HDFC.
*
*        ENDLOOP.
*
*        SELECT SINGLE AKONT
*          FROM LFB1
*          INTO L_GL_HDFC
*         WHERE LIFNR EQ L_VEND_HDFC.
*
*        IF SY-SUBRC EQ 0.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF L_VEND_HDFC IS INITIAL
*      OR L_GL_HDFC   IS INITIAL.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        CONCATENATE C_E
*                    WA_FILE-REPID
*               INTO WA_LOG-REFERENCE.
*
*        CONCATENATE TEXT-E01
*                    WA_FILE-REIMB_CURR1
*               INTO WA_LOG-MESSAGE RESPECTING BLANKS.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*        V_POSTING_FLAG = 'X'.
*
*
*      ENDIF.
*
**{ accumulate by qualifying lines (Column FI or FG = HDFC VISA)
**By trip by currency same as employee ZN document
*      CLEAR WA_CURRENCY_HDFC.
*
*      MOVE L_COUNT_BARCLAYS    TO WA_CURRENCY_HDFC-ITEMNO_ACC.
*
*      MOVE WA_FILE-REIMB_CURR1 TO WA_CURRENCY_HDFC-CURRENCY.
*
*      MOVE WA_FILE-REIMB_CURR1 TO WA_CURRENCY_HDFC-CURRENCY_ISO.
*
*      WA_CURRENCY_HDFC-AMT_DOCCUR = WA_FILE-AMT_TO_BE_PAID * -1.
*
*      V_OFFSET_AMT_HDFC = V_OFFSET_AMT_HDFC + WA_CURRENCY_HDFC-AMT_DOCCUR.
*
*      IF V_FLAG_HDFC EQ 1.
*
*        APPEND WA_CURRENCY_HDFC TO I_CURRENCY_HDFC.
*
*        CLEAR WA_CURRENCY_HDFC.
*
*      ELSE.
*
*        MOVE  V_OFFSET_AMT_HDFC TO WA_CURRENCY_HDFC-AMT_DOCCUR.
*
*        MODIFY I_CURRENCY_HDFC FROM WA_CURRENCY_HDFC INDEX 1 TRANSPORTING AMT_DOCCUR.
*      ENDIF.
*
*    ENDIF.
*
**{ END OF LMORALES Defect 11420
*}End of RALVARADO-01302018-Defect 12607

**********************************************************************
*****************************  NEW ***********************************
    IF  wa_file-temp15 IN r_corpcards
    OR  wa_file-temp13 IN r_corpcards.

      UNASSIGN <fs_corpcards>.

      READ TABLE it_corpcards
      ASSIGNING <fs_corpcards>
      WITH KEY refkey1 = wa_file-temp13.

      IF NOT <fs_corpcards> IS ASSIGNED .

        READ TABLE it_corpcards
        ASSIGNING <fs_corpcards>
        WITH KEY refkey1 = wa_file-temp15.

      ENDIF.

      UNASSIGN: <fs_new>.

      CLEAR: l_gl_new,
             l_vend_new,
             l_empfb_new,
             l_pernr_new.

      FREE:  r_vendor_new.
*Search vendor

      l_vend_new   = <fs_corpcards>-ref1.
      l_empfb_new  = <fs_corpcards>-ref2.

      SELECT SINGLE akont
        FROM lfb1
        INTO l_gl_new
       WHERE lifnr EQ l_vend_new.

      IF sy-subrc EQ 0.

      ENDIF.

      IF l_vend_new IS INITIAL
      OR l_gl_new   IS INITIAL.

        MOVE c_e TO wa_log-msgtype.

        CONCATENATE c_c
                    wa_file-repid
               INTO wa_log-reference.

        CONCATENATE TEXT-e01
                    wa_file-reimb_curr1
               INTO wa_log-message RESPECTING BLANKS.

        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = wa_file-repid.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.

        v_posting_flag = 'X'.

      ENDIF.

      IF l_empfb_new IS NOT INITIAL.
        CLEAR wa_extension2.

        wa_extension2-structure  =  'EMPFB'.

        wa_extension2-valuepart1  =  l_empfb_new.

        wa_extension2-valuepart4  = l_count_new.

        APPEND wa_extension2 TO i_extension2_new.

        CLEAR wa_extension2.
      ENDIF.

*{ accumulate by qualifying lines (Column FI or FG = XREF TABLE Entries)
*By trip by currency same as employee ZN document
      CLEAR wa_currency_new.

      MOVE l_count_new    TO wa_currency_new-itemno_acc.

      MOVE wa_file-reimb_curr1 TO wa_currency_new-currency.

      MOVE wa_file-reimb_curr1 TO wa_currency_new-currency_iso.

      wa_currency_new-amt_doccur = wa_file-amt_to_be_paid * -1.
      wa_currency_new-amt_doccur_long = wa_file-amt_to_be_paid * -1.      " Defect 17137 CSURYAWANSHI 10/21/21

      v_offset_amt_new = v_offset_amt_new + wa_currency_new-amt_doccur.

      IF v_flag_new EQ 1.

        APPEND wa_currency_new TO i_currency_new.

        CLEAR wa_currency_new.

      ELSE.

        MOVE  v_offset_amt_new TO wa_currency_new-amt_doccur.
        MOVE  v_offset_amt_new TO wa_currency_new-amt_doccur_long.         " Defect 17137 CSURYAWANSHI 10/21/21

        MODIFY i_currency_new FROM wa_currency_new INDEX 1 TRANSPORTING amt_doccur amt_doccur_long.  " Defect 17137 CSURYAWANSHI 10/21/21
      ENDIF.

    ENDIF.
**********************************************************************

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

      CLEAR wa_currency.

*Local Currency
      wa_currency-itemno_acc     = l_count.
      DATA : lv_exchange_rate   TYPE ukurs_curr,
             lv_foreign_amount  TYPE wrbtr,
             lv_foreign_amount1 TYPE wrbtr.


      CLEAR: lv_waers.

*   IF wa_file-charge_type2 = 'BILLABLE NON-WBS'(012) OR wa_file-charge_type2 = 'WBS BILLABLE' (010) OR wa_file-charge_type2 = 'BILLABLE'.
*        READ TABLE i_prps INTO wa_prps WITH KEY posid = wa_file-charge_type.
*        IF sy-subrc = 0.
      SELECT SINGLE waers INTO lv_waers FROM t001
                    WHERE bukrs EQ wa_account_gl-comp_code.
      IF sy-subrc EQ 0.
        IF lv_waers NE wa_file-reimb_curr1.
          CLEAR : lv_exchange_rate, lv_foreign_amount,lv_foreign_amount1.
          MOVE : wa_file-amt_to_be_paid TO lv_foreign_amount1.
* start of changes defect 19747 SAKOTA
          "Begin of defect 20134 FCJSJ22 14/11/2022
*          IF wa_file-appr_date CS '-' OR wa_file-appr_date CS '/'. "defect 19937 SAKOTA
          IF wa_file-batch_date CS '-' OR wa_file-batch_date CS '/'.
            IF p_appl = 'X'.
*              SPLIT wa_file-appr_date AT '-' INTO l_y l_m l_d.
              SPLIT wa_file-batch_date AT '-' INTO l_y l_m l_d.
            ELSE.
*              SPLIT wa_file-appr_date AT '/' INTO l_m l_d l_y.
              SPLIT wa_file-batch_date AT '/' INTO l_m l_d l_y.
              "End of defect 20134 FCJSJ22 14/11/2022

              IF l_d < 10.
                SHIFT l_d RIGHT.
                OVERLAY l_d WITH '0'.
              ENDIF.

              IF l_m < 10.
                SHIFT l_m RIGHT.
                OVERLAY l_m WITH '0'.
              ENDIF.
            ENDIF.
            "Begin of defect 20134 FCJSJ22 14/11/2022
*            CONCATENATE l_y l_m l_d INTO wa_file-appr_date.
            CONCATENATE l_y l_m l_d INTO wa_file-batch_date.
*            CONDENSE wa_file-appr_date.
            CONDENSE wa_file-batch_date.
          ENDIF.                                    "defect 19937 SAKOTA
*          p_posdat = wa_file-appr_date.
          p_posdat = wa_file-batch_date.
          "End of defect 20134 FCJSJ22 14/11/2022

*          CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*            EXPORTING
*              date_external = wa_file-appr_date
*            IMPORTING
*              date_internal = p_posdat.    " Posting Date " 19183 sakota
* End of changes defect 19747 SAKOTA

          CALL FUNCTION 'CONVERT_TO_FOREIGN_CURRENCY'
            EXPORTING
              client           = sy-mandt
              date             = p_posdat
              foreign_currency = lv_waers
              local_amount     = lv_foreign_amount1
              local_currency   = wa_file-reimb_curr1
              rate             = 0
              type_of_rate     = 'M'
*             READ_TCURR       = 'X'
            IMPORTING
              exchange_rate    = lv_exchange_rate
              foreign_amount   = lv_foreign_amount.
*               FOREIGN_FACTOR          =
*               LOCAL_FACTOR            =
*               EXCHANGE_RATEX          =
*               DERIVED_RATE_TYPE       =
*               FIXED_RATE              =
*             EXCEPTIONS
*               NO_RATE_FOUND           = 1
*               OVERFLOW                = 2
*               NO_FACTORS_FOUND        = 3
*               NO_SPREAD_FOUND         = 4
*               DERIVED_2_TIMES         = 5
*               OTHERS                  = 6

          IF sy-subrc EQ 0.
            wa_currency-curr_type      = '10'.
            wa_currency-currency       = lv_waers.
            wa_currency-amt_doccur     = lv_foreign_amount.   " / 100.
*Begin of change: ReSQ Correction 31/03/2021 SRRAO SS4K900062 *  2

            wa_currency-amt_doccur_long    = lv_foreign_amount.   " / 100.

*ENd of change: ReSQ Correction 31/03/2021 SRRAO SS4K900062 *  2
            IF wa_file-personal_exp EQ 'N'. "DEFECT 4946
              APPEND wa_currency TO i_currency.
              CLEAR wa_currency .
            ENDIF. ""DEFEC
            CLEAR wa_currency.
            v_offset_amt1 = v_offset_amt1 + wa_file-amt_to_be_paid.
          ENDIF.
        ELSE.
          wa_currency-curr_type      = '10'.
          wa_currency-currency       = wa_file-reimb_curr1.
          wa_currency-amt_doccur     = wa_file-amt_to_be_paid. " Amount for column FM
*Begin of change: ReSQ Correction 31/03/2021 SRRAO SS4K900062 *
          wa_currency-amt_doccur_long     = wa_file-amt_to_be_paid. " Amount for column FM
*End of change: ReSQ Correction 31/03/2021 SRRAO SS4K900062 *

          v_offset_amt1 = v_offset_amt1 + wa_currency-amt_doccur.
          IF wa_file-personal_exp EQ 'N'. "DEFECT 4946
            APPEND wa_currency TO i_currency.
          ENDIF. ""DEFECT 4946
          CLEAR wa_currency.
        ENDIF.
      ENDIF.
*      ELSE.
**      wa_currency-amt_doccur     = wa_file-spent_curr.
*        wa_currency-CURR_TYPE      = '10'.
*        wa_currency-currency       = wa_file-REIMB_CURR1.
*        wa_currency-amt_doccur     = WA_FILE-AMT_TO_BE_PAID. " Amount for column FM
*        v_offset_amt1 = v_offset_amt1 + wa_currency-amt_doccur.
*        APPEND wa_currency TO i_currency.
*        CLEAR wa_currency.
*        L_FLAG = 'T'.
**      ENDIF.
*    else.
*      L_FLAG = 'F'.
*    ENDIF.
*Local Currency

      IF wa_file-personal_exp EQ 'N'.
        APPEND wa_account_gl TO i_account_gl.
      ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

*{ BEGING OF LMORALES Defect 10276

*    IF wa_file-temp15 EQ 'EMPLOYEE' AND wa_file-emp_home_cntry NE 'UNITED STATES'. Defect 4946
*    IF ( wa_file-temp15 EQ 'EMPLOYEE' AND wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO')  OR
*       ( wa_file-temp13 EQ 'EMPLOYEE' AND wa_file-temp15 EQ 'COMPANY' AND wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO').
**       AND WA_FILE-PERSONAL_EXP NE 'N'. "Defect 4946 Defect 6059
    IF ( wa_file-temp15 EQ 'EMPLOYEE')  OR "Remove the logic that says to ignore posting if column W (Employee Home Country) =  UNITED STATES
       ( wa_file-temp13 EQ 'EMPLOYEE' AND wa_file-temp15 EQ 'COMPANY').
*{ END OF LMORALES Defect 10276

      MOVE-CORRESPONDING wa_account_gl TO wa_account_gl_emp.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

* Check flag for original first data
      IF v_ofd_flag = c_x .
* Cost Center
        CLEAR : wa_pa0032.
* Get personnel number of employee
        READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
        IF sy-subrc = 0.
          CLEAR : wa_pa0001.
* Get cost center and company code from HR Infortype 0001
          READ TABLE i_pa0001 INTO wa_pa0001 WITH KEY pernr = wa_pa0032-pernr.
          IF sy-subrc = 0.
* Cost center
            wa_account_gl_emp-costcenter = wa_pa0001-kostl.
* Company code
            wa_account_gl_emp-comp_code  = wa_pa0001-bukrs.
          ELSE.
* If Cost center is not available in HR master , then get it from file
            wa_account_gl_emp-costcenter = wa_file-temp18.
          ENDIF.

* Converting cost center in internal format
          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = wa_account_gl_emp-costcenter
            IMPORTING
              output = wa_account_gl_emp-costcenter.

        ENDIF.

        IF wa_account_gl_emp-comp_code IS INITIAL.
          wa_account_gl_emp-comp_code = v_header-comp_code.
        ENDIF.
* Profit Center
        IF wa_account_gl_emp-costcenter IS NOT INITIAL.
          CLEAR : wa_csks_ofd.
* Read Cost Center master to get Profit center
          READ TABLE i_csks_ofd INTO wa_csks_ofd WITH KEY kostl = wa_account_gl_emp-costcenter.
          IF sy-subrc = 0.
            wa_account_gl_emp-profit_ctr = wa_csks_ofd-prctr.
          ENDIF.
        ENDIF.

        IF wa_account_gl_emp-profit_ctr IS INITIAL.
        ENDIF.
* If Profit center is derived then remove cost center value
        IF wa_account_gl_emp-profit_ctr IS NOT INITIAL.
          CLEAR : wa_account_gl_emp-costcenter.
        ENDIF.

      ELSE.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            input  = wa_file-emp_dept
          IMPORTING
            output = wa_file-emp_dept.

        MOVE wa_file-emp_dept TO wa_account_gl_emp-costcenter.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

      MOVE wa_file-purpose TO wa_account_gl_emp-item_text.
      wa_account_gl_emp-itemno_acc     = l_count1.
      wa_account_gl_emp-acct_type = 'K'.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = lv_akont
        IMPORTING
          output = lv_akont.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

        DATA: lv_prctr TYPE prctr.
        CLEAR : lv_prctr.

        IF NOT wa_account_gl_emp-costcenter IS INITIAL.
          SELECT SINGLE prctr INTO lv_prctr FROM csks
                              WHERE kostl = wa_account_gl_emp-costcenter
                                AND datbi EQ '99991231'.
          IF sy-subrc EQ 0.
            wa_account_gl_emp-profit_ctr = lv_prctr.
            CLEAR wa_account_gl_emp-costcenter.
          ENDIF.
        ENDIF.

        IF NOT wa_account_gl_emp-wbs_element IS INITIAL.
          SELECT SINGLE prctr INTO lv_prctr FROM prps
                              WHERE posid = wa_account_gl_emp-wbs_element.
          IF sy-subrc EQ 0.
            wa_account_gl_emp-profit_ctr = lv_prctr.
            CLEAR wa_account_gl_emp-wbs_element.
          ENDIF.
        ENDIF.

        IF NOT wa_account_gl_emp-orderid IS INITIAL.
          SELECT SINGLE prctr INTO lv_prctr FROM coas
                              WHERE aufnr = wa_account_gl_emp-orderid .
          IF sy-subrc EQ 0.
            wa_account_gl_emp-profit_ctr = lv_prctr.
            CLEAR wa_account_gl_emp-orderid.
          ENDIF.
        ENDIF.

        wa_account_gl_emp-comp_code = v_header-comp_code.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      wa_account_gl_emp-gl_account = lv_akont.
      wa_account_gl_emp-vendor_no = lv_lifnr.

*Start of Defect-1483 F463AFJ 06/12/2023
*Trading parterner should be captured from zggd_gen_xref table
      IF wa_file-ext_acc_id = c_refkey1.
        SELECT SINGLE ref1 FROM zggd_gen_xref
                           INTO wa_account_gl_emp-trade_id
                          WHERE identifier = c_identifier1
                            AND refkey1 = c_refkey1
                            AND refkey2 = wa_file-rpt_custom11.
      ENDIF.
*End of Defect-1483 F463AFJ 06/12/2023

      IF flag_emp EQ 1. " Defect 4373
*        CLEAR wa_pa0032.
*        READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
*        wa_account_gl_emp-alloc_nmbr = wa_pa0032-pernr.
        wa_account_gl_emp-alloc_nmbr = lv_lifnr.
        APPEND wa_account_gl_emp TO i_account_gl_emp.
*        flag_emp1  = flag_emp1 + 1.
      ENDIF." Defect 4373

      CLEAR wa_extension2_emp.
      CLEAR wa_pa0032.
      READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
      IF sy-subrc = 0.
        wa_extension2_emp-structure   =  'ZPERS'.      "RALVARADO-08252022
        wa_extension2_emp-valuepart1  =  l_count1.
        wa_extension2_emp-valuepart2  =  wa_pa0032-pernr.
        wa_extension2_emp-valuepart4  = '00000000'.
        IF flag_emp EQ 1." Defect 4373
          APPEND wa_extension2_emp TO i_extension2_emp.
*          flag_emp2  = flag_emp2 + 1.
        ENDIF." Defect 4373
      ENDIF.
      l_count1 = l_count1 + 1.
      flag_emp  = flag_emp + 1.
    ENDIF.

*{Begin RALVARADO-      Defect 12607
**{ BEGING OF LMORALES Defect 9763
*
*    IF  WA_FILE-TEMP15 EQ TEXT-BCE
*    OR  WA_FILE-TEMP13 EQ TEXT-BCE.
*
*      MOVE-CORRESPONDING WA_ACCOUNT_GL TO WA_ACCOUNT_GL_BARCLAYS.
*
*      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*        EXPORTING
*          INPUT  = WA_FILE-EMP_DEPT
*        IMPORTING
*          OUTPUT = WA_FILE-EMP_DEPT.
*
*      MOVE WA_FILE-EMP_DEPT TO WA_ACCOUNT_GL_BARCLAYS-COSTCENTER.
*
*      MOVE WA_FILE-PURPOSE TO WA_ACCOUNT_GL_BARCLAYS-ITEM_TEXT.
*
*      MOVE L_COUNT_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-ITEMNO_ACC.
*
*      MOVE C_K TO WA_ACCOUNT_GL_BARCLAYS-ACCT_TYPE.
*
*
*      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*        EXPORTING
*          INPUT  = L_GL_BARCLAYS
*        IMPORTING
*          OUTPUT = L_GL_BARCLAYS.
*
*      IF NOT WA_ACCOUNT_GL_BARCLAYS-COSTCENTER IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_BARCLAYS FROM CSKS
*                            WHERE KOSTL = WA_ACCOUNT_GL_BARCLAYS-COSTCENTER
*                              AND DATBI EQ '99991231'.
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_BARCLAYS-COSTCENTER.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF NOT WA_ACCOUNT_GL_BARCLAYS-WBS_ELEMENT IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_BARCLAYS FROM PRPS
*                            WHERE POSID = WA_ACCOUNT_GL_BARCLAYS-WBS_ELEMENT.
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-PROFIT_CTR. "
*
*          CLEAR WA_ACCOUNT_GL_BARCLAYS-WBS_ELEMENT.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF NOT WA_ACCOUNT_GL_EMP-ORDERID IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_BARCLAYS FROM COAS
*                            WHERE AUFNR = WA_ACCOUNT_GL_BARCLAYS-ORDERID .
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_BARCLAYS-ORDERID.
*
*        ENDIF.
*
*      ENDIF.
*
*      MOVE V_HEADER_BARCLAYS-COMP_CODE TO WA_ACCOUNT_GL_BARCLAYS-COMP_CODE.
*
*      MOVE L_GL_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-GL_ACCOUNT.
*
*      MOVE L_VEND_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-VENDOR_NO.
*
*      UNASSIGN <FS_PA0032_BARCLAYS>.
*
**search the pernr
*      READ TABLE I_PA0032
*        ASSIGNING <FS_PA0032_BARCLAYS>
*        WITH KEY PNALT = WA_FILE-PERNR.
*
*      IF SY-SUBRC EQ 0
*     AND <FS_PA0032_BARCLAYS> IS ASSIGNED.
*
*        MOVE <FS_PA0032_BARCLAYS>-PERNR TO WA_ACCOUNT_GL_BARCLAYS-ALLOC_NMBR.
*
*      ENDIF.
*
*      IF V_FLAG_BARCLAYS EQ 1. " Defect 4373
*
*        APPEND WA_ACCOUNT_GL_BARCLAYS TO I_ACCOUNT_GL_BARCLAYS.
*
**        v_flag_barclays  = v_flag_barclays + 1.
*
*      ENDIF." Defect 4373
*
*      CLEAR WA_EXTENSION2_BARCLAYS.
*
*      UNASSIGN <FS_PA0032_BARCLAYS>.
*
**search the pernr
*      READ TABLE I_PA0032
*        ASSIGNING <FS_PA0032_BARCLAYS>
*        WITH KEY PNALT = WA_FILE-PERNR.
*
*      IF SY-SUBRC EQ 0
*     AND <FS_PA0032_BARCLAYS> IS ASSIGNED.
*
*        MOVE L_COUNT_BARCLAYS TO WA_EXTENSION2_BARCLAYS-VALUEPART1.
*
*        MOVE <FS_PA0032_BARCLAYS>-PERNR TO WA_EXTENSION2_BARCLAYS-VALUEPART2.
*
*        MOVE TEXT-ID0 TO WA_EXTENSION2_BARCLAYS-VALUEPART4.
*
*        IF V_FLAG_BARCLAYS EQ 1." Defect 4373
*
*          APPEND WA_EXTENSION2_BARCLAYS TO I_EXTENSION2_BARCLAYS.
*
*
*        ENDIF." Defect 4373
*
*      ENDIF.
*
*      L_COUNT_BARCLAYS = L_COUNT_BARCLAYS + 1.
*
*      V_FLAG_BARCLAYS  = V_FLAG_BARCLAYS + 1.
*
*    ENDIF.
*
**{ END OF LMORALES Defect 9763
*
*
**{ BEGING OF LMORALES Defect 10276
**Validate if colum is PNC US or PNC Canada
*    IF  ( WA_FILE-TEMP15 EQ TEXT-PNC OR WA_FILE-TEMP15 EQ TEXT-PNU )
*    OR  ( WA_FILE-TEMP13 EQ TEXT-PNC OR WA_FILE-TEMP13 EQ TEXT-PNU ).
*
*
*      MOVE-CORRESPONDING WA_ACCOUNT_GL TO WA_ACCOUNT_GL_PNC.
*
*      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*        EXPORTING
*          INPUT  = WA_FILE-EMP_DEPT
*        IMPORTING
*          OUTPUT = WA_FILE-EMP_DEPT.
*
*      MOVE WA_FILE-EMP_DEPT TO WA_ACCOUNT_GL_PNC-COSTCENTER.
*
*      MOVE WA_FILE-PURPOSE TO WA_ACCOUNT_GL_PNC-ITEM_TEXT.
*
*      MOVE L_COUNT_BARCLAYS TO WA_ACCOUNT_GL_PNC-ITEMNO_ACC.
*
*      MOVE C_K TO WA_ACCOUNT_GL_PNC-ACCT_TYPE.
*
*
*      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*        EXPORTING
*          INPUT  = L_GL_PNC
*        IMPORTING
*          OUTPUT = L_GL_PNC.
*
*      IF NOT WA_ACCOUNT_GL_PNC-COSTCENTER IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_PNC FROM CSKS
*                            WHERE KOSTL = WA_ACCOUNT_GL_PNC-COSTCENTER
*                              AND DATBI EQ '99991231'.
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_PNC TO WA_ACCOUNT_GL_PNC-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_PNC-COSTCENTER.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF NOT WA_ACCOUNT_GL_PNC-WBS_ELEMENT IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_PNC FROM PRPS
*                            WHERE POSID = WA_ACCOUNT_GL_PNC-WBS_ELEMENT.
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_PNC TO WA_ACCOUNT_GL_EMP-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_PNC-WBS_ELEMENT.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF NOT WA_ACCOUNT_GL_PNC-ORDERID IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_PNC FROM COAS
*                            WHERE AUFNR = WA_ACCOUNT_GL_PNC-ORDERID .
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_PNC TO WA_ACCOUNT_GL_PNC-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_PNC-ORDERID.
*
*        ENDIF.
*
*      ENDIF.
*
*      MOVE V_HEADER_PNC-COMP_CODE TO WA_ACCOUNT_GL_PNC-COMP_CODE.
*
*      MOVE L_GL_PNC TO WA_ACCOUNT_GL_PNC-GL_ACCOUNT.
*
*      MOVE L_VEND_PNC TO WA_ACCOUNT_GL_PNC-VENDOR_NO.
*
*      UNASSIGN <FS_PA0032_PNC>.
*
**search the pernr
*      READ TABLE I_PA0032
*        ASSIGNING <FS_PA0032_PNC>
*        WITH KEY PNALT = WA_FILE-PERNR.
*
*      IF SY-SUBRC EQ 0
*     AND <FS_PA0032_PNC> IS ASSIGNED.
*
*        MOVE <FS_PA0032_PNC>-PERNR TO WA_ACCOUNT_GL_PNC-ALLOC_NMBR.
*
*      ENDIF.
*
*      IF V_FLAG_PNC EQ 1.
*
*        APPEND WA_ACCOUNT_GL_PNC TO I_ACCOUNT_GL_PNC.
*
**        v_flag_pnr  = v_flag_pnr + 1.
*
*      ENDIF.
*
*      CLEAR WA_EXTENSION2_PNC.
*
*      UNASSIGN <FS_PA0032_PNC>.
*
**search the pernr
*      READ TABLE I_PA0032
*        ASSIGNING <FS_PA0032_PNC>
*        WITH KEY PNALT = WA_FILE-PERNR.
*
*      IF SY-SUBRC EQ 0
*     AND <FS_PA0032_PNC> IS ASSIGNED.
*
*        MOVE L_COUNT_PNC TO WA_EXTENSION2_PNC-VALUEPART1.
*
*        MOVE <FS_PA0032_PNC>-PERNR TO WA_EXTENSION2_PNC-VALUEPART2.
*
*        MOVE TEXT-ID0 TO WA_EXTENSION2_PNC-VALUEPART4.
*
*        IF V_FLAG_PNC EQ 1." Defect 4373
*
*          APPEND WA_EXTENSION2_PNC TO I_EXTENSION2_PNC.
*
*
*        ENDIF." Defect 4373
*
*      ENDIF.
*
*      L_COUNT_PNC = L_COUNT_PNC + 1.
*
*      V_FLAG_PNC  = V_FLAG_PNC + 1.
*
*
*    ENDIF.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*
*    IF  WA_FILE-TEMP15 EQ TEXT-HDF
*    OR  WA_FILE-TEMP13 EQ TEXT-HDF.
*
*      MOVE-CORRESPONDING WA_ACCOUNT_GL TO WA_ACCOUNT_GL_HDFC.
*
*      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*        EXPORTING
*          INPUT  = WA_FILE-EMP_DEPT
*        IMPORTING
*          OUTPUT = WA_FILE-EMP_DEPT.
*
*      MOVE WA_FILE-EMP_DEPT TO WA_ACCOUNT_GL_HDFC-COSTCENTER.
*
*      MOVE WA_FILE-PURPOSE TO WA_ACCOUNT_GL_HDFC-ITEM_TEXT.
*
*      MOVE L_COUNT_BARCLAYS TO WA_ACCOUNT_GL_HDFC-ITEMNO_ACC.
*
*      MOVE C_K TO WA_ACCOUNT_GL_HDFC-ACCT_TYPE.
*
*
*      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*        EXPORTING
*          INPUT  = L_GL_HDFC
*        IMPORTING
*          OUTPUT = L_GL_HDFC.
*
*      IF NOT WA_ACCOUNT_GL_HDFC-COSTCENTER IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_HDFC FROM CSKS
*                            WHERE KOSTL = WA_ACCOUNT_GL_HDFC-COSTCENTER
*                              AND DATBI EQ '99991231'.
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_HDFC TO WA_ACCOUNT_GL_HDFC-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_HDFC-COSTCENTER.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF NOT WA_ACCOUNT_GL_HDFC-WBS_ELEMENT IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_HDFC FROM PRPS
*                            WHERE POSID = WA_ACCOUNT_GL_HDFC-WBS_ELEMENT.
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_HDFC TO WA_ACCOUNT_GL_HDFC-PROFIT_CTR. "
*
*          CLEAR WA_ACCOUNT_GL_HDFC-WBS_ELEMENT.
*
*        ENDIF.
*
*      ENDIF.
*
*      IF NOT WA_ACCOUNT_GL_HDFC-ORDERID IS INITIAL.
*
*        SELECT SINGLE PRCTR INTO L_PRCTR_HDFC FROM COAS
*                            WHERE AUFNR = WA_ACCOUNT_GL_HDFC-ORDERID .
*
*        IF SY-SUBRC EQ 0.
*
*          MOVE L_PRCTR_HDFC TO WA_ACCOUNT_GL_HDFC-PROFIT_CTR.
*
*          CLEAR WA_ACCOUNT_GL_HDFC-ORDERID.
*
*        ENDIF.
*
*      ENDIF.
*
*      MOVE V_HEADER_HDFC-COMP_CODE TO WA_ACCOUNT_GL_HDFC-COMP_CODE.
*
*      MOVE L_GL_HDFC TO WA_ACCOUNT_GL_HDFC-GL_ACCOUNT.
*
*      MOVE L_VEND_HDFC TO WA_ACCOUNT_GL_HDFC-VENDOR_NO.
*
*      UNASSIGN <FS_PA0032_HDFC>.
*
**search the pernr
*      READ TABLE I_PA0032
*        ASSIGNING <FS_PA0032_HDFC>
*        WITH KEY PNALT = WA_FILE-PERNR.
*
*      IF SY-SUBRC EQ 0
*     AND <FS_PA0032_HDFC> IS ASSIGNED.
*
*        MOVE <FS_PA0032_HDFC>-PERNR TO WA_ACCOUNT_GL_HDFC-ALLOC_NMBR.
*
*      ENDIF.
*
*      IF V_FLAG_HDFC EQ 1.
*
*        APPEND WA_ACCOUNT_GL_HDFC TO I_ACCOUNT_GL_HDFC.
*
*      ENDIF.
*
*      CLEAR WA_EXTENSION2_HDFC.
*
*      UNASSIGN <FS_PA0032_HDFC>.
*
**search the pernr
*      READ TABLE I_PA0032
*        ASSIGNING <FS_PA0032_HDFC>
*        WITH KEY PNALT = WA_FILE-PERNR.
*
*      IF SY-SUBRC EQ 0
*     AND <FS_PA0032_HDFC> IS ASSIGNED.
*
*        MOVE L_COUNT_HDFC TO WA_EXTENSION2_HDFC-VALUEPART1.
*
*        MOVE <FS_PA0032_HDFC>-PERNR TO WA_EXTENSION2_HDFC-VALUEPART2.
*
*        MOVE TEXT-ID0 TO WA_EXTENSION2_HDFC-VALUEPART4.
*
*        IF V_FLAG_HDFC EQ 1.
*
*          APPEND WA_EXTENSION2_HDFC TO I_EXTENSION2_HDFC.
*
*
*        ENDIF.
*
*      ENDIF.
*
*      L_COUNT_HDFC = L_COUNT_HDFC + 1.
*
*      V_FLAG_HDFC  = V_FLAG_HDFC + 1.
*
*    ENDIF.
*
**{ END OF LMORALES Defect 11420
*}End RALVARADO-      Defect 12607

**********************************************************************
*****************************  NEW ***********************************
    IF  wa_file-temp15 IN r_corpcards
    OR  wa_file-temp13 IN r_corpcards.

      MOVE-CORRESPONDING wa_account_gl TO wa_account_gl_new.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
* Check flag for Original First Data employee
      IF v_ofd_flag = c_x .
* Cost Center
        CLEAR : wa_pa0032.
* Get Personnel number
        READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
        IF sy-subrc = 0.
          CLEAR : wa_pa0001.
* Read HR Infortype 0001
          READ TABLE i_pa0001 INTO wa_pa0001 WITH KEY pernr = wa_pa0032-pernr.
          IF sy-subrc = 0.
* Cost Center
            wa_account_gl_new-costcenter = wa_pa0001-kostl.
* Company Code
            wa_account_gl_new-comp_code  = wa_pa0001-bukrs.
          ELSE.
* If Cost center is not derived, then get it from file
            wa_account_gl_new-costcenter = wa_file-temp18.
          ENDIF.

* Converting cost center to internal format
          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = wa_account_gl_new-costcenter
            IMPORTING
              output = wa_account_gl_new-costcenter.

        ENDIF.

        IF wa_account_gl_new-comp_code IS INITIAL.
          wa_account_gl_new-comp_code = v_header-comp_code.
        ENDIF.
* Get Profir center from Cost center master data
        IF wa_account_gl_new-costcenter IS NOT INITIAL.
          CLEAR : wa_csks_ofd.
          READ TABLE i_csks_ofd INTO wa_csks_ofd WITH KEY kostl = wa_account_gl_new-costcenter.
          IF sy-subrc = 0.
* Profit Center
            wa_account_gl_new-profit_ctr = wa_csks_ofd-prctr.
          ENDIF.
        ENDIF.

        IF wa_account_gl_new-profit_ctr IS INITIAL.
        ENDIF.
* If Profit Center is derived , clear cost center
        IF wa_account_gl_new-profit_ctr IS NOT INITIAL.
          CLEAR : wa_account_gl_new-costcenter.
        ENDIF.

      ELSE.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            input  = wa_file-emp_dept
          IMPORTING
            output = wa_file-emp_dept.

        MOVE wa_file-emp_dept TO wa_account_gl_new-costcenter.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

      MOVE wa_file-purpose TO wa_account_gl_new-item_text.

      MOVE l_count_new TO wa_account_gl_new-itemno_acc.

      MOVE c_k TO wa_account_gl_new-acct_type.


      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = l_gl_new
        IMPORTING
          output = l_gl_new.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

        IF NOT wa_account_gl_new-costcenter IS INITIAL.

          SELECT SINGLE prctr INTO l_prctr_new FROM csks
                              WHERE kostl = wa_account_gl_new-costcenter
                                AND datbi EQ '99991231'.

          IF sy-subrc EQ 0.

            MOVE l_prctr_new TO wa_account_gl_new-profit_ctr.

            CLEAR wa_account_gl_new-costcenter.

          ENDIF.

        ENDIF.

        IF NOT wa_account_gl_new-wbs_element IS INITIAL.

          SELECT SINGLE prctr INTO l_prctr_new FROM prps
                              WHERE posid = wa_account_gl_new-wbs_element.

          IF sy-subrc EQ 0.

            MOVE l_prctr_new TO wa_account_gl_new-profit_ctr. "

            CLEAR wa_account_gl_new-wbs_element.

          ENDIF.

        ENDIF.

        IF NOT wa_account_gl_new-orderid IS INITIAL.

          SELECT SINGLE prctr INTO l_prctr_new FROM coas
                              WHERE aufnr = wa_account_gl_new-orderid .

          IF sy-subrc EQ 0.

            MOVE l_prctr_new TO wa_account_gl_new-profit_ctr.

            CLEAR wa_account_gl_new-orderid.

          ENDIF.

        ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
      ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

*{Begin of CSURYAWANSHI-05172018 : Defect 13035
      CLEAR : lv_comp_code,
              lv_refkey1  ,
              lv_refkey2  .

* Assign Corporate card vendor to REFKEY1
      IF wa_file-temp15 IN r_corpcards .
        lv_refkey1 = wa_file-temp15.
      ELSEIF wa_file-temp13 IN r_corpcards.
        lv_refkey1 = wa_file-temp13.
      ENDIF.

* Assign header company code to REFKEY2
      lv_refkey2 = v_header_new-comp_code.

* Commented line to assign Card Company code from Cross ref table if maintained
*      MOVE V_HEADER_NEW-COMP_CODE TO WA_ACCOUNT_GL_NEW-COMP_CODE.

* Assign Corporate Card Vendor Company code to G/L Account line item if maintained in ZGGD_GEN_XREF
      READ TABLE it_corpcomp ASSIGNING <fs_corpcomp> WITH KEY identifier = c_identifier "  Xreference Identifier
                                                              refkey1    = lv_refkey1   "  Cross reference Key
                                                              refkey2    = lv_refkey2   "  Cross reference Key
                                                              BINARY SEARCH.
      IF sy-subrc = 0 AND <fs_corpcomp> IS ASSIGNED.
        CONDENSE <fs_corpcomp>-ref1.
        lv_comp_code = <fs_corpcomp>-ref1.
        MOVE lv_comp_code TO wa_account_gl_new-comp_code.
        UNASSIGN <fs_corpcomp>.
      ELSE.
        MOVE v_header_new-comp_code TO wa_account_gl_new-comp_code.
      ENDIF.
*}End of CSURYAWANSHI-05172018 : Defect 13035

      MOVE l_gl_new TO wa_account_gl_new-gl_account.

      MOVE l_vend_new TO wa_account_gl_new-vendor_no.

      UNASSIGN <fs_pa0032_new>.

*search the pernr
      READ TABLE i_pa0032
        ASSIGNING <fs_pa0032_new>
        WITH KEY pnalt = wa_file-pernr.

      IF sy-subrc EQ 0
     AND <fs_pa0032_new> IS ASSIGNED.

        MOVE <fs_pa0032_new>-pernr TO wa_account_gl_new-alloc_nmbr.

      ENDIF.

*Start of Defect-1483 F463AFJ 06/12/2023
*Trading parterner should be captured from zggd_gen_xref table
      IF wa_file-ext_acc_id = c_refkey1.
        SELECT SINGLE ref1 FROM zggd_gen_xref
                           INTO wa_account_gl_new-trade_id
                          WHERE identifier = c_identifier1
                            AND refkey1 = c_refkey1
                            AND refkey2 = wa_file-rpt_custom11.
      ENDIF.
*End of Defect-1483 F463AFJ 06/12/2023

      IF v_flag_new EQ 1.

        APPEND wa_account_gl_new TO i_account_gl_new.

      ENDIF.

      CLEAR wa_extension2_new.

      UNASSIGN <fs_pa0032_new>.

*search the pernr
      READ TABLE i_pa0032
        ASSIGNING <fs_pa0032_new>
        WITH KEY pnalt = wa_file-pernr.

      IF sy-subrc EQ 0
     AND <fs_pa0032_new> IS ASSIGNED.
        wa_extension2_new-structure       =  'ZPERS'.      "RALVARADO-08252022
        MOVE l_count_new TO wa_extension2_new-valuepart1.

        MOVE <fs_pa0032_new>-pernr TO wa_extension2_new-valuepart2.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
*        IF v_ofd_flag = c_x AND wa_file-temp15+0(4) = 'AMEX'.
*          CLEAR : lv_ccnum.
*          CALL FUNCTION 'Z_GGD_DECRYP_PERNR_CC'
*            EXPORTING
*              i_pernr           = <fs_pa0032_new>-pernr
*            IMPORTING
*              e_ccnum           = lv_ccnum
*            EXCEPTIONS
*              decryption_error  = 1
*              invalid_card_guid = 2
*              not_found         = 3
*              OTHERS            = 4.
*
*          IF lv_ccnum CA c_0123456789.
*            lv_cardlen = strlen( lv_ccnum ).
*            IF lv_cardlen <> 15.
*              MOVE: 'A' TO wa_extension2_new-valuepart3.
*            ENDIF.
*          ELSE.
*            MOVE: 'A' TO wa_extension2_new-valuepart3.
*          ENDIF.
*        ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

        MOVE TEXT-id0 TO wa_extension2_new-valuepart4.

        IF v_flag_new EQ 1.

          APPEND wa_extension2_new TO i_extension2_new.

        ENDIF.

      ENDIF.

      l_count_new = l_count_new + 1.

      v_flag_new  = v_flag_new + 1.

    ENDIF.
**********************************************************************



    CLEAR : wa_account_gl,wa_account_gl_emp.

* Extension used for PERNR
    CLEAR wa_extension2.
    CLEAR wa_pa0032.
    READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
    IF sy-subrc = 0.
      wa_extension2-structure   =  'ZPERS'.     "RALVARADO-08252022
      wa_extension2-valuepart1  =  l_count.
      wa_extension2-valuepart2  =  wa_pa0032-pernr.
      wa_extension2-valuepart4  = '00000000'.
      APPEND wa_extension2 TO i_extension2.
    ENDIF.

    l_count = l_count + 1.
    l_repid     = wa_file-repid.
    l_exp_curr  = wa_file-exp_curr.
    l_reimb_curr = wa_file-reimb_curr1.
  ENDLOOP.

  " begin of defect 17587 by rirawat

  READ TABLE i_log INTO DATA(w_log1) WITH KEY reference = l_repid msgtype = 'E'.

  IF sy-subrc <> 0 .
    "end of defect 17587 by rirawat

    IF v_mode = 'X'.
      v_flag = 'X'. "Dkannan - Defect 7212 -  Concur clearingaccount
      PERFORM execute_test_run USING v_flag.
      l_flg = 'X'.
    ENDIF.

    IF v_mode = ' '.
      v_flag = 'X'. "Dkannan - Defect 7212 -  Concur clearingaccount
      PERFORM call_bapi USING v_flag. "Dkannan - Defect 7212 -  Concur clearingaccount
      l_flg = 'X'.
    ENDIF.
    " begin of defect 17587 by rirawat
  ENDIF.
  " end of defect 17587 by rirawat

ENDFORM.                    " CALL_POSTING_BAPI
*&---------------------------------------------------------------------*
*&      Form  CALL_BAPI
*&---------------------------------------------------------------------*
*       Actual Call to BAPI
*----------------------------------------------------------------------*
FORM call_bapi USING v_flag . "Dkannan - Defect 7212 -  Concur clearingaccount
  REFRESH : i_return,i_return_emp,"Defect 3979
            i_return_check_new.   " Defect 15373 , CSURYAWANSHI 10/05/2020

  PERFORM prepare_offset USING v_flag. "Dkannan - Defect 7212 -  Concur clearingaccount
  CLEAR wa_account_gl.
  DATA: l_tabix TYPE sy-tabix.
  DATA : i_currency_1  TYPE STANDARD TABLE OF bapiaccr09,
         wa_currency_1 TYPE bapiaccr09.
  DATA : i_currency_2  TYPE STANDARD TABLE OF bapiaccr09,
         wa_currency_2 TYPE bapiaccr09.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

* Swapping First Record.
    CLEAR wa_account_gl.
    READ TABLE i_account_gl INTO wa_account_gl WITH KEY comp_code = v_header-comp_code. " Any record is acceptable. Unique record check not required.
    IF sy-subrc = 0.
      wa_tabix = sy-tabix.

      IF sy-tabix NE '1'. " No Swap Reqd if Company codes match.
        READ TABLE i_account_gl INTO wa_account_gl_tmp INDEX 1.

        wa_line = wa_account_gl_tmp-itemno_acc.
        wa_account_gl_tmp-itemno_acc = wa_account_gl-itemno_acc.
        wa_account_gl-itemno_acc = wa_line.

        MODIFY i_account_gl  FROM wa_account_gl_tmp INDEX wa_tabix .
        MODIFY i_account_gl  FROM wa_account_gl INDEX 1 .

* Swap Currency
* Swap Currency
        CLEAR : wa_currency,wa_currency_1,wa_currency_2,wa_currency_tmp.
*      READ TABLE i_currency INTO wa_currency INDEX wa_tabix.
*      IF sy-subrc = 0.
*        READ TABLE i_currency INTO wa_currency_tmp INDEX 1.
*        IF sy-subrc = 0.
*          wa_line = wa_currency_tmp-itemno_acc.
*          wa_currency_tmp-itemno_acc = wa_currency-itemno_acc.
*          wa_currency-itemno_acc = wa_line.
*
*          MODIFY i_currency  FROM wa_currency_tmp INDEX wa_tabix .
*          MODIFY i_currency  FROM wa_currency INDEX 1 .
*        ENDIF.
*      ENDIF.
        lv_tabix =  wa_tabix * 2.
        READ TABLE i_currency INTO wa_currency INDEX lv_tabix.
        lv_tabix1 = lv_tabix  - 1.
        READ TABLE i_currency INTO wa_currency_1 INDEX lv_tabix1.
        IF sy-subrc = 0.
          READ TABLE i_currency INTO wa_currency_tmp INDEX 1.
          READ TABLE i_currency INTO wa_currency_2 INDEX 2.
          IF sy-subrc = 0.
            wa_line = wa_currency_tmp-itemno_acc.
            wa_currency_tmp-itemno_acc = wa_currency-itemno_acc.
            wa_currency-itemno_acc = wa_line.

            wa_line1 = wa_currency_2-itemno_acc.
            wa_currency_2-itemno_acc = wa_currency_1-itemno_acc.
            wa_currency_1-itemno_acc = wa_line.

            MODIFY i_currency  FROM wa_currency_tmp INDEX lv_tabix .
            MODIFY i_currency  FROM wa_currency_2 INDEX lv_tabix1.
            MODIFY i_currency  FROM wa_currency_1 INDEX 2.
            MODIFY i_currency  FROM wa_currency INDEX 1 .

          ENDIF.
        ENDIF.

* Swap Extensions
        CLEAR wa_extension2.
        READ TABLE i_extension2 INTO wa_extension2 INDEX wa_tabix.
        IF sy-subrc = 0.
          READ TABLE i_extension2 INTO wa_extension2_tmp INDEX 1.
          IF sy-subrc = 0.
            wa_line = wa_extension2_tmp-valuepart1.
            wa_extension2_tmp-valuepart1 = wa_extension2-valuepart1.
            wa_extension2-valuepart1 = wa_line.
            wa_extension2-valuepart4  = '00000000'.
            MODIFY i_extension2  FROM wa_extension2_tmp INDEX wa_tabix .
            MODIFY i_extension2  FROM wa_extension2 INDEX 1 .
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

*{Begin of CSURYAWANSHI-09142020 : Defect 15373
* In case of India employees, replace Profit Center or Internal order basis the category of GL : Balance Sheet / Profit & Loss
*    IF v_header-comp_code = '2130'.
* Select Order Types
    " start of chnages of rirawat defect 18887
    REFRESH: r_india_cc.
    CALL FUNCTION 'ZEXTRACT_TVARVC'
      EXPORTING
        i_name   = c_india_cc
      TABLES
        t_selopt = r_india_cc.

    IF v_header-comp_code IN r_india_cc.
      " end of changes of rirawat 18887
      PERFORM redetermine_pc_io_via_bs_pl.
    ENDIF.
*}End of CSURYAWANSHI-09142020 : Defect 15373

    " checking before posting if internal table is not initial defect 19183 rirawat
    IF i_account_gl IS NOT INITIAL.

      CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
        EXPORTING
          documentheader = v_header
        TABLES
          accountgl      = i_account_gl
          currencyamount = i_currency
          return         = i_return
          extension2     = i_extension2.


    ENDIF.
    " checking before posting if internal table is not initial defect 19183 rirawat

    " moving this END if after post bapi because for check also it it before ENDIF. rirawat defect 19183
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15.  " added by rirawat defect 18887271
  " end of changes rirawat


  IF NOT i_account_gl_emp IS INITIAL.
    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader = v_header_emp
      TABLES
        accountgl      = i_account_gl_emp
        currencyamount = i_currency_emp
        return         = i_return_emp
        extension2     = i_extension2_emp.
  ENDIF.

*{Begin of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*  IF NOT I_ACCOUNT_GL_BARCLAYS IS INITIAL.
*
*    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
*      EXPORTING
*        DOCUMENTHEADER = V_HEADER_BARCLAYS
*      TABLES
*        ACCOUNTGL      = I_ACCOUNT_GL_BARCLAYS
*        CURRENCYAMOUNT = I_CURRENCY_BARCLAYS
*        RETURN         = I_RETURN_CHECK_BARCLAYS
*        EXTENSION2     = I_EXTENSION2_BARCLAYS.
*
*  ENDIF.
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*  IF NOT I_ACCOUNT_GL_PNC IS INITIAL.
*
*    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
*      EXPORTING
*        DOCUMENTHEADER = V_HEADER_PNC
*      TABLES
*        ACCOUNTGL      = I_ACCOUNT_GL_PNC
*        CURRENCYAMOUNT = I_CURRENCY_PNC
*        RETURN         = I_RETURN_CHECK_PNC
*        EXTENSION2     = I_EXTENSION2_PNC.
*
*  ENDIF.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*  IF NOT I_ACCOUNT_GL_HDFC IS INITIAL.
*
*    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
*      EXPORTING
*        DOCUMENTHEADER = V_HEADER_HDFC
*      TABLES
*        ACCOUNTGL      = I_ACCOUNT_GL_HDFC
*        CURRENCYAMOUNT = I_CURRENCY_HDFC
*        RETURN         = I_RETURN_CHECK_HDFC
*        EXTENSION2     = I_EXTENSION2_HDFC.
*
*  ENDIF.
**{ END OF LMORALES Defect 11420

  IF NOT i_account_gl_new IS INITIAL.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader = v_header_new
      TABLES
        accountgl      = i_account_gl_new
        currencyamount = i_currency_new
        return         = i_return_check_new
        extension2     = i_extension2_new.

  ENDIF.
*}End of RALVARADO-01302018-Defect 12607

  CONCATENATE 'Processing Record REPID / CURRENCY : '(014) v_header-ref_doc_no INTO l_text SEPARATED BY space.

  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 100
      text       = l_text.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

** Check for Error.
    CLEAR wa_return.
    READ TABLE i_return INTO wa_return WITH KEY type = 'E'.
    "start of changes for defect 17587 rirawat
    READ TABLE i_return_emp INTO DATA(wa_return_emp) WITH KEY type = 'E'.
    READ TABLE i_return_check_new INTO DATA(wa_return_check_new) WITH KEY type = 'E'.
    IF wa_return IS INITIAL AND wa_return_emp IS INITIAL AND wa_return_check_new IS INITIAL.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      CLEAR wa_log.
      LOOP AT i_return INTO wa_return WHERE type = 'S'.
        wa_log-msgtype            = 'S'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.

        wa_log-reference      = v_header-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
        CLEAR wa_log.
      ENDLOOP.

      LOOP AT i_return_emp INTO wa_return_emp WHERE type = 'S'.
        wa_log-msgtype            = 'S'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.

        wa_log-reference      = v_header_emp-ref_doc_no.
        wa_log-message        = wa_return_emp-message.
        APPEND wa_log TO i_log.
        CLEAR wa_log.
      ENDLOOP.

      LOOP AT i_return_check_new  INTO wa_return_check_new WHERE type = c_s.

        MOVE c_s TO wa_log-msgtype.

        MOVE v_header_new-ref_doc_no TO wa_log-reference.

        MOVE wa_return_check_new-message TO wa_log-message.

        APPEND wa_log TO i_log.

        CLEAR wa_log.

      ENDLOOP.


    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*         IMPORTING
*           RETURN        =
        .

      READ TABLE i_return INTO wa_return WITH KEY type = 'E'.
      "end for changes for defect rirawat
      IF sy-subrc = 0.

        CLEAR wa_log.
        LOOP AT i_return INTO wa_return WHERE type = 'E'.
          wa_log-msgtype            = 'E'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
          wa_log-reference      = v_header-ref_doc_no.
          wa_log-message        = wa_return-message.
          APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
          wa_logref-repid = v_header-ref_doc_no.
          APPEND wa_logref TO i_logref.
          CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
          CLEAR wa_log.
        ENDLOOP.
        APPEND wa_log TO i_log. " Blank record.
      ENDIF.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          wait = 'X'.
*
*      CLEAR wa_log.
*      LOOP AT i_return INTO wa_return WHERE type = 'S'.
*        wa_log-msgtype            = 'S'.
**      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
*
*        wa_log-reference      = v_header-ref_doc_no.
*        wa_log-message        = wa_return-message.
*        APPEND wa_log TO i_log.
*        CLEAR wa_log.
*      ENDLOOP.

      "changes
    ENDIF.
    "changes
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  IF NOT i_return_emp IS INITIAL.
    READ TABLE i_return_emp INTO wa_return WITH KEY type = 'E'.

    IF sy-subrc = 0.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*         IMPORTING
*           RETURN        =
        .

      CLEAR wa_log.
      LOOP AT i_return_emp INTO wa_return WHERE type = 'E'.
        wa_log-msgtype            = 'E'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
        wa_log-reference      = v_header_emp-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = v_header_emp-ref_doc_no.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
      ENDLOOP.
      APPEND wa_log TO i_log. " Blank record.
    ELSE.




      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      CLEAR wa_log.
      LOOP AT i_return_emp INTO wa_return WHERE type = 'S'.
        wa_log-msgtype            = 'S'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.

        wa_log-reference      = v_header_emp-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
        CLEAR wa_log.
      ENDLOOP.



    ENDIF.
  ENDIF.

**{ BEGING OF LMORALES Defect 9763
*  IF NOT I_RETURN_CHECK_BARCLAYS IS INITIAL.
*
*    CLEAR WA_RETURN.
*
*    READ TABLE I_RETURN_CHECK_BARCLAYS INTO WA_RETURN WITH KEY TYPE = 'E'.
*
*    IF SY-SUBRC = 0.
*
*      MOVE C_X TO V_ERR.
*
*      CLEAR WA_LOG.
*
*      LOOP AT I_RETURN_CHECK_BARCLAYS INTO WA_RETURN WHERE TYPE = C_E.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_BARCLAYS-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*      ENDLOOP.
*
*      APPEND WA_LOG TO I_LOG. " Blank record.
*
*    ELSE.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          WAIT = 'X'.
*
*      CLEAR WA_LOG.
*      LOOP AT I_RETURN_CHECK_BARCLAYS  INTO WA_RETURN WHERE TYPE = C_S.
*
*        MOVE C_S TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_BARCLAYS-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*      ENDLOOP.
*
*    ENDIF.
*
*  ENDIF.
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*  IF NOT I_RETURN_CHECK_PNC IS INITIAL.
*
*    CLEAR WA_RETURN.
*
*    READ TABLE I_RETURN_CHECK_PNC INTO WA_RETURN WITH KEY TYPE = 'E'.
*
*    IF SY-SUBRC = 0.
*
*      MOVE C_X TO V_ERR.
*
*      CLEAR WA_LOG.
*
*      LOOP AT I_RETURN_CHECK_PNC INTO WA_RETURN WHERE TYPE = C_E.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_PNC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*      ENDLOOP.
*
*      APPEND WA_LOG TO I_LOG. " Blank record.
*
*    ELSE.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          WAIT = 'X'.
*
*      CLEAR WA_LOG.
*      LOOP AT I_RETURN_CHECK_PNC  INTO WA_RETURN WHERE TYPE = C_S.
*
*        MOVE C_S TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_PNC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*      ENDLOOP.
*
*    ENDIF.
*
*  ENDIF.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 9763
*  IF NOT I_RETURN_CHECK_HDFC IS INITIAL.
*
*    CLEAR WA_RETURN.
*
*    READ TABLE I_RETURN_CHECK_HDFC INTO WA_RETURN WITH KEY TYPE = 'E'.
*
*    IF SY-SUBRC = 0.
*
*      MOVE C_X TO V_ERR.
*
*      CLEAR WA_LOG.
*
*      LOOP AT I_RETURN_CHECK_HDFC INTO WA_RETURN WHERE TYPE = C_E.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_HDFC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*      ENDLOOP.
*
*      APPEND WA_LOG TO I_LOG. " Blank record.
*
*    ELSE.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          WAIT = 'X'.
*
*      CLEAR WA_LOG.
*      LOOP AT I_RETURN_CHECK_HDFC  INTO WA_RETURN WHERE TYPE = C_S.
*
*        MOVE C_S TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_HDFC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*      ENDLOOP.
*
*    ENDIF.
*
*  ENDIF.
**{ END OF LMORALES Defect 11420

*{Begin RALVARADO-      Defect 12607
  IF NOT i_return_check_new IS INITIAL.

    CLEAR wa_return.

    READ TABLE i_return_check_new INTO wa_return WITH KEY type = 'E'.

    IF sy-subrc = 0.

      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
*         IMPORTING
*           RETURN        =
        .

      MOVE c_x TO v_err.

      CLEAR wa_log.

      LOOP AT i_return_check_new INTO wa_return WHERE type = c_e.

        MOVE c_e TO wa_log-msgtype.

        MOVE v_header_new-ref_doc_no TO wa_log-reference.

        MOVE wa_return-message TO wa_log-message.

        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = v_header_new-ref_doc_no.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
      ENDLOOP.

      APPEND wa_log TO i_log. " Blank record.

    ELSE.



      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      CLEAR wa_log.
      LOOP AT i_return_check_new  INTO wa_return WHERE type = c_s.

        MOVE c_s TO wa_log-msgtype.

        MOVE v_header_new-ref_doc_no TO wa_log-reference.

        MOVE wa_return-message TO wa_log-message.

        APPEND wa_log TO i_log.

        CLEAR wa_log.

      ENDLOOP.
    ENDIF.

  ENDIF.




*}End of RALVARADO     Defect 12607

ENDFORM.                    " CALL_BAPI
*&---------------------------------------------------------------------*
*&      Form  FETCH_PSID_BUKRS
*&---------------------------------------------------------------------*
*       Select BUKRS corresponding to ERRCA PSID
*----------------------------------------------------------------------*
*{Begin of RALVARADO-08202018 Defect 13289
*FORM fetch_psid_bukrs .
*  SELECT * FROM zfgl_psid_bukrs INTO TABLE i_bukrs
*           FOR ALL ENTRIES IN i_file WHERE psid = i_file-psid.
*ENDFORM.                    " FETCH_PSID_BUKRS
*}End of RALVARADO-08202018 Defect 13289
*&---------------------------------------------------------------------*
*&      Form  PREPARE_OFFSET
*&---------------------------------------------------------------------*
*       Offset Data Preparation
*----------------------------------------------------------------------*
FORM prepare_offset USING v_flag.

  FIELD-SYMBOLS: <fs_pa0032_barclays> TYPE t_pa0032, " LMORALES DEFECT 9763
                 <fs_repid>           TYPE y_repid.  " LMORALES DEFECT 10276

  DATA : gv_waers TYPE waers.

  CLEAR: wa_account_gl,gv_waers.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

    READ TABLE i_account_gl INTO wa_account_gl INDEX 1.

    IF sy-subrc = 0.
** ACCOUNT GL Table Data
      wa_account_gl-itemno_acc = l_count.
      wa_account_gl-gl_account = p_gl_off.

      CLEAR : wa_account_gl-item_text.
*    CONCATENATE wa_file-incur_date wa_file-exp_type2 wa_file-vendor INTO wa_account_gl-item_text SEPARATED BY space.
      wa_account_gl-item_text = v_header-ref_doc_no.

*Start of change - Defect 2612
* If International File - the Offset Company Code = Header Company Code.
*    IF p_int = 'X'.
      wa_account_gl-comp_code = v_header-comp_code.
*    ELSE.
*      wa_account_gl-comp_code  = p_cc_off.
*    ENDIF.
*End of change - Defect 2612
      wa_account_gl-costcenter = space.
*    wa_account_gl-alloc_nmbr = space. "LMORALES Defect 10276
      wa_account_gl-wbs_element = space.
      wa_account_gl-orderid = space.
*    wa_account_gl-costcenter = wa_file-dept.
*    i_account_gl-DE_CRE_IND =

*{ BEGING OF LMORALES Defect 10276
      READ TABLE i_repid
       ASSIGNING <fs_repid>
       WITH KEY batch_id  = wa_repid-batch_id
                batch_seq = wa_repid-batch_seq
                pernr     = wa_repid-pernr.

      IF sy-subrc EQ 0
     AND <fs_repid> IS ASSIGNED.

        MOVE <fs_repid>-repid TO wa_account_gl-alloc_nmbr.

      ENDIF.

*{ END OF LMORALES Defect 10276

      APPEND wa_account_gl TO i_account_gl.
      CLEAR wa_account_gl.

    ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  READ TABLE i_account_gl_emp INTO wa_account_gl_emp INDEX 1.
  IF sy-subrc = 0.
*Start of Defect-2009 F463AFJ 11/16/2023
*Trading parterner should be captured only for positive line item
    DATA(wa_acc_gl_emp) = wa_account_gl_emp.
    IF wa_acc_gl_emp-trade_id IS NOT INITIAL.
       wa_acc_gl_emp-trade_id = space.
       MODIFY i_account_gl_emp from wa_acc_gl_emp INDEX 1.
       CLEAR wa_acc_gl_emp.
    ENDIF.
*End of Defect-2009 F463AFJ 11/16/2023
** ACCOUNT GL Table Data
    wa_account_gl_emp-itemno_acc = l_count1.
    wa_account_gl_emp-gl_account = p_gl_off.
    wa_account_gl_emp-acct_type  = ''.
    wa_account_gl_emp-vendor_no = ''.
    CLEAR : wa_account_gl-item_text.
*    CONCATENATE wa_file-incur_date wa_file-exp_type2 wa_file-vendor INTO wa_account_gl-item_text SEPARATED BY space.
    wa_account_gl_emp-item_text = v_header_emp-ref_doc_no.

*Start of change - Defect 2612
* If International File - the Offset Company Code = Header Company Code.
*    IF p_int = 'X'.
    wa_account_gl_emp-comp_code = v_header-comp_code.
*    ELSE.
*      wa_account_gl-comp_code  = p_cc_off.
*    ENDIF.
*End of change - Defect 2612
    wa_account_gl_emp-costcenter = space.
*    wa_account_gl_emp-alloc_nmbr = space. "LMORALES Defect 10276
    wa_account_gl_emp-wbs_element = space.
    wa_account_gl_emp-orderid = space.
*    wa_account_gl-costcenter = wa_file-dept.
*    i_account_gl-DE_CRE_IND =

*{ BEGING OF LMORALES Defect 10276
    READ TABLE i_repid
     ASSIGNING <fs_repid>
     WITH KEY batch_id  = wa_repid-batch_id
              batch_seq = wa_repid-batch_seq
              pernr     = wa_repid-pernr.

    IF sy-subrc EQ 0
   AND <fs_repid> IS ASSIGNED.

      MOVE  <fs_repid>-repid TO  wa_account_gl_emp-alloc_nmbr.


    ENDIF.

*{ END OF LMORALES Defect 10276

    APPEND wa_account_gl_emp TO i_account_gl_emp.
    CLEAR wa_account_gl_emp.

  ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

    CLEAR wa_currency.
    READ TABLE i_currency INTO wa_currency INDEX 1.
    IF sy-subrc = 0.
      wa_currency-itemno_acc     = l_count.
      wa_currency-amt_doccur     = v_offset_amt * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
      wa_currency-amt_doccur_long     = v_offset_amt * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
      APPEND wa_currency TO i_currency.
      CLEAR : wa_currency, v_offset_amt.
    ENDIF.

    CLEAR wa_currency.
    READ TABLE i_currency INTO wa_currency INDEX 2.
    IF sy-subrc = 0.
      SELECT SINGLE waers INTO gv_waers FROM t001 WHERE
                          bukrs EQ  v_header-comp_code.
      wa_currency-itemno_acc     = l_count.
      wa_currency-currency      = gv_waers.
*if gv_waers EQ wa_file-REIMB_CURR1.
      IF gv_waers EQ l_reimb_curr.
        wa_currency-amt_doccur     = v_offset_amt1 * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
        wa_currency-amt_doccur_long     = v_offset_amt1 * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
      ELSE.
        wa_currency-amt_doccur     = v_offset_amt2 * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
        wa_currency-amt_doccur_long     = v_offset_amt2 * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
      ENDIF.
      APPEND wa_currency TO i_currency.
      CLEAR : wa_currency, v_offset_amt1, v_offset_amt2.
    ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  CLEAR wa_currency.
  READ TABLE i_currency_emp INTO wa_currency INDEX 1.
  IF sy-subrc = 0.
    wa_currency-itemno_acc     = l_count1.
    wa_currency-amt_doccur     = v_offset_amt_emp * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
    wa_currency-amt_doccur_long     = v_offset_amt_emp * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
    APPEND wa_currency TO i_currency_emp.
    CLEAR : wa_currency, v_offset_amt_emp.
  ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

* Extension used for PERNR
    IF v_flag EQ 'X'.
      CLEAR wa_extension2.
    ENDIF.
    CLEAR wa_pa0032.
    "Begin of change Dkannan - Defect 7212 -  Concur clearingaccount
    IF v_flag EQ 'X'. "Check for last line.

      READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
      IF sy-subrc = 0.
        " l_count = l_count + 1.
        " wa_extension2-valuepart1  =  l_count. "Defect 7212 -  Concur clearingaccount
        wa_extension2-structure   =  'ZPERS'.      "RALVARADO-08252022
        wa_extension2-valuepart2  =  wa_pa0032-pernr.
        wa_extension2-valuepart4  = '00000000'.

      ENDIF.
    ENDIF.

    wa_extension2-valuepart1  =  l_count. "Defect 7212 -  Concur clearingaccount
    APPEND wa_extension2 TO i_extension2.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  IF v_flag EQ 'X'. " Check for last line
    CLEAR wa_extension2_emp.
  ENDIF.
  CLEAR wa_pa0032.
  IF v_flag EQ 'X'. "Defect 7212 -  Concur clearingaccount

    READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
    IF sy-subrc = 0.
      "l_count1 = l_count1 + 1.
      "wa_extension2_emp-valuepart1  =  l_count1. "Defect 7212 -  Concur clearingaccount
      wa_extension2_emp-structure   =  'ZPERS'.      "RALVARADO-08252022
      wa_extension2_emp-valuepart2  =  wa_pa0032-pernr.
      wa_extension2_emp-valuepart4  = '00000000'.

    ENDIF.
  ENDIF.

  wa_extension2_emp-valuepart1  =  l_count1. "Defect 7212 -  Concur clearingaccount
  APPEND wa_extension2_emp TO i_extension2_emp. "End of change Dkannan - Defect 7212 -  Concur clearingaccount

*{Begin of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*
*  READ TABLE I_ACCOUNT_GL_BARCLAYS
*    INTO WA_ACCOUNT_GL_BARCLAYS
*    INDEX 1.
*
*  IF SY-SUBRC = 0.
*
*** ACCOUNT GL Table Data
*    MOVE L_COUNT_BARCLAYS TO WA_ACCOUNT_GL_BARCLAYS-ITEMNO_ACC.
*
*    MOVE P_GL_OFF TO WA_ACCOUNT_GL_BARCLAYS-GL_ACCOUNT.
*
*    WA_ACCOUNT_GL_BARCLAYS-ACCT_TYPE = ''.
*
*    WA_ACCOUNT_GL_BARCLAYS-VENDOR_NO = ''.
*
*    CLEAR : WA_ACCOUNT_GL_BARCLAYS-ITEM_TEXT.
*
*    MOVE V_HEADER_BARCLAYS-REF_DOC_NO TO WA_ACCOUNT_GL_BARCLAYS-ITEM_TEXT.
*
*    MOVE  V_HEADER-COMP_CODE TO WA_ACCOUNT_GL_BARCLAYS-COMP_CODE.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_BARCLAYS-COSTCENTER.
*
**    MOVE space TO wa_account_gl_barclays-alloc_nmbr. LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 10276
*    READ TABLE I_REPID
*     ASSIGNING <FS_REPID>
*     WITH KEY BATCH_ID  = WA_REPID-BATCH_ID
*              BATCH_SEQ = WA_REPID-BATCH_SEQ
*              PERNR     = WA_REPID-PERNR.
*
*    IF SY-SUBRC EQ 0
*   AND <FS_REPID> IS ASSIGNED.
*
*
*      MOVE <FS_REPID>-REPID TO WA_ACCOUNT_GL_BARCLAYS-ALLOC_NMBR.
*
*
*    ENDIF.
*
**{ END OF LMORALES Defect 10276
**    UNASSIGN <fs_pa0032_barclays>.
**
**    READ TABLE i_pa0032
**      ASSIGNING <fs_pa0032_barclays>
**      WITH KEY pnalt = wa_file-pernr.
**
**    IF sy-subrc EQ 0
**   AND <fs_pa0032_barclays> IS ASSIGNED.
**
**      MOVE <fs_pa0032_barclays>-pernr TO wa_account_gl_barclays-alloc_nmbr.
**
**    ENDIF.
*
*
*    MOVE SPACE TO WA_ACCOUNT_GL_BARCLAYS-WBS_ELEMENT.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_BARCLAYS-ORDERID.
*
*    APPEND WA_ACCOUNT_GL_BARCLAYS TO I_ACCOUNT_GL_BARCLAYS.
*
*    CLEAR WA_ACCOUNT_GL_BARCLAYS.
*
*  ENDIF.
*
*  CLEAR WA_CURRENCY_BARCLAYS.
*
*  READ TABLE I_CURRENCY_BARCLAYS
*    INTO WA_CURRENCY_BARCLAYS
*    INDEX 1.
*
*  IF SY-SUBRC = 0.
*
*    MOVE L_COUNT_BARCLAYS TO WA_CURRENCY_BARCLAYS-ITEMNO_ACC.
*
*    WA_CURRENCY_BARCLAYS-AMT_DOCCUR     = V_OFFSET_AMT_BARCLAYS * ( -1 ).
*
*    APPEND WA_CURRENCY_BARCLAYS TO I_CURRENCY_BARCLAYS.
*
*    CLEAR : WA_CURRENCY_BARCLAYS,
*            V_OFFSET_AMT_BARCLAYS.
*
*  ENDIF.
*
*  IF V_FLAG EQ C_X. " Check for last line
*
*    CLEAR WA_EXTENSION2_BARCLAYS.
*
*  ENDIF.
*
*  CLEAR WA_PA0032.
*
*  IF V_FLAG EQ 'X'.
*
*    READ TABLE I_PA0032
*      INTO WA_PA0032
*      WITH KEY PNALT = WA_FILE-PERNR.
*
*    IF SY-SUBRC = 0.
*
*      MOVE WA_PA0032-PERNR TO WA_EXTENSION2_BARCLAYS-VALUEPART2.
*
*      MOVE TEXT-ID0 TO WA_EXTENSION2_BARCLAYS-VALUEPART4.
*
*    ENDIF.
*  ENDIF.
*
*  MOVE L_COUNT_BARCLAYS TO WA_EXTENSION2_BARCLAYS-VALUEPART1.
*
*  APPEND WA_EXTENSION2_BARCLAYS TO I_EXTENSION2_BARCLAYS.
*
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*  READ TABLE I_ACCOUNT_GL_PNC
*    INTO WA_ACCOUNT_GL_PNC
*    INDEX 1.
*
*  IF SY-SUBRC = 0.
*
*** ACCOUNT GL Table Data
*    MOVE L_COUNT_PNC TO WA_ACCOUNT_GL_PNC-ITEMNO_ACC.
*
*    MOVE P_GL_OFF TO WA_ACCOUNT_GL_PNC-GL_ACCOUNT.
*
*    WA_ACCOUNT_GL_PNC-ACCT_TYPE = ''.
*
*    WA_ACCOUNT_GL_PNC-VENDOR_NO = ''.
*
*    CLEAR : WA_ACCOUNT_GL_PNC-ITEM_TEXT.
*
*    MOVE V_HEADER_PNC-REF_DOC_NO TO WA_ACCOUNT_GL_PNC-ITEM_TEXT.
*
*    MOVE  V_HEADER-COMP_CODE TO WA_ACCOUNT_GL_PNC-COMP_CODE.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_PNC-COSTCENTER.
*
**    MOVE space TO wa_account_gl_pnc-alloc_nmbr. LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 10276
*    READ TABLE I_REPID
*     ASSIGNING <FS_REPID>
*     WITH KEY BATCH_ID  = WA_REPID-BATCH_ID
*              BATCH_SEQ = WA_REPID-BATCH_SEQ
*              PERNR     = WA_REPID-PERNR.
*
*    IF SY-SUBRC EQ 0
*   AND <FS_REPID> IS ASSIGNED.
*
*      MOVE <FS_REPID>-REPID TO WA_ACCOUNT_GL_PNC-ALLOC_NMBR.
*
*
*    ENDIF.
*
**{ END OF LMORALES Defect 10276
*
*    MOVE SPACE TO WA_ACCOUNT_GL_PNC-WBS_ELEMENT.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_PNC-ORDERID.
*
*    APPEND WA_ACCOUNT_GL_PNC TO I_ACCOUNT_GL_PNC.
*
*    CLEAR WA_ACCOUNT_GL_PNC.
*
*  ENDIF.
*
*  CLEAR WA_CURRENCY_PNC.
*
*  READ TABLE I_CURRENCY_PNC
*    INTO WA_CURRENCY_PNC
*    INDEX 1.
*
*  IF SY-SUBRC = 0.
*
*    MOVE L_COUNT_PNC TO WA_CURRENCY_PNC-ITEMNO_ACC.
*
*    WA_CURRENCY_PNC-AMT_DOCCUR     = V_OFFSET_AMT_PNC * ( -1 ).
*
*    APPEND WA_CURRENCY_PNC TO I_CURRENCY_PNC.
*
*    CLEAR : WA_CURRENCY_PNC,
*            V_OFFSET_AMT_PNC.
*
*  ENDIF.
*
*  IF V_FLAG EQ C_X. " Check for last line
*
*    CLEAR WA_EXTENSION2_PNC.
*
*  ENDIF.
*
*  CLEAR WA_PA0032.
*
*  IF V_FLAG EQ 'X'.
*
*    READ TABLE I_PA0032
*      INTO WA_PA0032
*      WITH KEY PNALT = WA_FILE-PERNR.
*
*    IF SY-SUBRC = 0.
*
*      MOVE WA_PA0032-PERNR TO WA_EXTENSION2_PNC-VALUEPART2.
*
*      MOVE TEXT-ID0 TO WA_EXTENSION2_PNC-VALUEPART4.
*
*    ENDIF.
*  ENDIF.
*
*  MOVE L_COUNT_PNC TO WA_EXTENSION2_PNC-VALUEPART1.
*
*  APPEND WA_EXTENSION2_PNC TO I_EXTENSION2_PNC.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*
*  READ TABLE I_ACCOUNT_GL_HDFC
*    INTO WA_ACCOUNT_GL_HDFC
*    INDEX 1.
*
*  IF SY-SUBRC = 0.
*
*** ACCOUNT GL Table Data
*    MOVE L_COUNT_HDFC TO WA_ACCOUNT_GL_HDFC-ITEMNO_ACC.
*
*    MOVE P_GL_OFF TO WA_ACCOUNT_GL_HDFC-GL_ACCOUNT.
*
*    WA_ACCOUNT_GL_HDFC-ACCT_TYPE = ''.
*
*    WA_ACCOUNT_GL_HDFC-VENDOR_NO = ''.
*
*    CLEAR : WA_ACCOUNT_GL_HDFC-ITEM_TEXT.
*
*    MOVE V_HEADER_HDFC-REF_DOC_NO TO WA_ACCOUNT_GL_BARCLAYS-ITEM_TEXT.
*
*    MOVE  V_HEADER_HDFC-COMP_CODE TO WA_ACCOUNT_GL_HDFC-COMP_CODE.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_HDFC-COSTCENTER.
*
**    MOVE space TO wa_account_gl_barclays-alloc_nmbr. LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 10276
*    READ TABLE I_REPID
*     ASSIGNING <FS_REPID>
*     WITH KEY BATCH_ID  = WA_REPID-BATCH_ID
*              BATCH_SEQ = WA_REPID-BATCH_SEQ
*              PERNR     = WA_REPID-PERNR.
*
*    IF SY-SUBRC EQ 0
*   AND <FS_REPID> IS ASSIGNED.
*
*
*      MOVE <FS_REPID>-REPID TO WA_ACCOUNT_GL_HDFC-ALLOC_NMBR.
*
*
*    ENDIF.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_HDFC-WBS_ELEMENT.
*
*    MOVE SPACE TO WA_ACCOUNT_GL_HDFC-ORDERID.
*
*    APPEND WA_ACCOUNT_GL_HDFC TO I_ACCOUNT_GL_HDFC.
*
*    CLEAR WA_ACCOUNT_GL_HDFC.
*
*  ENDIF.
*
*  CLEAR WA_CURRENCY_HDFC.
*
*  READ TABLE I_CURRENCY_HDFC
*    INTO WA_CURRENCY_HDFC
*    INDEX 1.
*
*  IF SY-SUBRC = 0.
*
*    MOVE L_COUNT_HDFC TO WA_CURRENCY_HDFC-ITEMNO_ACC.
*
*    WA_CURRENCY_HDFC-AMT_DOCCUR     = V_OFFSET_AMT_HDFC * ( -1 ).
*
*    APPEND WA_CURRENCY_HDFC TO I_CURRENCY_HDFC.
*
*    CLEAR : WA_CURRENCY_HDFC,
*            V_OFFSET_AMT_HDFC.
*
*  ENDIF.
*
*  IF V_FLAG EQ C_X. " Check for last line
*
*    CLEAR WA_EXTENSION2_HDFC.
*
*  ENDIF.
*
*  CLEAR WA_PA0032.
*
*  IF V_FLAG EQ 'X'.
*
*    READ TABLE I_PA0032
*      INTO WA_PA0032
*      WITH KEY PNALT = WA_FILE-PERNR.
*
*    IF SY-SUBRC = 0.
*
*      MOVE WA_PA0032-PERNR TO WA_EXTENSION2_HDFC-VALUEPART2.
*
*      MOVE TEXT-ID0 TO WA_EXTENSION2_HDFC-VALUEPART4.
*
*    ENDIF.
*  ENDIF.
*
*  MOVE L_COUNT_HDFC TO WA_EXTENSION2_HDFC-VALUEPART1.
*
*  APPEND WA_EXTENSION2_HDFC TO I_EXTENSION2_HDFC.
*
**{ END OF LMORALES Defect 11420

*{Begin of RALVARADO-01302018-Defect 12607
  READ TABLE i_account_gl_new
    INTO wa_account_gl_new
    INDEX 1.
  IF sy-subrc = 0.

*Start of Defect-2009 F463AFJ 11/17/2023
*Trading parterner should be captured only for positive line item
    DATA(wa_acc_gl_new) = wa_account_gl_new.
    IF wa_acc_gl_new-trade_id IS NOT INITIAL.
       wa_acc_gl_new-trade_id = space.
       MODIFY i_account_gl_new from wa_acc_gl_new INDEX 1.
       CLEAR wa_acc_gl_new.
    ENDIF.
*End of Defect-2009 F463AFJ 11/17/2023

** ACCOUNT GL Table Data
    MOVE l_count_new TO wa_account_gl_new-itemno_acc.

    MOVE p_gl_off TO wa_account_gl_new-gl_account.

    wa_account_gl_new-acct_type = ''.

    wa_account_gl_new-vendor_no = ''.

    CLEAR : wa_account_gl_new-item_text.

    MOVE v_header_new-ref_doc_no TO wa_account_gl_new-item_text.

    MOVE  v_header_new-comp_code TO wa_account_gl_new-comp_code.

    MOVE space TO wa_account_gl_new-costcenter.

*    MOVE space TO wa_account_gl_barclays-alloc_nmbr. LMORALES Defect 10276

*{ BEGING OF LMORALES Defect 10276
    READ TABLE i_repid
     ASSIGNING <fs_repid>
     WITH KEY batch_id  = wa_repid-batch_id
              batch_seq = wa_repid-batch_seq
              pernr     = wa_repid-pernr.

    IF sy-subrc EQ 0
    AND <fs_repid> IS ASSIGNED.

      MOVE <fs_repid>-repid TO wa_account_gl_new-alloc_nmbr.

    ENDIF.

    MOVE space TO wa_account_gl_new-wbs_element.

    MOVE space TO wa_account_gl_new-orderid.

    APPEND wa_account_gl_new TO i_account_gl_new.

    CLEAR wa_account_gl_new.

  ENDIF.

  CLEAR wa_currency_new.

  READ TABLE i_currency_new
    INTO wa_currency_new
    INDEX 1.

  IF sy-subrc = 0.

    MOVE l_count_new TO wa_currency_new-itemno_acc.

    wa_currency_new-amt_doccur     = v_offset_amt_new * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
    wa_currency_new-amt_doccur_long     = v_offset_amt_new * ( -1 ).
* Begin of Changes SAKOTA I118 DS4K901193
    APPEND wa_currency_new TO i_currency_new.

    CLEAR : wa_currency_new,
            v_offset_amt_new.

  ENDIF.

  IF v_flag EQ c_x. " Check for last line

    CLEAR wa_extension2_new.

  ENDIF.

  CLEAR wa_pa0032.

  IF v_flag EQ 'X'.

    READ TABLE i_pa0032
      INTO wa_pa0032
      WITH KEY pnalt = wa_file-pernr.

    IF sy-subrc = 0.
      wa_extension2_new-structure   =  'ZPERS'.      "RALVARADO-08252022
      MOVE wa_pa0032-pernr TO wa_extension2_new-valuepart2.

      MOVE TEXT-id0 TO wa_extension2_new-valuepart4.

    ENDIF.
  ENDIF.

  MOVE l_count_new TO wa_extension2_new-valuepart1.

  APPEND wa_extension2_new TO i_extension2_new.
*}End of RALVARADO-01302018-Defect 12607

ENDFORM.                    " PREPARE_OFFSET
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_LOG
*&---------------------------------------------------------------------*
*       Log Display
*----------------------------------------------------------------------*
FORM display_log .
  DATA : l_uname(80) TYPE c.
  SELECT SINGLE name_text FROM user_addrp INTO l_uname WHERE bname = sy-uname.

  WRITE:/ 'Executed by : '(015), sy-uname , ' - ' , l_uname .
  WRITE:/ 'DATE        : '(016), sy-datum.
  WRITE:/ 'TIME        : '(017), sy-uzeit.

  SKIP.ULINE.

  IF p_test = 'X'.
    WRITE:/ 'Test Mode'(018) COLOR COL_POSITIVE.
  ENDIF.
  SKIP.
  SKIP.
  CLEAR wa_log.
* Success Records.
  READ TABLE i_log INTO wa_log WITH KEY msgtype = 'S'.
  IF sy-subrc = 0.
    IF p_test = 'X'.
      WRITE:/  'Following Documents Checked Successfully'(019).
      SKIP.
    ELSE.
      CLEAR wa_log.
      READ TABLE i_log INTO wa_log WITH KEY msgtype  = 'E'.

      IF sy-subrc = 0.
        WRITE:/  'Following Documents Checked Successfully'(019).
        SKIP.

      ELSE.


        WRITE:/  'Following Documents Posted Successfully'(020).
        SKIP.
      ENDIF.
    ENDIF.
    WRITE: AT /5(13) 'Message Type'(021) COLOR COL_POSITIVE  , 20(23) 'Reference REPID / CURR'(022) COLOR COL_POSITIVE  , 45(150) 'Message'(023) COLOR COL_POSITIVE .
    CLEAR wa_log.
    DATA: wa_log_curr TYPE t_log.
    DATA: lv_error_record TYPE c LENGTH 1.
    lv_error_record = ' '.
    LOOP AT i_log INTO wa_log WHERE msgtype = 'S'.
      lv_error_record = ' '.
      "start of changes of defect rirawat 12/14/2021
      IF wa_log-reference+0(1) = 'C' OR wa_log-reference+0(1) = 'E'.
        READ TABLE i_log INTO wa_log_curr WITH KEY reference = wa_log-reference+1(19) msgtype = 'E'.
        IF sy-subrc = 0.
          lv_error_record = 'X'.
        ENDIF.
        CONCATENATE 'E' wa_log-reference+1(19) INTO DATA(lv_emp).
        READ TABLE i_log INTO wa_log_curr WITH KEY reference = lv_emp msgtype = 'E'.
        IF sy-subrc = 0.
          lv_error_record = 'X'.
        ENDIF.
        CONCATENATE 'C' wa_log-reference+1(19) INTO DATA(lv_emp1).
        READ TABLE i_log INTO wa_log_curr WITH KEY reference = lv_emp1 msgtype = 'E'.
        IF sy-subrc = 0.
          lv_error_record = 'X'.
        ENDIF.
      ELSE.
        READ TABLE i_log INTO wa_log_curr WITH KEY reference = wa_log-reference msgtype = 'E'.
        IF sy-subrc = 0.
          lv_error_record = 'X'.
        ENDIF.
        CONCATENATE 'E' wa_log-reference INTO lv_emp.
        READ TABLE i_log INTO wa_log_curr WITH KEY reference = lv_emp msgtype = 'E'.
        IF sy-subrc = 0.
          lv_error_record = 'X'.
        ENDIF.
        CONCATENATE 'C' wa_log-reference INTO lv_emp1.
        READ TABLE i_log INTO wa_log_curr WITH KEY reference = lv_emp1 msgtype = 'E'.
        IF sy-subrc = 0.
          lv_error_record = 'X'.
        ENDIF.
      ENDIF.


      IF lv_error_record IS INITIAL.
        WRITE: AT /5(13) wa_log-msgtype, 20(23) wa_log-reference , 45(150) wa_log-message.
      ENDIF.
      "end of changes of defect rirawat 12/14/2021
      CLEAR wa_log.
    ENDLOOP.
  ENDIF.

  SKIP.SKIP.
* Error Records.
  READ TABLE i_log INTO wa_log WITH KEY msgtype = 'E'.
  IF sy-subrc = 0.
    WRITE:/  'Errored Documents'(024).
    SKIP.
    WRITE: AT /5(13) 'Message Type'(021) COLOR COL_NEGATIVE , 20(23) 'Reference'(025) COLOR COL_NEGATIVE , 44(150) 'Message'(023) COLOR COL_NEGATIVE.
    CLEAR wa_log.
    LOOP AT i_log INTO wa_log WHERE msgtype = 'E'.
      WRITE: AT /5(13) wa_log-msgtype, 20(23) wa_log-reference , 45(150) wa_log-message.
    ENDLOOP.

  ENDIF.
ENDFORM.                    " DISPLAY_LOG
*&---------------------------------------------------------------------*
*&      Form  FETCH_BKPF
*&---------------------------------------------------------------------*
*       BKPF is checked before upload. To make sure there is no duplicate posting.
*----------------------------------------------------------------------*
FORM fetch_bkpf .
  DATA lv_date TYPE sy-datum.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

    REFRESH i_file_bkpf[].
    i_file_bkpf[] = i_file[].
    DATA wa_bkpf_new TYPE t_bkpf_new.
    DATA : l_d(2) TYPE n,
           l_m(2) TYPE n,
           l_y(4) TYPE c.

    SORT i_file_bkpf BY repid.
    " for fetcthing ZM documents
    IF i_file_bkpf[] IS NOT INITIAL.
      LOOP AT i_file_bkpf INTO DATA(wa_file_bkpf).
        wa_bkpf_new-repid = wa_file_bkpf-repid.
        CLEAR lv_date.
* start of changes defect 19747 SAKOTA
        IF p_appl = 'X'.
          "Begin of defect 20134 FCJSJ22 14/11/2022
*          SPLIT wa_file_bkpf-appr_date AT '-' INTO l_y l_m l_d.
          SPLIT wa_file_bkpf-batch_date AT '-' INTO l_y l_m l_d.
        ELSE.
*          SPLIT wa_file_bkpf-appr_date AT '/' INTO l_m l_d l_y.
          SPLIT wa_file_bkpf-batch_date AT '/' INTO l_m l_d l_y.
          "End of defect 20134 FCJSJ22 14/11/2022

          IF l_d < 10.
            SHIFT l_d RIGHT.
            OVERLAY l_d WITH '0'.
          ENDIF.

          IF l_m < 10.
            SHIFT l_m RIGHT.
            OVERLAY l_m WITH '0'.
          ENDIF.
        ENDIF.

        "Begin of defect 20134 FCJSJ22 14/11/2022
*        CONCATENATE l_y l_m l_d INTO wa_file_bkpf-appr_date.
*        CONDENSE wa_file_bkpf-appr_date.
*        wa_bkpf_new-budat = wa_file_bkpf-appr_date.
        CONCATENATE l_y l_m l_d INTO wa_file_bkpf-batch_date.
        CONDENSE wa_file_bkpf-batch_date.
        wa_bkpf_new-budat = wa_file_bkpf-batch_date.
        "End of defect 20134 FCJSJ22 14/11/2022


*        CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*          EXPORTING
*            date_external = wa_file_bkpf-appr_date
*          IMPORTING
*            date_internal = wa_bkpf_new-budat.
* End of changes defect 19747 SAKOTA

        APPEND wa_bkpf_new TO i_bkpf_new.
        CLEAR:wa_file_bkpf, wa_bkpf_new.
      ENDLOOP.
      SELECT  bukrs,
              belnr,
              gjahr,
              blart,
              bldat, "19183 SAKOTA
              xblnr,
              stblg " reversal reference document
                   " FROM bkpf INTO TABLE @DATA(i_bkpf_zm) FOR ALL ENTRIES IN @i_file_bkpf WHERE
                     FROM bkpf INTO TABLE @DATA(i_bkpf_zm) FOR ALL ENTRIES IN @i_bkpf_new WHERE
                                                                    xblnr = @i_bkpf_new-repid AND "@i_file_bkpf-repid AND "19183
                                                                    blart = @p_doctyp AND   " changing p_doctyp to lv_doctyp changes 19183 rirawat
                                                                    "budat = @p_posdat. defect 19183 sakota
                                                                    budat = @i_bkpf_new-budat."defect 19183 sakota

    ENDIF.

* sart of changes defect 19183 rirawat for fecthing ZN documents
    LOOP AT i_file_bkpf ASSIGNING FIELD-SYMBOL(<fs_bkpf>).
      IF <fs_bkpf>-temp15 EQ 'EMPLOYEE'.
        CONCATENATE 'E' <fs_bkpf>-repid  INTO <fs_bkpf>-repid.
      ELSE.
        CONCATENATE 'C' <fs_bkpf>-repid  INTO <fs_bkpf>-repid.
      ENDIF.
    ENDLOOP.

    DATA(lv_doctyp) = 'ZN'.  " to pick ZN doc and check if they exists.
* start of changes defect 19747 SAKOTA
    IF p_appl = 'X'.
      "Begin of defect 20134 FCJSJ22 14/11/2022
*      SPLIT <fs_bkpf>-appr_date AT '-' INTO l_y l_m l_d.
      SPLIT <fs_bkpf>-batch_date AT '-' INTO l_y l_m l_d.
    ELSE.
*      SPLIT <fs_bkpf>-appr_date AT '/' INTO l_m l_d l_y.
      SPLIT <fs_bkpf>-batch_date AT '/' INTO l_m l_d l_y.
      "End of defect 20134 FCJSJ22 14/11/2022
      IF l_d < 10.
        SHIFT l_d RIGHT.
        OVERLAY l_d WITH '0'.
      ENDIF.

      IF l_m < 10.
        SHIFT l_m RIGHT.
        OVERLAY l_m WITH '0'.
      ENDIF.
    ENDIF.
    "Begin of defect 20134 FCJSJ22 14/11/2022
*    CONCATENATE l_y l_m l_d INTO <fs_bkpf>-appr_date.
    CONCATENATE l_y l_m l_d INTO <fs_bkpf>-batch_date.
*    CONDENSE <fs_bkpf>-appr_date.
    CONDENSE <fs_bkpf>-batch_date.
    CLEAR lv_date.
*    lv_date = <fs_bkpf>-appr_date.
    lv_date = <fs_bkpf>-batch_date.
    "End of defect 20134 FCJSJ22 14/11/2022

*    CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*      EXPORTING
*        date_external = <fs_bkpf>-appr_date
*      IMPORTING
*        date_internal = lv_date.
* End of changes defect 19747 SAKOTA

* end of changes defect 19183

    DELETE ADJACENT DUPLICATES FROM i_file_bkpf COMPARING repid.
    IF i_file_bkpf[] IS NOT INITIAL.
      REFRESH: i_bkpf_new.
      CLEAR wa_bkpf_new.
      LOOP AT i_file_bkpf INTO DATA(wa_file_bkpf2).
        wa_bkpf_new-repid = wa_file_bkpf2-repid.
* start of changes defect 19747 SAKOTA
        IF p_appl = 'X'.
          "Begin of defect 20134 FCJSJ22 14/11/2022
*          SPLIT wa_file_bkpf2-appr_date AT '-' INTO l_y l_m l_d.
          SPLIT wa_file_bkpf2-batch_date AT '-' INTO l_y l_m l_d.
        ELSE.
*          SPLIT wa_file_bkpf2-appr_date AT '/' INTO l_m l_d l_y.
          SPLIT wa_file_bkpf2-batch_date AT '/' INTO l_m l_d l_y.
          "End of defect 20134 FCJSJ22 14/11/2022

          IF l_d < 10.
            SHIFT l_d RIGHT.
            OVERLAY l_d WITH '0'.
          ENDIF.

          IF l_m < 10.
            SHIFT l_m RIGHT.
            OVERLAY l_m WITH '0'.
          ENDIF.
        ENDIF.
        "Begin of defect 20134 FCJSJ22 14/11/2022
*        CONCATENATE l_y l_m l_d INTO wa_file_bkpf2-appr_date.
*        CONDENSE wa_file_bkpf2-appr_date.
*        wa_bkpf_new-budat = wa_file_bkpf2-appr_date.
        CONCATENATE l_y l_m l_d INTO wa_file_bkpf2-batch_date.
        CONDENSE wa_file_bkpf2-batch_date.
        wa_bkpf_new-budat = wa_file_bkpf2-batch_date.
        "End of defect 20134 FCJSJ22 14/11/2022

        CLEAR lv_date.
*        CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*          EXPORTING
*            date_external = wa_file_bkpf2-appr_date
*          IMPORTING
*            date_internal = wa_bkpf_new-budat.

* End of changes defect 19747 SAKOTA

        APPEND wa_bkpf_new TO i_bkpf_new.
        CLEAR:wa_file_bkpf2, wa_bkpf_new.
      ENDLOOP.

      SELECT  bukrs
              belnr
              gjahr
              blart
              bldat "19183 SAKOTA
              xblnr
              stblg " reversal reference document
                    "FROM bkpf INTO TABLE i_bkpf FOR ALL ENTRIES IN i_file_bkpf WHERE
                    FROM bkpf INTO TABLE i_bkpf FOR ALL ENTRIES IN i_bkpf_new WHERE
                                                                    xblnr = i_bkpf_new-repid AND
                                                                    blart = lv_doctyp AND   " changing p_doctyp to lv_doctyp changes 19183 rirawat
                                                                    "budat = p_posdat. "defect 19183 sakota
                                                                    budat = i_bkpf_new-budat."defect 19183 sakota

      APPEND LINES OF i_bkpf_zm TO i_bkpf.
    ENDIF.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ELSE.
* Temporary table with Employee payment
    REFRESH i_file_bkpf[].
    i_file_bkpf[] = i_file_emp[].
* Temorary table with card payment data
    IF i_file_card[] IS NOT INITIAL.
      APPEND LINES OF i_file_card TO i_file_bkpf.
      CLEAR : i_file_card.
    ENDIF.
* Get unique entries of Report IDs
    SORT i_file_bkpf BY repid.
    DELETE ADJACENT DUPLICATES FROM i_file_bkpf COMPARING repid.
    IF i_file_bkpf[] IS NOT INITIAL.
      REFRESH i_bkpf_new.
      LOOP AT i_file_bkpf INTO DATA(wa_file_bkpf1).
        wa_bkpf_new-repid = wa_file_bkpf1-repid.
* start of changes defect 19747 SAKOTA
        IF p_appl = 'X'.
          "Begin of defect 20134 FCJSJ22 14/11/2022
*          SPLIT wa_file_bkpf1-appr_date AT '-' INTO l_y l_m l_d.
          SPLIT wa_file_bkpf1-batch_date AT '-' INTO l_y l_m l_d.
        ELSE.
*          SPLIT wa_file_bkpf1-appr_date AT '/' INTO l_m l_d l_y.
          SPLIT wa_file_bkpf1-batch_date AT '/' INTO l_m l_d l_y.
          "Begin of defect 20134 FCJSJ22 14/11/2022

          IF l_d < 10.
            SHIFT l_d RIGHT.
            OVERLAY l_d WITH '0'.
          ENDIF.

          IF l_m < 10.
            SHIFT l_m RIGHT.
            OVERLAY l_m WITH '0'.
          ENDIF.
        ENDIF.
        "Begin of defect 20134 FCJSJ22 14/11/2022
*        CONCATENATE l_y l_m l_d INTO wa_file_bkpf1-appr_date.
*        CONDENSE wa_file_bkpf1-appr_date.
        CONCATENATE l_y l_m l_d INTO wa_file_bkpf1-batch_date.
        CONDENSE wa_file_bkpf1-batch_date.

        CLEAR lv_date.
*        wa_bkpf_new-budat = wa_file_bkpf1-appr_date.
        wa_bkpf_new-budat = wa_file_bkpf1-batch_date.
        "End of defect 20134 FCJSJ22 14/11/2022

*        CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*          EXPORTING
*            date_external = wa_file_bkpf1-appr_date
*          IMPORTING
*            date_internal = wa_bkpf_new-budat.
* End of changes defect 19747 SAKOTA

        APPEND wa_bkpf_new TO i_bkpf_new.
        CLEAR:wa_file_bkpf1, wa_bkpf_new.
      ENDLOOP.
* Check Accounting Document header data to see if Reference document is already posted in system
      SELECT  bukrs
              belnr
              gjahr
              blart
              bldat "19183 SAKOTA
              xblnr
              stblg " reversal reference document
                   " FROM bkpf INTO TABLE i_bkpf FOR ALL ENTRIES IN i_file_bkpf WHERE
                    FROM bkpf INTO TABLE i_bkpf FOR ALL ENTRIES IN i_bkpf_new WHERE
                                                                    xblnr = i_bkpf_new-repid AND
                                                                    blart = pdoctyp1 AND
                                                                    "budat = p_posdat. "defect 19183 sakota
                                                                    budat = i_bkpf_new-budat."defect 19183 sakota
    ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.

ENDFORM.                    " FETCH_BKPF
*&---------------------------------------------------------------------*
*&      Form  CHECK_POSTINGS
*&---------------------------------------------------------------------*
*       Check if records posted already
*----------------------------------------------------------------------*
"start of changes 19183
TYPES: BEGIN OF ls_error_rec,
         repid      TYPE char16,
         apprv_date TYPE char10,
         temp15     TYPE char20,
       END OF ls_error_rec.

DATA: wa_error_rec TYPE ls_error_rec,
      it_error_rec LIKE STANDARD TABLE OF wa_error_rec.

FORM check_postings.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  DATA : l_xblnr TYPE xblnr1,
         l_date  TYPE sy-datum. " defect 19183 sakota

* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  DATA : l_d(2) TYPE n,
         l_m(2) TYPE n,
         l_y(4) TYPE c.

  CLEAR : wa_file , v_posting_flag.
  LOOP AT i_file INTO wa_file.

    lv_repid = wa_file-repid+0(7).
* Begin of chenges defect 19747 sakota
    IF p_appl = 'X'.
      SPLIT wa_file-approal_date AT '-' INTO l_y l_m l_d.
    ELSE.
      SPLIT wa_file-approal_date AT '/' INTO l_m l_d l_y.
      IF l_d < 10.
        SHIFT l_d RIGHT.
        OVERLAY l_d WITH '0'.
      ENDIF.

      IF l_m < 10.
        SHIFT l_m RIGHT.
        OVERLAY l_m WITH '0'.
      ENDIF.
    ENDIF.
    CONCATENATE l_y l_m l_d INTO wa_file-approal_date.
    CONDENSE wa_file-approal_date.
* Begin of chenges defect 19183 sakota
    CLEAR l_date.

*    CALL FUNCTION 'CONVERT_DATE_TO_INTERNAL'
*      EXPORTING
*        date_external = wa_file-approal_date
*      IMPORTING
*        date_internal = l_date.
*
** End of chenges defect 19183 sakota
    l_date =  wa_file-approal_date.
* End of chenges defect 19747 sakota


* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

      "fetching company code for non ofd

      DATA : lv_cc_ofs TYPE bukrs.
      IF wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO'.
        IF NOT wa_file-emp_dept IS INITIAL.
          CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
            EXPORTING
              input  = wa_file-emp_dept
            IMPORTING
              output = wa_file-emp_dept.

          SELECT SINGLE bukrs FROM csks INTO @DATA(lv_cc_bukrs)
          WHERE kostl = @wa_file-emp_dept AND datbi EQ '99991231'.

          IF sy-subrc NE' 0'.

          ELSE.
            lv_cc_ofs  = lv_cc_bukrs.
          ENDIF.


        ENDIF.
      ELSE.
        DATA: lv_gl_off LIKE p_gl_off,
              lv_cc_off LIKE p_cc_off.
        SELECT SINGLE ref1 ref2 FROM zggd_gen_xref
              INTO (lv_gl_off,lv_cc_off) WHERE identifier = 'ERCCA_W' AND refkey1 = 'GL_ACC' AND active = 'X'.
        lv_cc_ofs = lv_cc_off.
      ENDIF.


      IF wa_file-emp_home_cntry NE 'UNITED STATES' AND wa_file-emp_home_cntry NE 'PUERTO RICO'
   AND  wa_file-rpt_custom20 IS NOT INITIAL AND  wa_file-rpt_custom20 NE 'TEMP'.
*Previous code find the CC from the column O next select find the land1
        SELECT SINGLE land1
                 FROM t001
                 INTO @DATA(lv_landcc)
                WHERE bukrs EQ @lv_cc_ofs.

        IF sy-subrc EQ 0.

        ENDIF.

        IF wa_file-rpt_custom20 IS NOT INITIAL.

          SELECT SINGLE land1
             FROM t001
             INTO @DATA(lv_landbh)
            WHERE bukrs EQ @wa_file-rpt_custom20.

          IF sy-subrc EQ 0.

          ENDIF.


          IF lv_landcc NE lv_landbh.

            MOVE wa_file-rpt_custom20 TO lv_cc_ofs.

          ENDIF.

        ENDIF.

      ENDIF.



      "if zm document if already posted

      CLEAR : l_xblnr.
      l_xblnr = lv_repid.
      CONCATENATE l_xblnr wa_file-reimb_curr1 INTO l_xblnr SEPARATED BY '/'.
      CLEAR wa_bkpf.
*      READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = wa_file-rpt_custom11 bldat = l_date.
      READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = lv_cc_ofs bldat = l_date.  " defect 19183 rirawat
      IF sy-subrc = 0 AND wa_bkpf-stblg EQ space  AND ( wa_bkpf-blart = 'ZN' OR wa_bkpf-blart = 'ZM' )..    " Already Posted.
        wa_log-msgtype        = 'E'.
        wa_log-reference      = wa_file-repid.
        CONCATENATE TEXT-004 wa_bkpf-belnr TEXT-005  wa_bkpf-bukrs TEXT-006 wa_bkpf-gjahr INTO  wa_log-message.
        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = wa_file-repid.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
        v_posting_flag = 'X'.


        CLEAR wa_error_rec.
        wa_error_rec-repid = wa_file-repid.
        wa_error_rec-apprv_date = wa_file-approal_date.
        wa_error_rec-temp15 = wa_file-temp15.

        APPEND wa_error_rec TO it_error_rec.
      ENDIF.

      " for zn documents , we will check if employee or card employee
      IF wa_file-temp15 EQ 'EMPLOYEE'.
* Prepare reference string by prefixing report ID with E and suffix as Reimbursement currrency
        CLEAR : l_xblnr.
        CONCATENATE 'E' lv_repid INTO l_xblnr.
        CONCATENATE l_xblnr wa_file-reimb_curr1 INTO l_xblnr SEPARATED BY '/'.
        CLEAR wa_bkpf.
*      READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = wa_file-rpt_custom11 bldat = l_date.
        READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = lv_cc_ofs bldat = l_date stblg = ' '  . "defect 18193 rirawat

        IF sy-subrc = 0 AND ( wa_bkpf-blart = 'ZN' OR wa_bkpf-blart = 'ZM' ).     " Already Posted.
          wa_log-msgtype        = 'E'.
          wa_log-reference      = wa_file-repid.
          CONCATENATE TEXT-004 wa_bkpf-belnr TEXT-005  wa_bkpf-bukrs TEXT-006 wa_bkpf-gjahr INTO  wa_log-message.
          APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
          wa_logref-repid = wa_file-repid.
          APPEND wa_logref TO i_logref.
          CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
          CLEAR wa_log.
          v_posting_flag = 'X'.


          CLEAR wa_error_rec.
          wa_error_rec-repid = wa_file-repid.
          wa_error_rec-apprv_date = wa_file-approal_date.
          wa_error_rec-temp15 = wa_file-temp15.

          APPEND wa_error_rec TO it_error_rec.
        ENDIF.
      ELSE.

* Prepare reference string by prefixing report ID with E and suffix as Reimbursement currrency
        CLEAR : l_xblnr.
        CONCATENATE 'C' lv_repid INTO l_xblnr.
        CONCATENATE l_xblnr wa_file-reimb_curr1 INTO l_xblnr SEPARATED BY '/'.
        CLEAR wa_bkpf.
*      READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = wa_file-rpt_custom11 bldat = l_date.
        READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = lv_cc_ofs bldat = l_date  stblg = ' ' . "defect 18193 rirawat
        IF sy-subrc = 0  AND ( wa_bkpf-blart = 'ZN' OR wa_bkpf-blart = 'ZM' )..    " Already Posted.
          wa_log-msgtype        = 'E'.
          wa_log-reference      = wa_file-repid.
          CONCATENATE TEXT-004 wa_bkpf-belnr TEXT-005  wa_bkpf-bukrs TEXT-006 wa_bkpf-gjahr INTO  wa_log-message.
          APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
          wa_logref-repid = wa_file-repid.
          APPEND wa_logref TO i_logref.
          CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
          CLEAR wa_log.
          v_posting_flag = 'X'.


          CLEAR wa_error_rec.
          wa_error_rec-repid = wa_file-repid.
          wa_error_rec-apprv_date = wa_file-approal_date.
          wa_error_rec-temp15 = wa_file-temp15.

          APPEND wa_error_rec TO it_error_rec.

        ENDIF.
      ENDIF.

      CLEAR:lv_cc_ofs , lv_landbh , lv_landcc.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    ELSE .

      DATA: lv_cc_ofd TYPE bukrs.
      "fetching company code using pernr (employee id)"
      READ TABLE i_pa0001 INTO DATA(ls_cc_ofd) WITH KEY pernr = wa_file-pernr.
      IF sy-subrc = 0.
        lv_cc_ofd = ls_cc_ofd-bukrs.
      ENDIF.
      IF lv_cc_ofd IS INITIAL.
        TRANSLATE wa_file-emp_home_cntry TO UPPER CASE.
        CASE wa_file-emp_home_cntry.
          WHEN 'UNITED STATES'.

            lv_cc_ofd = '1220'.
          WHEN 'CANADA'.

            lv_cc_ofd = '2320'.
          WHEN 'UNITED KINGDOM'.

            lv_cc_ofd = '2070'.
          WHEN 'IRELAND'.

            lv_cc_ofd = '2450'.
          WHEN OTHERS.
        ENDCASE.
      ENDIF.

      IF wa_file-temp15 EQ 'EMPLOYEE'.

* Prepare reference string by prefixing report ID with E and suffix as Reimbursement currrency
        CLEAR : l_xblnr.
        CONCATENATE 'E' lv_repid INTO l_xblnr.
        CONCATENATE l_xblnr wa_file-reimb_curr1 INTO l_xblnr SEPARATED BY '/'.
* Check if reference exists in Acc. doc header table BKPF, then show error
        CLEAR wa_bkpf.
*      READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = wa_file-rpt_custom11 bldat = l_date. "sy-datum." defect 19183 sakota
        READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = lv_cc_ofd bldat = l_date  stblg = ' ' . "sy-datum." defect rirawat
        IF sy-subrc = 0  AND ( wa_bkpf-blart = 'ZN' OR wa_bkpf-blart = 'ZM' ).    " Already Posted.  " defect 19183 rirawat
          wa_log-msgtype        = 'E'.
          wa_log-reference      = l_xblnr.
          CONCATENATE TEXT-004 wa_bkpf-belnr TEXT-005  wa_bkpf-bukrs TEXT-006 wa_bkpf-gjahr INTO  wa_log-message.
          APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
          wa_logref-repid = l_xblnr.
          APPEND wa_logref TO i_logref.
          CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
          CLEAR wa_log.
          v_posting_flag = 'X'.
          CLEAR wa_error_rec.
          wa_error_rec-repid = wa_file-repid.
          wa_error_rec-apprv_date = wa_file-approal_date.
          wa_error_rec-temp15 = wa_file-temp15.

          APPEND wa_error_rec TO it_error_rec.

        ENDIF.

      ELSE.
* Prepare reference string by prefixing report ID with C and suffix as Reimbursement currrency
        CLEAR : l_xblnr.
        CONCATENATE 'C' lv_repid INTO l_xblnr.
        CONCATENATE l_xblnr wa_file-reimb_curr1 INTO l_xblnr SEPARATED BY '/'.
* Check if reference is already available in previously posted document , then show error
        CLEAR wa_bkpf.
*        READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = wa_file-rpt_custom11 bldat = l_date. "sy-datum." defect 19183 sakota
        READ TABLE i_bkpf INTO wa_bkpf WITH KEY xblnr = l_xblnr bukrs = lv_cc_ofd bldat = l_date  stblg = ' ' . "sy-datum." defect rirawat
        IF sy-subrc = 0 AND ( wa_bkpf-blart = 'ZN' OR wa_bkpf-blart = 'ZM' ).      " Already Posted.  " defect 19183 rirawat
          wa_log-msgtype        = 'E'.
          wa_log-reference      = l_xblnr.
          CONCATENATE TEXT-004 wa_bkpf-belnr TEXT-005  wa_bkpf-bukrs TEXT-006 wa_bkpf-gjahr INTO  wa_log-message.
          APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
          wa_logref-repid = l_xblnr.
          APPEND wa_logref TO i_logref.
          CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
          CLEAR wa_log.
          v_posting_flag = 'X'.
          CLEAR wa_error_rec.
          wa_error_rec-repid = wa_file-repid.
          wa_error_rec-apprv_date = wa_file-approal_date.
          wa_error_rec-temp15 = wa_file-temp15.

          APPEND wa_error_rec TO it_error_rec.
        ENDIF.

      ENDIF.
      CLEAR:lv_cc_ofd.
    ENDIF.

    " end of changes rirawat 19183

* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

* PERNR Check. Error if not found.
    CLEAR wa_pa0032.
    READ TABLE i_pa0032 INTO wa_pa0032 WITH KEY pnalt = wa_file-pernr.
    IF sy-subrc NE 0. " External PERNR does not exist in SAP.
      wa_log-msgtype        = 'E'.
      wa_log-reference      = wa_file-repid.
      CONCATENATE 'Employee : ' wa_file-pernr ' Does not exist in SAP' INTO  wa_log-message RESPECTING BLANKS.
      APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
      wa_logref-repid = wa_file-repid.
      APPEND wa_logref TO i_logref.
      CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
      CLEAR wa_log.
      v_posting_flag = 'X'.

    ENDIF.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
* WBS Suffix Check.

      IF wa_file-charge_type2 = 'WBS BILLABLE'(010) OR wa_file-charge_type2 = 'WBS NON-BILLABLE'(011).
        IF wa_file-charge_type IS INITIAL OR wa_file-charge_type EQ '0'.
          wa_log-msgtype        = 'E'.
          wa_log-reference      = wa_file-repid.
          CONCATENATE 'WBS Element is Invalid in file' wa_file-charge_type INTO  wa_log-message.
          APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
          wa_logref-repid = wa_file-repid.
          APPEND wa_logref TO i_logref.
          CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
          CLEAR wa_log.
          v_posting_flag = 'X'.
        ELSE.
          DATA : wa_src_prps LIKE prps-posid.
          CLEAR: wa_wbs,wa_prps1,lv_profl,lv_psphi,wa_src_prps.
          MOVE wa_file-charge_type TO wa_src_prps.
          " Conversion Routine for domain PS_POSID
          CALL FUNCTION 'CONVERSION_EXIT_ABPSN_INPUT'
            EXPORTING
              input  = wa_src_prps
            IMPORTING
              output = wa_src_prps.
          SELECT SINGLE psphi FROM prps INTO lv_psphi WHERE posid = wa_src_prps.
          IF sy-subrc EQ 0.
            SELECT SINGLE profl INTO lv_profl FROM proj WHERE pspnr EQ lv_psphi.
            IF sy-subrc EQ 0.
              IF lv_profl NE 'Z000004'.
                READ TABLE i_wbs INTO wa_wbs WITH KEY exp_type =  wa_file-exp_type.
                IF sy-subrc = 0.
                  REPLACE ALL OCCURRENCES OF '.' IN wa_file-charge_type WITH ' ' .
                  CONDENSE wa_file-charge_type.
                  CONCATENATE wa_file-charge_type wa_wbs-suffix INTO wa_file-charge_type .
                  CONDENSE wa_file-charge_type.
                  MODIFY i_file FROM wa_file TRANSPORTING charge_type .
                ELSE.
                  wa_log-msgtype        = 'E'.
                  wa_log-reference      = wa_file-repid.
                  CONCATENATE 'Expense Type - ' wa_file-exp_type ' Does not exist in Suffix Custom Table -  ZFLGI_EXP_WBS' INTO  wa_log-message.
                  APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
                  wa_logref-repid = wa_file-repid.
                  APPEND wa_logref TO i_logref.
                  CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
                  CLEAR wa_log.
                  v_posting_flag = 'X'.
                ENDIF.
              ELSE.
                MOVE wa_src_prps TO wa_file-charge_type.
                MODIFY i_file FROM wa_file TRANSPORTING charge_type .
              ENDIF.
            ELSE.
              wa_log-msgtype        = 'E'.
              wa_log-reference      = wa_file-repid.
              CONCATENATE 'Invalid WBS element ' wa_file-charge_type INTO  wa_log-message SEPARATED BY space.
              APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
              wa_logref-repid = wa_file-repid.
              APPEND wa_logref TO i_logref.
              CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
              CLEAR wa_log.
              v_posting_flag = 'X'.
            ENDIF.
          ELSE.
            wa_log-msgtype        = 'E'.
            wa_log-reference      = wa_file-repid.
            CONCATENATE 'Invalid WBS element ' wa_file-charge_type INTO  wa_log-message SEPARATED BY space.
            APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
            wa_logref-repid = wa_file-repid.
            APPEND wa_logref TO i_logref.
            CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
            CLEAR wa_log.
            v_posting_flag = 'X'.
          ENDIF.
        ENDIF.
      ENDIF.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
    ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

*    CLEAR wa_bukrs.
*    READ TABLE i_bukrs INTO wa_bukrs WITH KEY psid = wa_file-psid.
*    IF sy-subrc = 0.
** International File with Domestic Company Code
*      IF p_int = 'X' AND wa_bukrs-bukrs+0(1) = '1'.
*        wa_log-msgtype        = 'E'.
*        wa_log-reference      = wa_file-repid.
*        CONCATENATE 'International File containing Domestic Company Code : ' wa_bukrs-bukrs ' PSID : ' wa_file-psid INTO  wa_log-message RESPECTING BLANKS.
*        APPEND wa_log TO i_log.
*        CLEAR wa_log.
*        v_posting_flag = 'X'.
*      ENDIF.
*
** Domestic File with International Company Code
*      IF p_dom = 'X' AND wa_bukrs-bukrs+0(1) = '2'.
*        wa_log-msgtype        = 'E'.
*        wa_log-reference      = wa_file-repid.
*        CONCATENATE 'Domestic File containing International Company Code : ' wa_bukrs-bukrs ' PSID : ' wa_file-psid INTO  wa_log-message RESPECTING BLANKS.
*        APPEND wa_log TO i_log.
*        CLEAR wa_log.
*        v_posting_flag = 'X'.
*      ENDIF.
*
*    ENDIF.
    CLEAR: lv_repid.
  ENDLOOP.
  PERFORM delete_error_recs.   " defect 19183 removing duplicates records from file

ENDFORM.                    " CHECK_POSTINGS
*&---------------------------------------------------------------------*
*&      Form  EXECUTE_TEST_RUN
*&---------------------------------------------------------------------*
*       Test Run
*----------------------------------------------------------------------*

"start of changes rirawat 19183
FORM delete_error_recs.
  LOOP AT it_error_rec ASSIGNING FIELD-SYMBOL(<fs_error>).
    DELETE i_file WHERE repid = <fs_error>-repid AND approal_date = <fs_error>-apprv_date AND temp15 = <fs_error>-temp15.
  ENDLOOP.
ENDFORM.

" end of changes rirawat 19183
FORM execute_test_run USING v_flag . "Dkannan - Defect 7212 -  Concur clearingaccount

  DATA: l_tabix TYPE sy-tabix.

  DATA : i_currency_1  TYPE STANDARD TABLE OF bapiaccr09,
         wa_currency_1 TYPE bapiaccr09.
  DATA : i_currency_2  TYPE STANDARD TABLE OF bapiaccr09,
         wa_currency_2 TYPE bapiaccr09.
  DATA: wa_currency_a TYPE bapiaccr09,
        wa_currency_b TYPE bapiaccr09,
        wa_currency_c TYPE bapiaccr09,
        wa_currency_d TYPE bapiaccr09.

  REFRESH : i_return_check,i_return_check_emp."Defect 3998

*{Begin of RALVARADO-01302018-Defect 12607
*  FREE: I_RETURN_CHECK_BARCLAYS. " LMORALES Defect 9763
*
*  FREE: I_RETURN_CHECK_PNC. " LMORALES Defect 20176
*
*  FREE: I_RETURN_CHECK_HDFC. " LMORALES Defect 11420

  FREE: i_return_check_new.
*}End of RALVARADO-01302018-Defect 12607

  PERFORM prepare_offset USING v_flag. "Dkannan - Defect 7212 -  Concur clearingaccount

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

* Swapping First Record.
    CLEAR wa_account_gl.
    READ TABLE i_account_gl INTO wa_account_gl WITH KEY comp_code = v_header-comp_code. " Any record is acceptable. Unique record check not required.
    IF sy-subrc = 0.
      wa_tabix = sy-tabix.

      IF sy-tabix NE '1'. " No Swap Reqd if Company codes match.
        READ TABLE i_account_gl INTO wa_account_gl_tmp INDEX 1.

        wa_line = wa_account_gl_tmp-itemno_acc.
        wa_account_gl_tmp-itemno_acc = wa_account_gl-itemno_acc.
        wa_account_gl-itemno_acc = wa_line.

        MODIFY i_account_gl  FROM wa_account_gl_tmp INDEX wa_tabix .
        MODIFY i_account_gl  FROM wa_account_gl INDEX 1 .


* Swap Currency
        CLEAR:  wa_currency,wa_currency_1,wa_currency_2,wa_currency_tmp.
*      READ TABLE i_currency INTO wa_currency INDEX wa_tabix.
*      IF sy-subrc = 0.
*        READ TABLE i_currency INTO wa_currency_tmp INDEX 1.
*        IF sy-subrc = 0.
*          wa_line = wa_currency_tmp-itemno_acc.
*          wa_currency_tmp-itemno_acc = wa_currency-itemno_acc.
*          wa_currency-itemno_acc = wa_line.
*
*          MODIFY i_currency  FROM wa_currency_tmp INDEX wa_tabix .
*          MODIFY i_currency  FROM wa_currency INDEX 1 .
*        ENDIF.
*      ENDIF.
        lv_tabix =  wa_tabix * 2.
        READ TABLE i_currency INTO wa_currency INDEX lv_tabix.
        lv_tabix1 = lv_tabix  - 1.
        READ TABLE i_currency INTO wa_currency_1 INDEX lv_tabix1.
        IF sy-subrc = 0.
          READ TABLE i_currency INTO wa_currency_tmp INDEX 1.
          READ TABLE i_currency INTO wa_currency_2 INDEX 2.
          IF sy-subrc = 0.
            wa_line = wa_currency_tmp-itemno_acc.
            wa_currency_tmp-itemno_acc = wa_currency-itemno_acc.
            wa_currency-itemno_acc = wa_line.

            wa_line1 = wa_currency_2-itemno_acc.
            wa_currency_2-itemno_acc = wa_currency_1-itemno_acc.
            wa_currency_1-itemno_acc = wa_line.

            MODIFY i_currency  FROM wa_currency_tmp INDEX lv_tabix .
            MODIFY i_currency  FROM wa_currency_2 INDEX lv_tabix1.
            MODIFY i_currency  FROM wa_currency_1 INDEX 2.
            MODIFY i_currency  FROM wa_currency INDEX 1 .

          ENDIF.
        ENDIF.
*      IF sy-subrc = 0.
*      LOOP AT i_currency INTO wa_currency_1 WHERE itemno_acc eq wa_currency-itemno_acc.
*        APPEND WA_CURRENCY_1 TO I_CURRENCY_1.
*        EXIT.
*      ENDLOOP.
*      ENDIF.
*      READ TABLE i_currency INTO wa_currency INDEX 1.
*      IF sy-subrc = 0.
*      LOOP AT i_currency INTO wa_currency_2 WHERE itemno_acc eq wa_currency-itemno_acc.
*        APPEND WA_CURRENCY_2 TO I_CURRENCY_2.
*        EXIT.
*      ENDLOOP.
*      ENDIF.

* Swap Extensions
        CLEAR wa_extension2.
        READ TABLE i_extension2 INTO wa_extension2 INDEX wa_tabix.
        IF sy-subrc = 0.
          READ TABLE i_extension2 INTO wa_extension2_tmp INDEX 1.
          IF sy-subrc = 0.
            wa_line = wa_extension2_tmp-valuepart1.
            wa_extension2_tmp-valuepart1 = wa_extension2-valuepart1.
            wa_extension2-valuepart1 = wa_line.
            wa_extension2-valuepart4  = '00000000'.
            MODIFY i_extension2  FROM wa_extension2_tmp INDEX wa_tabix .
            MODIFY i_extension2  FROM wa_extension2 INDEX 1 .
          ENDIF.
        ENDIF.

      ENDIF.

    ENDIF.

*{Begin of CSURYAWANSHI-09142020 : Defect 15373
*    IF v_header-comp_code = '2130'.
    " start of chnages of rirawat defect 18887
    REFRESH: r_india_cc.
    CALL FUNCTION 'ZEXTRACT_TVARVC'
      EXPORTING
        i_name   = c_india_cc
      TABLES
        t_selopt = r_india_cc.



    IF v_header-comp_code IN r_india_cc.
      " end of changes of rirawat 18887
      PERFORM redetermine_pc_io_via_bs_pl.
    ENDIF.
*}End of CSURYAWANSHI-09142020 : Defect 15373


    " checking if internal table is not initial table defect 19183 rirawat
    IF i_account_gl IS NOT INITIAL.
      CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
        EXPORTING
          documentheader = v_header
        TABLES
          accountgl      = i_account_gl
          currencyamount = i_currency
          return         = i_return_check
          extension2     = i_extension2.

    ENDIF.
    " checking if internal table is not initial table defect 19183 rirawat

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  IF NOT i_account_gl_emp IS INITIAL.
    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
      EXPORTING
        documentheader = v_header_emp
      TABLES
        accountgl      = i_account_gl_emp
        currencyamount = i_currency_emp
        return         = i_return_check_emp
        extension2     = i_extension2_emp.
  ENDIF.

*{Begin of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*  IF NOT I_ACCOUNT_GL_BARCLAYS IS INITIAL.
*
*    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
*      EXPORTING
*        DOCUMENTHEADER = V_HEADER_BARCLAYS
*      TABLES
*        ACCOUNTGL      = I_ACCOUNT_GL_BARCLAYS
*        CURRENCYAMOUNT = I_CURRENCY_BARCLAYS
*        RETURN         = I_RETURN_CHECK_BARCLAYS
*        EXTENSION2     = I_EXTENSION2_BARCLAYS.
*
*  ENDIF.
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 10276
*  IF NOT I_ACCOUNT_GL_PNC IS INITIAL.
*
*    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
*      EXPORTING
*        DOCUMENTHEADER = V_HEADER_PNC
*      TABLES
*        ACCOUNTGL      = I_ACCOUNT_GL_PNC
*        CURRENCYAMOUNT = I_CURRENCY_PNC
*        RETURN         = I_RETURN_CHECK_PNC
*        EXTENSION2     = I_EXTENSION2_PNC.
*
*  ENDIF.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*  IF NOT I_ACCOUNT_GL_HDFC IS INITIAL.
*
*    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
*      EXPORTING
*        DOCUMENTHEADER = V_HEADER_HDFC
*      TABLES
*        ACCOUNTGL      = I_ACCOUNT_GL_HDFC
*        CURRENCYAMOUNT = I_CURRENCY_HDFC
*        RETURN         = I_RETURN_CHECK_HDFC
*        EXTENSION2     = I_EXTENSION2_HDFC.
*
*  ENDIF.
**{ END OF LMORALES Defect 11420

  IF NOT i_account_gl_new IS INITIAL.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_CHECK'
      EXPORTING
        documentheader = v_header_new
      TABLES
        accountgl      = i_account_gl_new
        currencyamount = i_currency_new
        return         = i_return_check_new
        extension2     = i_extension2_new.

  ENDIF.
*}End of RALVARADO-01302018-Defect 12607


** Check for Error.
  CLEAR : wa_return, v_offset_amt,v_offset_amt1,v_offset_amt2,v_offset_amt_emp.

  CONCATENATE 'Processing Record REPID / CURRENCY :'(014) v_header-ref_doc_no INTO l_text SEPARATED BY space.


  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 0
      text       = l_text.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  IF v_ofd_flag <> c_x.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

    READ TABLE i_return_check INTO wa_return WITH KEY type = 'E'.

    IF sy-subrc = 0.
      v_err = 'X'.
      CLEAR wa_log.
      LOOP AT i_return_check INTO wa_return WHERE type = 'E'.
        wa_log-msgtype            = 'E'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
        wa_log-reference      = v_header-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = v_header-ref_doc_no.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
      ENDLOOP.
      APPEND wa_log TO i_log. " Blank record.

    ELSE.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      CLEAR wa_log.
      LOOP AT i_return_check INTO wa_return WHERE type = 'S'.
        wa_log-msgtype            = 'S'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
        wa_log-reference      = v_header-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
        CLEAR wa_log.
      ENDLOOP.

    ENDIF.
* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  IF NOT i_return_check_emp IS INITIAL.

    READ TABLE i_return_check_emp INTO wa_return WITH KEY type = 'E'.

    IF sy-subrc = 0.
      v_err = 'X'.
      CLEAR wa_log.
      LOOP AT i_return_check_emp INTO wa_return WHERE type = 'E'.
        wa_log-msgtype            = 'E'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
        wa_log-reference      = v_header_emp-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = v_header_emp-ref_doc_no.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
      ENDLOOP.
      APPEND wa_log TO i_log. " Blank record.

    ELSE.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      CLEAR wa_log.
      LOOP AT i_return_check_emp INTO wa_return WHERE type = 'S'.
        wa_log-msgtype            = 'S'.
*      CONCATENATE l_repid l_exp_curr INTO wa_log-reference SEPARATED BY space.
        wa_log-reference      = v_header_emp-ref_doc_no.
        wa_log-message        = wa_return-message.
        APPEND wa_log TO i_log.
        CLEAR wa_log.
      ENDLOOP.
    ENDIF.
  ENDIF.

*{End of RALVARADO-01302018-Defect 12607
**{ BEGING OF LMORALES Defect 9763
*  IF NOT I_RETURN_CHECK_BARCLAYS IS INITIAL.
*
*    CLEAR WA_RETURN.
*
*    READ TABLE I_RETURN_CHECK_BARCLAYS INTO WA_RETURN WITH KEY TYPE = 'E'.
*
*    IF SY-SUBRC = 0.
*
*      MOVE C_X TO V_ERR.
*
*      CLEAR WA_LOG.
*
*      LOOP AT I_RETURN_CHECK_BARCLAYS INTO WA_RETURN WHERE TYPE = C_E.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_BARCLAYS-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*      ENDLOOP.
*
*      APPEND WA_LOG TO I_LOG. " Blank record.
*
*    ELSE.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          WAIT = 'X'.
*
*      CLEAR WA_LOG.
*      LOOP AT I_RETURN_CHECK_BARCLAYS  INTO WA_RETURN WHERE TYPE = C_S.
*
*        MOVE C_S TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_BARCLAYS-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*      ENDLOOP.
*
*    ENDIF.
*
*  ENDIF.
**{ END OF LMORALES Defect 9763
*
**{ BEGING OF LMORALES Defect 1076
*  IF NOT I_RETURN_CHECK_PNC IS INITIAL.
*
*    CLEAR WA_RETURN.
*
*    READ TABLE I_RETURN_CHECK_PNC INTO WA_RETURN WITH KEY TYPE = 'E'.
*
*    IF SY-SUBRC = 0.
*
*      MOVE C_X TO V_ERR.
*
*      CLEAR WA_LOG.
*
*      LOOP AT I_RETURN_CHECK_PNC INTO WA_RETURN WHERE TYPE = C_E.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_PNC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*      ENDLOOP.
*
*      APPEND WA_LOG TO I_LOG. " Blank record.
*
*    ELSE.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          WAIT = 'X'.
*
*      CLEAR WA_LOG.
*      LOOP AT I_RETURN_CHECK_PNC  INTO WA_RETURN WHERE TYPE = C_S.
*
*        MOVE C_S TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_PNC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*      ENDLOOP.
*
*    ENDIF.
*
*  ENDIF.
**{ END OF LMORALES Defect 10276
*
**{ BEGING OF LMORALES Defect 11420
*  IF NOT I_RETURN_CHECK_HDFC IS INITIAL.
*
*    CLEAR WA_RETURN.
*
*    READ TABLE I_RETURN_CHECK_HDFC INTO WA_RETURN WITH KEY TYPE = 'E'.
*
*    IF SY-SUBRC = 0.
*
*      MOVE C_X TO V_ERR.
*
*      CLEAR WA_LOG.
*
*      LOOP AT I_RETURN_CHECK_HDFC INTO WA_RETURN WHERE TYPE = C_E.
*
*        MOVE C_E TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_HDFC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*      ENDLOOP.
*
*      APPEND WA_LOG TO I_LOG. " Blank record.
*
*    ELSE.
*
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          WAIT = 'X'.
*
*      CLEAR WA_LOG.
*      LOOP AT I_RETURN_CHECK_HDFC  INTO WA_RETURN WHERE TYPE = C_S.
*
*        MOVE C_S TO WA_LOG-MSGTYPE.
*
*        MOVE V_HEADER_HDFC-REF_DOC_NO TO WA_LOG-REFERENCE.
*
*        MOVE WA_RETURN-MESSAGE TO WA_LOG-MESSAGE.
*
*        APPEND WA_LOG TO I_LOG.
*
*        CLEAR WA_LOG.
*
*      ENDLOOP.
*
*    ENDIF.
*
*  ENDIF.
**{ END OF LMORALES Defect 11420

  IF NOT i_return_check_new IS INITIAL.

    CLEAR wa_return.

    READ TABLE i_return_check_new INTO wa_return WITH KEY type = 'E'.

    IF sy-subrc = 0.

      MOVE c_x TO v_err.

      CLEAR wa_log.

      LOOP AT i_return_check_new INTO wa_return WHERE type = c_e.

        MOVE c_e TO wa_log-msgtype.

        MOVE v_header_new-ref_doc_no TO wa_log-reference.

        MOVE wa_return-message TO wa_log-message.

        APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
        wa_logref-repid = v_header_new-ref_doc_no.
        APPEND wa_logref TO i_logref.
        CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
        CLEAR wa_log.
      ENDLOOP.

      APPEND wa_log TO i_log. " Blank record.

    ELSE.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

      CLEAR wa_log.
      LOOP AT i_return_check_new  INTO wa_return WHERE type = c_s.

        MOVE c_s TO wa_log-msgtype.

        MOVE v_header_new-ref_doc_no TO wa_log-reference.

        MOVE wa_return-message TO wa_log-message.

        APPEND wa_log TO i_log.

        CLEAR wa_log.

      ENDLOOP.

    ENDIF.

  ENDIF.
*}End of RALVARADO-01302018-Defect 12607

ENDFORM.                    " EXECUTE_TEST_RUN
*&---------------------------------------------------------------------*
*&      Form  SPLIT_RECORD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_RAW_DATA  text
*----------------------------------------------------------------------*
FORM split_record  USING    p_wa_raw_data.

  SPLIT p_wa_raw_data AT '|' INTO          "',' INTO
               wa_file-type
               wa_file-batch_id
               wa_file-batch_date
               wa_file-batch_seq
               wa_file-pernr
               wa_file-lname
               wa_file-fname
               wa_file-m_init
               wa_file-emp_grp
               wa_file-org_unit
               wa_file-org_unit2
               wa_file-psid
               wa_file-emp_div
               wa_file-emp_loc
               wa_file-emp_dept
               wa_file-temp1
               wa_file-temp2
               wa_file-temp3
               wa_file-repid_32
               wa_file-repid
               wa_file-ext_acc_id
               wa_file-reimb_curr1
               wa_file-emp_home_cntry
               wa_file-appr_date
               wa_file-user_custom_date
               wa_file-approal_date
               wa_file-report
               wa_file-temp4
               wa_file-temp5
               wa_file-temp6
               wa_file-posted_amt
               wa_file-apprv_amt
               wa_file-temp7
               wa_file-temp8
               wa_file-temp9
               wa_file-temp10
               wa_file-emp_psid2
               wa_file-div_charged
               wa_file-loc_charged
               wa_file-dept
               wa_file-psid_bus_unit
               wa_file-cc_entered
               wa_file-rpt_cust3
               wa_file-psid_bus_unit2
               wa_file-rpt_custom5
               wa_file-rpt_custom6
               wa_file-rpt_custom7
               wa_file-emp_email
               wa_file-proj_client_comments
               wa_file-addtl_comments
               wa_file-rpt_custom11
               wa_file-rpt_custom12
               wa_file-rpt_custom13
               wa_file-rpt_custom14
               wa_file-charge_type_value
               wa_file-rpt_custom16
               wa_file-rpt_custom17
               wa_file-rpt_custom18
               wa_file-rpt_custom19
               wa_file-rpt_custom20
               wa_file-rpt_entry_unique_key
               wa_file-child_reg
               wa_file-exp_type

               wa_file-incur_date
               wa_file-exp_curr
               wa_file-exchg_rate
               wa_file-exchg_rate_multi_div
               wa_file-personal_exp
               wa_file-purpose
               wa_file-vendor
               wa_file-vendor_name2
               wa_file-review_box_yes_or_no
               wa_file-paper_rece_code
               wa_file-no_of_emp_attendees
               wa_file-no_of_spouse_attendees
               wa_file-no_of_bus_guest_attendees
               wa_file-org_lvl_data
               wa_file-rpt_entry_org_unit2
               wa_file-rpt_entry_org_unit3
               wa_file-rpt_entry_org_unit4
               wa_file-rpt_entry_org_unit5
               wa_file-rpt_entry_org_unit6
               wa_file-rpt_entry_custom1
               wa_file-rpt_entry_custom2
               wa_file-rpt_entry_custom3
               wa_file-vat_yes_or_no
               wa_file-vat_amt
               wa_file-acc_override_comments
               wa_file-rpt_entry_custom7
               wa_file-rpt_entry_custom8
               wa_file-rpt_entry_custom9
               wa_file-ces_std_project
               wa_file-rpt_entry_custom11
               wa_file-ces_std_city
               wa_file-ces_std_passg_name
               wa_file-ces_std_ticket_num
               wa_file-ces_std_class_of_service
               wa_file-rpt_entry_custom16
               wa_file-rpt_entry_custom17
               wa_file-rpt_entry_custom18
               wa_file-rpt_entry_custom19
               wa_file-rpt_entry_custom20
               wa_file-rpt_entry_custom21
               wa_file-rpt_entry_custom22
               wa_file-rpt_entry_custom23
               wa_file-rpt_entry_custom24
               wa_file-rpt_entry_custom25
               wa_file-rpt_entry_custom26
               wa_file-rpt_entry_custom27
               wa_file-rpt_entry_custom28
               wa_file-rpt_entry_custom29
               wa_file-rpt_entry_custom30
               wa_file-rpt_entry_custom31
               wa_file-rpt_entry_custom32
               wa_file-rpt_entry_custom33
               wa_file-rpt_entry_custom34
               wa_file-rpt_entry_custom35
               wa_file-rpt_entry_custom36
               wa_file-rpt_entry_custom37
               wa_file-rpt_entry_custom38
               wa_file-rpt_entry_custom39
               wa_file-ces_std
          wa_file-spent_curr
               wa_file-reimb_curr
               wa_file-amt_apprv_in_reimb_curr
               wa_file-rpt_entry_future_use1
               wa_file-rpt_entry_future_use2
               wa_file-rpt_entry_future_use3
               wa_file-rpt_entry_future_use4
               wa_file-ccard_acc_num
               wa_file-name_on_ccard
               wa_file-code_from_source_system
               wa_file-ref_num_ccard
               wa_file-unique_key_import_trans
               wa_file-ccard_trans_type
               wa_file-ccard_vend_trans_id
               wa_file-amt_of_charge_spend_curr
               wa_file-amt_of_tax_provided_by_vendor
               wa_file-curr_code_for_spend_curr
               wa_file-amt_of_charge_in_bill_curr
               wa_file-curr_code_for_billing_curr
               wa_file-date_charge_merchant
               wa_file-date_charge_posted_to_ccard
               wa_file-charge_desc_merchant
               wa_file-merchant_code
               wa_file-merchant_name
               wa_file-merchant_city
               wa_file-merchant_state
               wa_file-merchant_country
               wa_file-merchant_ref_num
               wa_file-trans_bill_type
               wa_file-exchg_rate_for_bill_curr
               wa_file-amt_due_comp_card
               wa_file-ccard_trans_future_use3
               wa_file-ccard_trans_future_use4
               wa_file-ccard_trans_future_use5
               wa_file-ccard_trans_future_use6
               wa_file-spend_loc
               wa_file-spend_sub_loc
               wa_file-spent_frgn_or_home_country
               wa_file-temp11
               wa_file-temp12
               wa_file-temp13
               wa_file-temp14
               wa_file-temp15
               wa_file-temp16
               wa_file-gl_acct
               wa_file-dr_cr_ind
               wa_file-amt_to_be_paid
               wa_file-temp17
               wa_file-miles_business
               wa_file-miles_personal
               wa_file-no_of_passengers
               wa_file-vehicle_id
               wa_file-car_mileage_future_use1
               wa_file-car_mileage_future_use2
               wa_file-orig_cash_adv_amt
               wa_file-curr_code_alpha
               wa_file-curr_code_numeric
               wa_file-exchg_rate_used
               wa_file-reimb_curr_code_alpha
               wa_file-reimb_curr_code_numeric
               wa_file-date_of_cash_adv_issue
               wa_file-method_of_pay_cash_adv
               wa_file-advance_type
               wa_file-date_of_cash_adv_req
               wa_file-unique_system_key
               wa_file-cash_adv_future_use2
               wa_file-unique_system_key2
               wa_file-perc_of_rpt_entry
               wa_file-alloc_custom1
               wa_file-alloc_custom2
               wa_file-psid1
               wa_file-div_charged2
               wa_file-loc_charged2
               wa_file-dept_charged
               wa_file-psid_for_cc
               wa_file-cc_charged
               wa_file-temp18
               wa_file-psid_for_charge_type
               wa_file-charge_type2
               wa_file-charge_type
               wa_file-alloc_custom
               wa_file-rest.

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
* Check file for external account ID of value 'ORACLE' and set the flag for OFD file.
  IF wa_file-ext_acc_id CS c_ofd AND v_ofd_flag <> abap_true.
* Set flag for Original First Data
    v_ofd_flag = c_x.
  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

  APPEND wa_file TO i_file.
  CLEAR wa_file.

ENDFORM.                    " SPLIT_RECORD
*&---------------------------------------------------------------------*
*&      Form  CHANGE_SCREEN_FIELDS
*&---------------------------------------------------------------------*
FORM change_screen_fields .
  SELECT SINGLE ref1 ref2 FROM zggd_gen_xref INTO (p_gl_off , p_cc_off) WHERE identifier = 'ERCCA_W' AND refkey1 = 'GL_ACC' AND active = 'X'.

  LOOP AT SCREEN.
    IF p_pres = 'X' AND screen-group1 = 'M1'.
      screen-input  = '0'.
      screen-invisible  = '1'.
      IF p_file IS INITIAL. " OR p_file = 'Z_RTR_IN_ERCCA_WEEKLY'.   "RALVARADO-12092021 - NO BODS process in future.
        p_file = 'C:\'.
      ENDIF.
      MODIFY SCREEN.
    ENDIF.

    IF p_appl = 'X' AND screen-group1 = 'M1'.
      screen-input  = '1'.
* Begin of Change by CSURYAWANSHI on 07/08/2020 : Defect 15271
* Assigning default Logical file path for OFD interface as Logical file path is not used in OFS scenario and file posting
* in OFS does not happen through batch job processing but through the BOT who execute transaction using file from presentation server
* Begin of uncomment/comment SAKOTA I118 DS4K901193
*       p_file = 'Z_RTR_IN_ERCCA_WEEKLY'. "F9ROQZ9              "RALVARADO-12092021 - NO BODS process in future.
*      p_file = 'Z_RTR_IN_CONCUR_OFD_WEEKLY'.
* End of uncomment/comment SAKOTA I118 DS4K901193
* End of Change by CSURYAWANSHI on 07/08/2020 : Defect 15271
      MODIFY SCREEN.
    ENDIF.


*    IF p_int = 'X' AND screen-group1 = 'M2'.
*      screen-input  = '0'.
*      CLEAR p_cc_off.
*      screen-invisible = 1.
*      MODIFY SCREEN.
*    ENDIF.

*    IF p_dom = 'X' AND screen-group1 = 'M2'.
*      screen-input  = '0'.
*      MODIFY SCREEN.
*    ENDIF.

  ENDLOOP.

  LOOP AT SCREEN.
    IF screen-name = 'P_GL_OFF' OR screen-name = 'P_CC_OFF'.
      screen-input  = '0'.
      MODIFY SCREEN.
    ENDIF.
* Begin of comments SAKOTA I118 DS4K901193
** Begin of change by CSURYAWANSHI on 07/08/2020 : Defect 15271
** Modified temporarily and restored later to create variant Concur_OFD for batch job processing of concur files
*    IF screen-name = 'P_APPL' OR  screen-name = 'P_CC_OFF'.
**    IF screen-name = 'P_CC_OFF'.
** End of change by CSURYAWANSHI on 07/08/2020 : Defect 15271
*      screen-input  = '0'.
*      MODIFY SCREEN.
*    ENDIF.
*End of Comments SAKOTA I118 DS4K901193
  ENDLOOP.

ENDFORM.                    " CHANGE_SCREEN_FIELDS
*&---------------------------------------------------------------------*
*&      Form  SEND_MAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM send_mail .

* Recipients
  lt_mailrecipients-rec_type  = 'U'.
  lt_mailrecipients-receiver = '#####@###.###'.
  APPEND lt_mailrecipients .
  CLEAR lt_mailrecipients .

* Subject.
  lt_mailsubject-obj_name = 'TEST'.
  lt_mailsubject-obj_langu = sy-langu.
  lt_mailsubject-obj_descr = 'ERCCA Weekly Interface Execution Log.'(026).

* Mail Contents
  lt_mailtxt = 'WEEKLY TRAVEL CART'(027).
  APPEND lt_mailtxt. CLEAR lt_mailtxt.

* Send Mail
  CALL FUNCTION 'SO_NEW_DOCUMENT_SEND_API1'
    EXPORTING
      document_data              = lt_mailsubject
    TABLES
      object_content             = lt_mailtxt
      receivers                  = lt_mailrecipients
    EXCEPTIONS
      too_many_receivers         = 1
      document_not_sent          = 2
      document_type_not_exist    = 3
      operation_no_authorization = 4
      parameter_error            = 5
      x_error                    = 6
      enqueue_error              = 7
      OTHERS                     = 8.
  IF sy-subrc EQ 0.
    COMMIT WORK.

*   Push mail out from SAP outbox
    SUBMIT rsconn01 WITH mode = 'INT' AND RETURN.

  ENDIF.

ENDFORM.                    " SEND_MAIL
*&---------------------------------------------------------------------*
*&      Form  FETCH_COMPANY_CODES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fetch_company_codes .
  IF i_file[] IS NOT INITIAL.
    SELECT kostl bukrs FROM csks INTO TABLE i_csks FOR ALL ENTRIES IN i_file WHERE kostl = i_file-dept AND datbi GE sy-datum AND datab LE sy-datum.
*    i_file_cc[] = i_file[] .
*    CLEAR wa_file_cc.
*    LOOP AT i_file_cc INTO wa_file_cc.
*      CONDENSE wa_file_cc-charge_type.
*      MODIFY i_file_cc FROM wa_file_cc TRANSPORTING charge_type.
*    ENDLOOP.
    LOOP AT i_file INTO wa_file.
      MOVE-CORRESPONDING wa_file TO wa_file_cc.
      APPEND wa_file_cc TO i_file_cc.
      CLEAR wa_file_cc.
    ENDLOOP.
    SELECT posid pbukr FROM prps INTO TABLE i_prps FOR ALL ENTRIES IN i_file_cc WHERE posid = i_file_cc-charge_type .
*    i_file_cc2[] = i_file[] .
    LOOP AT i_file INTO wa_file.
      MOVE-CORRESPONDING wa_file TO wa_file_cc2.
      APPEND wa_file_cc2 TO i_file_cc2.
      CLEAR wa_file_cc2.
    ENDLOOP.
    SELECT aufnr bukrs astkz FROM coas INTO TABLE i_coas FOR ALL ENTRIES IN i_file_cc2 WHERE aufnr = i_file_cc2-charge_type .
  ENDIF.

*{Begin of CSURYAWANSHI-09142020 : Defect 15373

* Set India flag based on company code identificaiton based on Cost Center
*  LOOP AT i_csks ASSIGNING FIELD-SYMBOL(<fs_csks>) WHERE bukrs = '2130'.

  " start of chnages of rirawat defect 18887
  REFRESH: r_india_cc.
  CALL FUNCTION 'ZEXTRACT_TVARVC'
    EXPORTING
      i_name   = c_india_cc
    TABLES
      t_selopt = r_india_cc.
  "end of changes of rirawat defect 18887
  LOOP AT i_csks ASSIGNING FIELD-SYMBOL(<fs_csks>) WHERE bukrs IN r_india_cc.  " added by rirawat defect 18887
    v_india_flg = c_x.
    EXIT.
  ENDLOOP.
* Set India flag based on company code identificaiton based on WBS
*  LOOP AT i_prps ASSIGNING FIELD-SYMBOL(<fs_prps>) WHERE pbukr = '2130'.
  LOOP AT i_prps ASSIGNING FIELD-SYMBOL(<fs_prps>) WHERE pbukr IN r_india_cc.   " added by rirawat defect 18887
    v_india_flg = c_x.
    EXIT.
  ENDLOOP.
* Set India flag based on company code identificaiton based on Internal order
*  LOOP AT i_coas ASSIGNING FIELD-SYMBOL(<fs_coas>) WHERE bukrs = '2130'.
  LOOP AT i_coas ASSIGNING FIELD-SYMBOL(<fs_coas>) WHERE bukrs IN r_india_cc.  " added by rirawat defect 18887
    v_india_flg = c_x.
    EXIT.
  ENDLOOP.

* Get Profit Center and Internal Orders for India from cross ref. table ZGGD_GEN_XREF
  SELECT
     identifier                                    " Xreference Identifier
     refkey1                                       " Cross reference Key   ( Corproate card used for payment of expenses )
     refkey2                                       " Cross reference Key   ( Company code of Employee in expense reprot )
     ref1                                          " Cross Reference Field ( Comp code of Corporate Card )
  FROM zggd_gen_xref                               " Generic Cross reference
  INTO TABLE it_ind_bspl
  WHERE identifier IN ( c_identif_bs , c_identif_pl ).                " Xreference Identifier
  IF sy-subrc = 0.
    SORT it_ind_bspl BY identifier
                        refkey1
                        refkey2 .
  ENDIF.
* Fetch all GL accounts in 2101 company code
  SELECT
    bukrs	"	Company Code
    saknr	"	G/L Account Number
  FROM skb1
  INTO TABLE i_skb1
  WHERE bukrs = c_ind_compcode.
  IF sy-subrc = 0.

    SORT i_skb1 BY bukrs.

* Fetch GL account master to check if the account is Balance Sheet account or Profit Center account
    SELECT
      ktopl	"	Chart of Accounts
      saknr	"	G/L Account Number
      xbilk	"	Indicator: Account Is a Balance Sheet Account?
      sakan	"	G/L account number, significant length
      gvtyp	"	P&L Statement Account Type
      xloev	"	Indicator: Account marked for deletion?
     FROM ska1
     INTO TABLE i_ska1
     FOR ALL ENTRIES IN i_skb1
     WHERE ktopl = c_ktopl
      AND  saknr = i_skb1-saknr
      AND  xloev <> c_x.
    IF sy-subrc = 0.
      SORT i_ska1 BY saknr.
    ENDIF.

  ENDIF.

* Get Employee organization key from employee master
  IF i_pa0032[] IS NOT INITIAL.
    SELECT
      pernr	"	Personnel number
      subty	"	Subtype
      objps	"	Object Identification
      sprps	"	Lock Indicator for HR Master Data Record
      endda	"	End Date
      begda	"	Start Date
      seqnr	"	Number of Infotype Record with Same Key
      vdsk1	"	Organizational Key
    FROM pa0001
      INTO TABLE i_org_keys
      FOR ALL ENTRIES IN i_pa0032
      WHERE pernr = i_pa0032-pernr.
    IF sy-subrc = 0.
      SORT i_org_keys BY pernr endda DESCENDING begda DESCENDING.
    ENDIF.
  ENDIF.
*}End of CSURYAWANSHI-09142020 : Defect 15373

ENDFORM.                    " FETCH_COMPANY_CODES
*&---------------------------------------------------------------------*
*&      Form  FETCH_WBS_SUFFIX
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fetch_wbs_suffix .
  SELECT exp_type suffix FROM zflgi_exp_wbs INTO TABLE i_wbs. " No Key. All records wanted.
ENDFORM.                    " FETCH_WBS_SUFFIX
*&---------------------------------------------------------------------*
*&      Form  FETCH_PERNR
*&---------------------------------------------------------------------*
FORM fetch_pernr .
  REFRESH i_pa0032.
  SELECT pernr pnalt endda FROM pa0032 INTO TABLE i_pa0032 FOR ALL ENTRIES IN i_file WHERE pnalt = i_file-pernr."AND ENDDA EQ '99991231'. " Defect 3398
  SORT i_pa0032 BY endda DESCENDING. "Defect 3840

* Begin of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271
* If employee belong to Original First Data
  IF v_ofd_flag = c_x.
* Get HR Infotype 0001 data for employee
    IF i_pa0032[] IS NOT INITIAL.
      SELECT
        pernr         " Personnel number
        endda         " End Date
        begda         " Start Date
        bukrs         " Company Code
        kostl         " Cost Center
      FROM pa0001
      INTO TABLE i_pa0001
      FOR ALL ENTRIES IN i_pa0032
      WHERE pernr = i_pa0032-pernr.
      IF sy-subrc = 0.
        SORT i_pa0001 BY endda DESCENDING.
* Get cost center master data for company code , profit center values
        SELECT
          kokrs       " Controlling Area
          kostl       " Cost Center
          datbi       " Valid To Date
          bukrs       " Company Code
          prctr       " Profit Center
        FROM csks     " Cost Center Master Data
        INTO TABLE i_csks_ofd
        FOR ALL ENTRIES IN i_pa0001
        WHERE kostl = i_pa0001-kostl AND
              datbi GE sy-datum     AND
              datab LE sy-datum.
        IF sy-subrc = 0.
          SORT i_csks_ofd BY kostl.
        ENDIF.

      ENDIF.
    ENDIF.
    " start of defect 17587 rirawat 12/23/2021
    LOOP AT i_file ASSIGNING FIELD-SYMBOL(<fs_file1>).
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = <fs_file1>-temp18
        IMPORTING
          output = <fs_file1>-temp18.
    ENDLOOP.
    " end of defect 17587 rirawat 12/23/2021
* Get cost centers based on cost center charged
    IF i_file[] IS NOT INITIAL.
      SELECT
        kokrs       " Controlling Area
        kostl       " Cost Center
        datbi       " Valid To Date
        bukrs       " Company Code
        prctr       " Profit Center
      FROM csks     " Cost Center Master Data
      APPENDING TABLE i_csks_ofd
      FOR ALL ENTRIES IN i_file
      WHERE kostl = i_file-temp18 AND
            datbi GE sy-datum     AND
            datab LE sy-datum.
      IF sy-subrc = 0.
        SORT i_csks_ofd BY kostl.
        DELETE ADJACENT DUPLICATES FROM i_csks_ofd COMPARING kostl.
      ENDIF.
    ENDIF.

  ENDIF.
* End of addition by CSURYAWANSHI on 07/08/2020 : Defect 15271

ENDFORM.                    " FETCH_PERNR
*&---------------------------------------------------------------------*
*&      Form  FETCH_GUI_UPLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fetch_gui_upload .
  DATA : l_file TYPE string.
  l_file = v_filename.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                = l_file
      filetype                = 'ASC'
*     HAS_FIELD_SEPARATOR     = ','
*     HEADER_LENGTH           = 0
*     READ_BY_LINE            = 'X'
*     DAT_MODE                = ' '
*     CODEPAGE                = ' '
*     IGNORE_CERR             = ABAP_TRUE
*     REPLACEMENT             = '#'
*     CHECK_BOM               = ' '
*     VIRUS_SCAN_PROFILE      =
*     NO_AUTH_CHECK           = ' '
*     IMPORTING
*     FILELENGTH              =
*     HEADER                  =
    TABLES
      data_tab                = i_data_rec
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      OTHERS                  = 17.

  LOOP AT i_data_rec INTO wa_data.
    SPLIT wa_data AT ',' INTO
             wa_inter-type
             wa_inter-batch_id
             wa_inter-batch_date
             wa_inter-batch_seq
             wa_inter-pernr
             wa_inter-rest.

    APPEND wa_inter TO t_inter.
    CLEAR wa_inter.
  ENDLOOP.
  DELETE t_inter INDEX 1.

ENDFORM.                    " FETCH_GUI_UPLOAD

*{ BEGING OF LMORALES Defect 9763
*Get the Barclays Vendor from STVARV variables Z_PTP_LIFNR_CC_SEPA and Z_PTP_LIFNR_CC
* With the vendor number read LFB1 to get GL from field AKONT
*{ BEGING OF LMORALES Defect 10068
*FORM f_fetch_vendor.
FORM f_fetch_vendor USING    us_ccode  TYPE bukrs
                    CHANGING ch_vendor TYPE lifnr
                             ch_akont  TYPE akont.
*{ END OF LMORALES Defect 10068

*Constants from the STVARV
  CONSTANTS: c_sepa TYPE char30 VALUE 'Z_PTP_LIFNR_CC_SEPA',
             c_cc   TYPE char30 VALUE 'Z_PTP_LIFNR_CC'.

  DATA: r_vendor_cepa TYPE STANDARD TABLE OF selopt,
        r_vendor_cc   TYPE STANDARD TABLE OF selopt.

  DATA: wa_vendor_record TYPE y_vendor_record.

  DATA: l_waers TYPE t001-waers.   "LMORALES Defect 10068

  FIELD-SYMBOLS: <fs_vendor_record> TYPE y_vendor_record,
                 <fs_lfb1>          TYPE y_lfb1,
                 <fs_cepa>          TYPE selopt,
                 <fs_cc>            TYPE selopt.

  CLEAR:  wa_vendor_record.

  FREE: i_vendor_record,
        r_vendor_cepa,
        r_vendor_cc.

*{ BEGING OF LMORALES Defect 10068

  SELECT SINGLE waers
           FROM t001
           INTO l_waers
          WHERE bukrs EQ us_ccode.

  IF sy-subrc EQ 0.

  ENDIF.

  CHECK l_waers IS NOT INITIAL.

  IF l_waers EQ TEXT-eur.

    CALL FUNCTION 'ZEXTRACT_TVARVC'
      EXPORTING
        i_name   = c_sepa
      TABLES
        t_selopt = r_vendor_cepa.

    IF sy-subrc EQ 0.

      LOOP AT r_vendor_cepa
        ASSIGNING <fs_cepa>.

        MOVE <fs_cepa>-low TO ch_vendor.

      ENDLOOP.

    ENDIF.

  ELSEIF l_waers EQ TEXT-gbp.

    CALL FUNCTION 'ZEXTRACT_TVARVC'
      EXPORTING
        i_name   = c_cc
      TABLES
        t_selopt = r_vendor_cc.

    IF sy-subrc EQ 0.

      LOOP AT r_vendor_cc
        ASSIGNING <fs_cc>.

        MOVE <fs_cc>-low TO ch_vendor.

      ENDLOOP.

    ENDIF.

  ENDIF.

  SELECT SINGLE akont
    FROM lfb1
    INTO ch_akont
   WHERE lifnr EQ ch_vendor.

  IF sy-subrc EQ 0.

  ENDIF.

*DISABLE logic LORALES Defect 10068
** For currency EUR Use vendor in Z_PTP_LIFNR_CC_SEPA
*  CALL FUNCTION 'ZEXTRACT_TVARVC'
*    EXPORTING
*      i_name   = c_sepa
*    TABLES
*      t_selopt = r_vendor_cepa.
*
*  IF sy-subrc EQ 0.
*
*    LOOP AT r_vendor_cepa
*      ASSIGNING <fs_cepa>.
*
*      MOVE <fs_cepa>-low TO wa_vendor_record-lifnr.
*
*      MOVE text-eur TO wa_vendor_record-reimb_curr1.
*
*      APPEND wa_vendor_record TO i_vendor_record.
*
*    ENDLOOP.
*
*  ENDIF.

* For currency GBP Use vendor in Z_PTP_LIFNR_CC
*  CLEAR wa_vendor_record.
*
*  CALL FUNCTION 'ZEXTRACT_TVARVC'
*    EXPORTING
*      i_name   = c_cc
*    TABLES
*      t_selopt = r_vendor_cc.
*
*  IF sy-subrc EQ 0.
*
*    LOOP AT r_vendor_cc
*      ASSIGNING <fs_cc>.
*
*      MOVE <fs_cc>-low TO wa_vendor_record-lifnr.
*
*      MOVE text-gbp TO wa_vendor_record-reimb_curr1.
*
*      APPEND wa_vendor_record TO i_vendor_record.
*
*    ENDLOOP.
*
*  ENDIF.
*
*  CHECK i_vendor_record[] IS NOT INITIAL.
*
*  SELECT lifnr
*         akont
*    FROM lfb1
*    INTO TABLE i_lfb1
*    FOR ALL ENTRIES IN i_vendor_record
*   WHERE lifnr EQ i_vendor_record-lifnr.
*
*  IF sy-subrc EQ 0.
*
*    LOOP AT i_vendor_record
*      ASSIGNING <fs_vendor_record>.
*
*      UNASSIGN <fs_lfb1>.
*
*      READ TABLE i_lfb1
*        ASSIGNING <fs_lfb1>
*        WITH KEY lifnr = <fs_vendor_record>-lifnr.
*
*      IF sy-subrc EQ 0
*     AND <fs_lfb1> IS ASSIGNED.
*
*        MOVE <fs_lfb1>-akont TO <fs_vendor_record>-akont.
*
*      ENDIF.
*
*    ENDLOOP.
*
*  ENDIF.
*{ END OF LMORALES Defect 10068

ENDFORM.
*} END OF LMORALES Defect 9763

*{ BEGING OF LMORALES Defect 10276
FORM f_fetch_vendor_pnc USING    us_ccode  TYPE bukrs
                        CHANGING ch_vendor TYPE lifnr
                                 ch_akont  TYPE akont
                                 ch_empfb  TYPE empfb.

*Constants from the STVARV
  CONSTANTS: c_pnc    TYPE char30 VALUE 'Z_PTP_LIFNR_CC_PNC',
             c_pnc_ca TYPE char30 VALUE 'Z_PTP_LIFNR_CC_PNC_CAN',
             c_pnc_us TYPE char30 VALUE 'Z_PTP_LIFNR_CC_PNC_US'.

  DATA: r_pnc    TYPE STANDARD TABLE OF selopt,
        r_pnc_ca TYPE STANDARD TABLE OF selopt,
        r_pnc_us TYPE STANDARD TABLE OF selopt.

  DATA: l_land1 TYPE t001-land1.

  FIELD-SYMBOLS: <fs_pnc>    TYPE selopt,
                 <fs_pnc_ca> TYPE selopt,
                 <fs_pnc_us> TYPE selopt.

  FREE: r_pnc,
        r_pnc_ca,
        r_pnc_us.

  CLEAR l_land1.

  IF  wa_file-temp13 EQ TEXT-pnu
  OR  wa_file-temp15 EQ TEXT-pnu.

    SELECT SINGLE land1
             FROM t001
             INTO l_land1
            WHERE bukrs EQ us_ccode.

    IF sy-subrc EQ 0.

    ENDIF.

    IF l_land1 EQ TEXT-030.

      CALL FUNCTION 'ZEXTRACT_TVARVC'
        EXPORTING
          i_name   = c_pnc
        TABLES
          t_selopt = r_pnc.

      IF sy-subrc EQ 0.

        LOOP AT r_pnc
          ASSIGNING <fs_pnc>.

          MOVE <fs_pnc>-low TO ch_vendor.

        ENDLOOP.

      ENDIF.

      CALL FUNCTION 'ZEXTRACT_TVARVC'
        EXPORTING
          i_name   = c_pnc_us
        TABLES
          t_selopt = r_pnc_us.

      IF sy-subrc EQ 0.

        LOOP AT r_pnc_us
          ASSIGNING <fs_pnc_us>.

          MOVE <fs_pnc_us>-low TO ch_empfb.

        ENDLOOP.

      ENDIF.

    ELSE.

      MOVE c_e TO wa_log-msgtype.

      CONCATENATE c_e
                  wa_file-repid
             INTO wa_log-reference.

      CONCATENATE TEXT-e03
                  us_ccode
                  TEXT-e04
             INTO wa_log-message
             SEPARATED BY space.

      APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
      wa_logref-repid = wa_file-repid.
      APPEND wa_logref TO i_logref.
      CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
      CLEAR wa_log.

      v_posting_flag = 'X'.

    ENDIF.

  ELSEIF wa_file-temp13 EQ TEXT-pnc
      OR wa_file-temp15 EQ TEXT-pnc.


    SELECT SINGLE land1
             FROM t001
             INTO l_land1
            WHERE bukrs EQ us_ccode.

    IF sy-subrc EQ 0.

    ENDIF.

    IF l_land1 EQ TEXT-031.

      CALL FUNCTION 'ZEXTRACT_TVARVC'
        EXPORTING
          i_name   = c_pnc
        TABLES
          t_selopt = r_pnc.

      IF sy-subrc EQ 0.

        LOOP AT r_pnc
          ASSIGNING <fs_pnc>.

          MOVE <fs_pnc>-low TO ch_vendor.

        ENDLOOP.

      ENDIF.

      CALL FUNCTION 'ZEXTRACT_TVARVC'
        EXPORTING
          i_name   = c_pnc_ca
        TABLES
          t_selopt = r_pnc_ca.

      IF sy-subrc EQ 0.

        LOOP AT r_pnc_ca
          ASSIGNING <fs_pnc_ca>.

          MOVE <fs_pnc_ca>-low TO ch_empfb.

        ENDLOOP.

      ENDIF.

    ELSE.

      MOVE c_e TO wa_log-msgtype.

      CONCATENATE c_e
                  wa_file-repid
             INTO wa_log-reference.

      CONCATENATE TEXT-e03
                  us_ccode
                  TEXT-e05
             INTO wa_log-message
             SEPARATED BY space..

      APPEND wa_log TO i_log.
* Begin of Changes SAKOTA I118 DS4K901193
      wa_logref-repid = wa_file-repid.
      APPEND wa_logref TO i_logref.
      CLEAR wa_logref.
* end of Changes SAKOTA I118 DS4K901193
      CLEAR wa_log.

      v_posting_flag = 'X'.

    ENDIF.

  ENDIF.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = ch_empfb
    IMPORTING
      output = ch_empfb.

  IF sy-subrc EQ 0.

  ENDIF.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = ch_vendor
    IMPORTING
      output = ch_vendor.

  IF sy-subrc EQ 0.

  ENDIF.


  SELECT SINGLE akont
    FROM lfb1
    INTO ch_akont
   WHERE lifnr EQ ch_vendor.

  IF sy-subrc EQ 0.

  ENDIF.

  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = ch_akont
    IMPORTING
      output = ch_akont.

  IF sy-subrc EQ 0.

  ENDIF.

ENDFORM.
*{ END OF LMORALES Defect 10276
*&---------------------------------------------------------------------*
*&      Form  REDETERMINE_PC_IO_VIA_BS_PL
*&---------------------------------------------------------------------*
*       Modify Profit Center or Internal order for India based employees
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM redetermine_pc_io_via_bs_pl .

  DATA : l_pernr      TYPE persno,
         l_vdskl      TYPE vdsk1,
         l_identifier TYPE zzidentifier.

* Check in ZM documents
  IF i_account_gl[] IS NOT INITIAL.
* Get PERNR
    READ TABLE i_extension2 ASSIGNING FIELD-SYMBOL(<fs_extension>) INDEX 1.
    IF sy-subrc = 0.
* get personnel number
      l_pernr = <fs_extension>-valuepart2 .

* Get org key
      READ TABLE i_org_keys ASSIGNING FIELD-SYMBOL(<fs_org_keys>) WITH KEY pernr = l_pernr .
      IF sy-subrc = 0.
        l_vdskl = <fs_org_keys>-vdsk1.
      ENDIF.

      LOOP AT i_account_gl ASSIGNING FIELD-SYMBOL(<fs_account_gl>).
        CLEAR : l_identifier.

* Unassign field symbols
        IF <fs_ska1> IS ASSIGNED.
          UNASSIGN : <fs_ska1>.
        ENDIF.
        IF <fs_ind_bs> IS ASSIGNED.
          UNASSIGN <fs_ind_bs>.
        ENDIF.
        IF <fs_ind_pl> IS ASSIGNED.
          UNASSIGN <fs_ind_pl>.
        ENDIF.

* Check GL account if Balance Sheet or Profit / Loss account
        READ TABLE i_ska1 ASSIGNING <fs_ska1> WITH KEY saknr = <fs_account_gl>-gl_account BINARY SEARCH.
        IF sy-subrc = 0.
          IF <fs_ska1>-xbilk = 'X'.
* GL is Balance Sheet account and set the identifier as CORP_BS
            l_identifier = c_identif_bs.
* Get profit center from cross ref. table as per identifier , company code and org. key
            READ TABLE it_ind_bspl ASSIGNING <fs_ind_bs> WITH KEY identifier = l_identifier
                                                                  refkey1    = v_header-comp_code
                                                                  refkey2    = l_vdskl
                                                                  BINARY SEARCH.
            IF sy-subrc = 0.
* Modify Profit Center as per cross ref. entry and convert it to internal format
              <fs_account_gl>-profit_ctr = <fs_ind_bs>-ref1.

              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = <fs_account_gl>-profit_ctr
                IMPORTING
                  output = <fs_account_gl>-profit_ctr.

            ENDIF.

          ELSEIF <fs_ska1>-gvtyp = 'X'.
* GL is Profit & Loss account and set the identifier as CORP_PL
            l_identifier = c_identif_pl.
* Get Internal order from cross ref. table as per identifier , company code and org. key
            READ TABLE it_ind_bspl ASSIGNING <fs_ind_pl> WITH KEY identifier = l_identifier
                                                                  refkey1    = v_header-comp_code
                                                                  refkey2    = l_vdskl
                                                                  BINARY SEARCH.
            IF sy-subrc = 0.
* Modify Internal order as per cross ref. table entry and convert it to internal format
              <fs_account_gl>-orderid =  <fs_ind_pl>-ref1.

              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = <fs_account_gl>-orderid
                IMPORTING
                  output = <fs_account_gl>-orderid.

            ENDIF.
          ENDIF.
        ENDIF.

      ENDLOOP.

* Unassign field symbols

      IF <fs_extension> IS ASSIGNED.
        UNASSIGN <fs_extension>.
      ENDIF.

      IF <fs_org_keys> IS ASSIGNED.
        UNASSIGN <fs_org_keys>.
      ENDIF.

      IF <fs_account_gl> IS ASSIGNED.
        UNASSIGN <fs_account_gl>.
      ENDIF.

    ENDIF.
  ENDIF.

  CLEAR : l_pernr       ,
          l_vdskl       ,
          l_identifier  .

* Check for card payments
* Check in ZM documents
  IF i_account_gl_new[] IS NOT INITIAL.
* Get PERNR
    READ TABLE i_extension2_new ASSIGNING FIELD-SYMBOL(<fs_extension_new>) INDEX 1.
    IF sy-subrc = 0.
* get personnel number
      l_pernr = <fs_extension_new>-valuepart2 .

* Get org key
      READ TABLE i_org_keys ASSIGNING FIELD-SYMBOL(<fs_org_keys_new>) WITH KEY pernr = l_pernr .
      IF sy-subrc = 0.
        l_vdskl = <fs_org_keys_new>-vdsk1.
      ENDIF.

      LOOP AT i_account_gl_new ASSIGNING FIELD-SYMBOL(<fs_account_gl_new>).

        CLEAR : l_identifier.

* Unassign field symbols
        IF <fs_ska1_new> IS ASSIGNED.
          UNASSIGN : <fs_ska1_new>.
        ENDIF.
        IF <fs_ind_bs_new> IS ASSIGNED.
          UNASSIGN <fs_ind_bs_new>.
        ENDIF.
        IF <fs_ind_pl_new> IS ASSIGNED.
          UNASSIGN <fs_ind_pl_new>.
        ENDIF.

* Check GL account if Balance Sheet or Profit / Loss account
        READ TABLE i_ska1 ASSIGNING <fs_ska1_new> WITH KEY saknr = <fs_account_gl_new>-gl_account BINARY SEARCH.
        IF sy-subrc = 0.
          IF <fs_ska1_new>-xbilk = 'X'.
* GL is Balance Sheet account and set the identifier as CORP_BS
            l_identifier = c_identif_bs.
* Get profit center from cross ref. table as per identifier , company code and org. key
            READ TABLE it_ind_bspl ASSIGNING <fs_ind_bs_new> WITH KEY identifier = l_identifier
                                                                      refkey1    = v_header-comp_code
                                                                      refkey2    = l_vdskl
                                                                      BINARY SEARCH.
            IF sy-subrc = 0.
* Modify Profit Center as per cross ref. entry and convert it to internal format
              <fs_account_gl_new>-profit_ctr = <fs_ind_bs_new>-ref1.

              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = <fs_account_gl_new>-profit_ctr
                IMPORTING
                  output = <fs_account_gl_new>-profit_ctr.

            ENDIF.

          ELSEIF <fs_ska1_new>-gvtyp = 'X'.
* GL is Profit & Loss account and set the identifier as CORP_PL
            l_identifier = c_identif_pl.
* Get Internal order from cross ref. table as per identifier , company code and org. key
            READ TABLE it_ind_bspl ASSIGNING <fs_ind_pl_new> WITH KEY identifier = l_identifier
                                                                      refkey1    = v_header-comp_code
                                                                      refkey2    = l_vdskl
                                                                      BINARY SEARCH.
            IF sy-subrc = 0.
* Modify Internal order as per cross ref. table entry and convert it to internal format
              <fs_account_gl_new>-orderid = <fs_ind_pl_new>-ref1.

              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = <fs_account_gl_new>-orderid
                IMPORTING
                  output = <fs_account_gl_new>-orderid.

            ENDIF.
          ENDIF.
        ENDIF.

      ENDLOOP.

* Unassign field symbols

      IF <fs_extension_new> IS ASSIGNED.
        UNASSIGN <fs_extension_new>.
      ENDIF.

      IF <fs_org_keys_new> IS ASSIGNED.
        UNASSIGN <fs_org_keys_new>.
      ENDIF.

      IF <fs_account_gl_new> IS ASSIGNED.
        UNASSIGN <fs_account_gl_new>.
      ENDIF.

    ENDIF.

  ENDIF.

  CLEAR : l_pernr       ,
          l_vdskl       ,
          l_identifier  .

* Check for employee payments

* Check in ZN documents
  IF i_account_gl_emp[] IS NOT INITIAL.
* Get PERNR
    READ TABLE i_extension2_emp ASSIGNING FIELD-SYMBOL(<fs_extension_emp>) INDEX 1.
    IF sy-subrc = 0.
* get personnel number
      l_pernr = <fs_extension_emp>-valuepart2 .

* Get org key
      READ TABLE i_org_keys ASSIGNING FIELD-SYMBOL(<fs_org_keys_emp>) WITH KEY pernr = l_pernr .
      IF sy-subrc = 0.
        l_vdskl = <fs_org_keys_emp>-vdsk1.
      ENDIF.

* Unassign field symbols
      IF <fs_ska1_emp> IS ASSIGNED.
        UNASSIGN : <fs_ska1_emp>.
      ENDIF.
      IF <fs_ind_bs_emp> IS ASSIGNED.
        UNASSIGN <fs_ind_bs_emp>.
      ENDIF.
      IF <fs_ind_pl_emp> IS ASSIGNED.
        UNASSIGN <fs_ind_pl_emp>.
      ENDIF.

      LOOP AT i_account_gl_emp ASSIGNING FIELD-SYMBOL(<fs_account_gl_emp>).
        CLEAR : l_identifier.
* Check GL account if Balance Sheet or Profit / Loss account
        READ TABLE i_ska1 ASSIGNING <fs_ska1_emp> WITH KEY saknr = <fs_account_gl_emp>-gl_account BINARY SEARCH.
        IF sy-subrc = 0.
          IF <fs_ska1_emp>-xbilk = 'X'.
* GL is Balance Sheet account and set the identifier as CORP_BS
            l_identifier = c_identif_bs.
* Get profit center from cross ref. table as per identifier , company code and org. key
            READ TABLE it_ind_bspl ASSIGNING <fs_ind_bs_emp> WITH KEY identifier = l_identifier
                                                                      refkey1    = v_header-comp_code
                                                                      refkey2    = l_vdskl
                                                                      BINARY SEARCH.
            IF sy-subrc = 0.
* Modify Profit Center as per cross ref. entry and convert it to internal format
              <fs_account_gl_emp>-profit_ctr = <fs_ind_bs_emp>-ref1.

              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = <fs_account_gl_emp>-profit_ctr
                IMPORTING
                  output = <fs_account_gl_emp>-profit_ctr.

            ENDIF.

          ELSEIF <fs_ska1_emp>-gvtyp = 'X'.
* GL is Profit & Loss account and set the identifier as CORP_PL
            l_identifier = c_identif_pl.
* Get Internal order from cross ref. table as per identifier , company code and org. key
            READ TABLE it_ind_bspl ASSIGNING <fs_ind_pl_emp> WITH KEY  identifier = l_identifier
                                                                       refkey1    = v_header-comp_code
                                                                       refkey2    = l_vdskl
                                                                       BINARY SEARCH.
            IF sy-subrc = 0.
* Modify Internal order as per cross ref. table entry and convert it to internal format
              <fs_account_gl_emp>-orderid = <fs_ind_pl_emp>-ref1.
              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = <fs_account_gl_emp>-orderid
                IMPORTING
                  output = <fs_account_gl_emp>-orderid.


            ENDIF.
          ENDIF.
        ENDIF.

      ENDLOOP.

* Unassign field symbols
      IF <fs_extension_emp> IS ASSIGNED.
        UNASSIGN <fs_extension_emp>.
      ENDIF.

      IF <fs_org_keys_emp> IS ASSIGNED.
        UNASSIGN <fs_org_keys_emp>.
      ENDIF.

      IF <fs_account_gl_emp> IS ASSIGNED.
        UNASSIGN <fs_account_gl_emp>.
      ENDIF.

    ENDIF.

  ENDIF.

  CLEAR : l_pernr       ,
          l_vdskl       ,
          l_identifier  .

ENDFORM.
* Begin of Changes SAKOTA I118 DS4K901193
*---------------------------------------------------------------------*
*       MODULE STATUS_0100 OUTPUT                                             *
*---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.

  SET PF-STATUS 'MAIN'.
  IF g_custom_container IS INITIAL.

    SORT i_logref.
    SORT i_file BY batch_seq.
    DELETE ADJACENT DUPLICATES FROM i_logref.

    LOOP AT i_logref INTO wa_logref.
      READ TABLE i_file INTO wa_file WITH KEY repid = wa_logref-repid.
      IF sy-subrc = 0.
        APPEND wa_file TO i_errorfile.
        CLEAR wa_file.
      ENDIF.
      CLEAR wa_logref.
    ENDLOOP.
    PERFORM build_fieldcatalog USING wa_file.

    CREATE OBJECT g_custom_container
      EXPORTING
        container_name = g_container.

    CREATE OBJECT wa_grid1
      EXPORTING
        i_parent = g_custom_container.

    CALL METHOD wa_grid1->set_table_for_first_display
      CHANGING
        it_outtab                     = i_errorfile "i_file
        it_fieldcatalog               = i_fcat
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                  WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
    IF p_appl = 'X' AND NOT p_email IS INITIAL AND NOT i_errorfile IS INITIAL.
      PERFORM create_content.
      PERFORM send_error_records_email.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE ok_code.
    WHEN 'EXIT'.
      PERFORM exit_program.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN OTHERS.
*     do nothing
  ENDCASE.
  CLEAR ok_code.
ENDMODULE.
*---------------------------------------------------------------------*
*       FORM EXIT_PROGRAM                                             *
*---------------------------------------------------------------------*
FORM exit_program.
  LEAVE PROGRAM.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  build_fieldcatalog
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_WA_REPORT  text
*----------------------------------------------------------------------*
FORM build_fieldcatalog  USING    p_wa_report TYPE any.

* Determine structure descriptor
  TRY.
      wa_obj_stdesc ?= cl_abap_structdescr=>describe_by_data( p_wa_report ).
    CATCH cx_root.
      RAISE no_field_catalog.
  ENDTRY.

* Get structure fields
  DATA(i_fields) = wa_obj_stdesc->get_included_view( ).
* Build field catalog
  LOOP AT i_fields INTO DATA(wa_fields).
    CLEAR: wa_fldcat.
    wa_fldcat-col_pos   = sy-tabix.
    wa_fldcat-fieldname = wa_fields-name.
    IF wa_fields-type->is_ddic_type( ) IS NOT INITIAL.
      DATA(lv_desc)            = wa_fields-type->get_ddic_header( ).
      wa_fldcat-rollname = lv_desc-tabname.
    ELSE.
      wa_fldcat-inttype  = wa_fields-type->type_kind.
      wa_fldcat-intlen   = wa_fields-type->length.
      wa_fldcat-decimals = wa_fields-type->decimals.
    ENDIF.
    wa_fldcat-scrtext_m = wa_fields-name.
    APPEND wa_fldcat TO i_fcat.
  ENDLOOP.

  IF i_fcat IS INITIAL.
    RAISE no_field_catalog.
  ENDIF.
ENDFORM.                    " BUILD_FIELDCATALOG

*&---------------------------------------------------------------------*
*& Form verify_email
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM verify_email .

  TYPES: sx_addr_type TYPE sx_addrtyp, "R/3 Addresstype
         sx_addr      TYPE so_rec_ext . "Address in plain string

  TYPES: BEGIN OF sx_address,           "SAPconnect general addr
           type    TYPE sx_addr_type,
           address TYPE sx_addr,
         END OF sx_address.

  CONSTANTS: cx_t_int    TYPE sx_addr_type VALUE 'INT'.  "SMTP address

  DATA: ls_addr_unst      TYPE sx_address.
  DATA: ls_addr           TYPE sx_address.
  DATA: lv_address_normal TYPE sx_address.
  DATA: lv_local          TYPE sx_addr.
  DATA: lv_domain         TYPE sx_addr.
  DATA: lv_comment        TYPE sx_addr.

  ls_addr_unst-type    = cx_t_int.
  ls_addr_unst-address = p_email. " P_email : input

  CALL FUNCTION 'SX_INTERNET_ADDRESS_TO_NORMAL'
    EXPORTING
      address_unstruct     = ls_addr_unst
    IMPORTING
      address_normal       = lv_address_normal
      local                = lv_local
      domain               = lv_domain
      comment              = lv_comment
      addr_normal_no_upper = ls_addr
    EXCEPTIONS
      error_address_type   = 1
      error_address        = 2
      error_group_address  = 3
      OTHERS               = 4.
  IF sy-subrc NE 0 .
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_content
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_content .

  DATA(i_fields) = wa_obj_stdesc->get_included_view( ).

  CONSTANTS:
    gc_tab  TYPE c VALUE cl_bcs_convert=>gc_tab,
    gc_crlf TYPE c VALUE cl_bcs_convert=>gc_crlf.


*data binary_content type solix_tab.
*data size           type so_obj_len.





*  concatenate 'This Is Error WERCA file !'                  "#EC NOTEXT
*              gc_crlf gc_crlf
*              into lv_string.

* data header
  LOOP AT i_header ASSIGNING FIELD-SYMBOL(<fs_header>).
    DO.
      ASSIGN COMPONENT sy-index OF STRUCTURE <fs_header> TO FIELD-SYMBOL(<fs_header_val>).
      IF sy-subrc = 0.
        lv_string = |{ lv_string }| && |{ gc_tab }| && |{ <fs_header_val> }|.
      ELSE.
        lv_string = |{ lv_string }| && |{ gc_crlf }|.
        EXIT.
      ENDIF.
    ENDDO.

  ENDLOOP.

* data lines
*  LOOP AT i_file ASSIGNING FIELD-SYMBOL(<fs_file>).
  LOOP AT i_errorfile ASSIGNING FIELD-SYMBOL(<fs_file>).
    DO.
      ASSIGN COMPONENT sy-index OF STRUCTURE <fs_file> TO FIELD-SYMBOL(<fs_val>).
      IF sy-subrc = 0.
        lv_string = |{ lv_string }| && |{ gc_tab }| && |{ <fs_val> }|.
      ELSE.
        lv_string = |{ lv_string }| && |{ gc_crlf }|.
        EXIT.
      ENDIF.
    ENDDO.
  ENDLOOP.

  TRY.
      cl_bcs_convert=>string_to_solix(
        EXPORTING
          iv_string   = lv_string
          iv_codepage = '4103'  "suitable for MS Excel, leave empty
          iv_add_bom  = 'X'     "for other doc types
        IMPORTING
          et_solix  = binary_content
          ev_size   = size ).
    CATCH cx_bcs.
      MESSAGE e445(so).
  ENDTRY.

ENDFORM.                                "create_content
*&---------------------------------------------------------------------*
*& Form send_error_records_email
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM send_error_records_email .



  TRY.

*     -------- create persistent send request ------------------------
      send_request = cl_bcs=>create_persistent( ).

*     -------- create and set document with attachment ---------------
*     create document object from internal table with text
      APPEND 'Hello,' TO main_text.                         "#EC NOTEXT
      document = cl_document_bcs=>create_document(
        i_type    = 'RAW'
        i_text    = main_text
        i_subject = 'Error WERCA Records' ).                "#EC NOTEXT

*     add the spread sheet as attachment to document object
      document->add_attachment(
        i_attachment_type    = 'xls'                        "#EC NOTEXT
        i_attachment_subject = 'WERCA_Error_Records'        "#EC NOTEXT
        i_attachment_size    = size
        i_att_content_hex    = binary_content ).

*     add document object to send request
      send_request->set_document( document ).

*     --------- add recipient (e-mail address) -----------------------
*     create recipient object
      recipient = cl_cam_address_bcs=>create_internet_address( p_email ).

*     add recipient object to send request
      send_request->add_recipient( recipient ).

*     ---------- send document ---------------------------------------
      sent_to_all = send_request->send( i_with_error_screen = 'X' ).

      COMMIT WORK.

      IF sent_to_all IS INITIAL.
        MESSAGE i500(sbcoms) WITH p_email.
      ELSE.
        MESSAGE s022(so).
      ENDIF.

*   ------------ exception handling ----------------------------------
*   replace this rudimentary exception handling with your own one !!!
    CATCH cx_bcs INTO bcs_exception.
      MESSAGE i865(so) WITH bcs_exception->error_type.
  ENDTRY.

ENDFORM.                                   "send_error_records_email
* End of Changes SAKOTA I118 DS4K901193
